<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frontends on 时光小栈</title>
    <link>/frontend/</link>
    <description>Recent content in Frontends on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 23 Apr 2019 16:03:21 +0800</lastBuildDate>
    
	<atom:link href="/frontend/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>js nojquery</title>
      <link>/frontend/js/js-nojquery/</link>
      <pubDate>Tue, 23 Apr 2019 16:03:21 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-nojquery/</guid>
      <description>You Might Not Need jQuery</description>
    </item>
    
    <item>
      <title>js function</title>
      <link>/frontend/js/js-function/</link>
      <pubDate>Fri, 19 Apr 2019 17:33:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-function/</guid>
      <description>函数声明和函数表达式的区别 - WEB前端 - 伯乐在线 注：此文只在理解立即执行函数，不在所谓原创，文中大量引用阮一峰的 JavaScript 标准参考教程、MDN 的 JavaScript 参</description>
    </item>
    
    <item>
      <title>ue源码中的JS骚操作</title>
      <link>/frontend/js/js-skill/</link>
      <pubDate>Wed, 17 Apr 2019 14:59:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-skill/</guid>
      <description>「从源码中学习」Vue源码中的JS骚操作 - 掘金 终极目标：从工具函数中扩展知识点 1. 当前环境的一系列判断 1.1inBrowser: 检测当前宿主环境是否是浏览器 // 通过判断</description>
    </item>
    
    <item>
      <title>js 返回顶部</title>
      <link>/frontend/js/js-animate/</link>
      <pubDate>Wed, 06 Mar 2019 08:39:35 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-animate/</guid>
      <description>scrollToTop : function() { $(&#39;a#back-to-top&#39;).click(function() { $(&#39;html, body&#39;).animate({scrollTop:0},&#39;slow&#39;); return false; });)</description>
    </item>
    
    <item>
      <title>flutter</title>
      <link>/frontend/dart/flutter/</link>
      <pubDate>Tue, 15 Jan 2019 15:28:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/dart/flutter/</guid>
      <description>Feather Apps - Mobile Apps That Run on the Desktop Flutter Awesome 大量实例</description>
    </item>
    
    <item>
      <title>js plugin drag drop</title>
      <link>/frontend/js/js-plugin-drag-drop/</link>
      <pubDate>Tue, 08 Jan 2019 11:13:40 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-plugin-drag-drop/</guid>
      <description>Sortable is a JavaScript library for reorderable drag-and-drop lists.
Sortable. No jQuery.</description>
    </item>
    
    <item>
      <title>javascript实现防抖动（Debouncing）和节流阀（Throttling）</title>
      <link>/frontend/js/js-timer-debounce/</link>
      <pubDate>Fri, 04 Jan 2019 09:37:21 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-timer-debounce/</guid>
      <description>实例解析防抖动（Debouncing）和节流阀（Throttling） Javascript 的 Debounce 和 Throttle 的原理及实现 · Issue #7 · lishengzxc/bblog 应用场景还有，在一个表单的输入框中（包</description>
    </item>
    
    <item>
      <title>js</title>
      <link>/frontend/js/js/</link>
      <pubDate>Wed, 26 Dec 2018 11:27:22 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js/</guid>
      <description>JavaScript - IT笔录 function与感叹号 如何一个页面A点了下 另外一个页面B自动加数据? html5 postMessage解决跨域、跨窗口消息传递 ,在两个网</description>
    </item>
    
    <item>
      <title>js this</title>
      <link>/frontend/js/js-this/</link>
      <pubDate>Wed, 26 Dec 2018 10:18:37 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-this/</guid>
      <description>js常见的var that = this的用法 this是Javascript语言的一个关键字。它代表函数运行时，自动生成的一个内部对象，this代表的是</description>
    </item>
    
    <item>
      <title>js fselect</title>
      <link>/frontend/js/js-fselect/</link>
      <pubDate>Tue, 11 Dec 2018 15:14:07 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-fselect/</guid>
      <description>效果展示: https://blog.liuguofeng.com/wp-content/uploads/2018/11/fSelect.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;link href=&amp;quot;jquery.fSelect.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; /&amp;gt; &amp;lt;script src=&amp;quot;http://code.jquery.com/jquery-1.11.3.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;jquery.fSelect.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; $(function() { $(&#39;.demo&#39;).fSelect(); }); &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;select class=&amp;quot;demo&amp;quot; multiple=&amp;quot;multiple&amp;quot;&amp;gt; &amp;lt;optgroup label=&amp;quot;Languages&amp;quot;&amp;gt; &amp;lt;option value=&amp;quot;cp&amp;quot;&amp;gt;C++&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;cs&amp;quot;&amp;gt;C#&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;oc&amp;quot;&amp;gt;Object C&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;c&amp;quot;&amp;gt;C&amp;lt;/option&amp;gt; &amp;lt;/optgroup&amp;gt; &amp;lt;optgroup label=&amp;quot;Scripts&amp;quot;&amp;gt; &amp;lt;option value=&amp;quot;js&amp;quot;&amp;gt;JavaScript&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;php&amp;quot;&amp;gt;PHP&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;asp&amp;quot;&amp;gt;ASP&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;jsp&amp;quot;&amp;gt;JSP&amp;lt;/option&amp;gt; &amp;lt;/optgroup&amp;gt; &amp;lt;/select&amp;gt; &amp;lt;/html&amp;gt;</description>
    </item>
    
    <item>
      <title>微信小程序加密数据解密算法Go版</title>
      <link>/frontend/weixin/xiaochengxu/</link>
      <pubDate>Fri, 27 Jul 2018 18:14:49 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/weixin/xiaochengxu/</guid>
      <description>微信小程序加密数据解密算法Go版 微信小程序官方说明文档签名加密篇链接 http://mp.weixin.qq.com/debug/wxadoc/dev/api/signature.html?t=20161107 使用方法 go get github.com/xlstudio/wxbizdatacrypt 引入方法 import ( &amp;quot;github.com/xlstudio/wxbizdatacrypt&amp;quot; ) 使用示例 package main import ( &amp;quot;fmt&amp;quot; &amp;quot;github.com/xlstudio/wxbizdatacrypt&amp;quot; ) func main() { appID := &amp;quot;wx4f4bc4dec97d474b&amp;quot; sessionKey := &amp;quot;tiihtNczf5v6AKRyjwEUhQ==&amp;quot;</description>
    </item>
    
    <item>
      <title>跨域资源共享 CORS 详解</title>
      <link>/frontend/cors/</link>
      <pubDate>Mon, 23 Jul 2018 08:27:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/cors/</guid>
      <description>&lt;h1 id=&#34;1-golang-websocket-跨域问题&#34;&gt;1. golang websocket 跨域问题&lt;/h1&gt;

&lt;p&gt;首先, 因为跨域报错&lt;/p&gt;

&lt;p&gt;服务器端日志&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;websocket: &#39;Origin&#39; header value not allowed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;前端报错:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WebSocket connection to &#39;ws://localhost:8081/ws&#39; failed: Error during WebSocket handshake: Unexpected response code: 403
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用的是 github.com/gorilla/websocket 这个 websocket 包&lt;/p&gt;

&lt;p&gt;网上的方法有很多&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;比如 添加这个
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;w.Header().Set(&amp;quot;Access-Control-Allow-Origin&amp;quot;, &amp;quot;*&amp;quot;)
w.Header().Set(&amp;quot;Access-Control-Allow-Methods&amp;quot;, &amp;quot;POST, GET, OPTIONS&amp;quot;)
w.Header().Set(&amp;quot;Access-Control-Allow-Headers&amp;quot;, &amp;quot;*&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;比如 添加这个
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;origin := r.Header.Get(&amp;quot;Origin&amp;quot;)
w.Header().Set(&amp;quot;Access-Control-Allow-Origin&amp;quot;, origin)
w.Header().Set(&amp;quot;Access-Control-Allow-Credentials&amp;quot;, &amp;quot;true&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;比如 Nginx 中添加这个
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection &amp;quot;upgrade&amp;quot;;
proxy_set_header Host $host;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还有很多方法! 我试了都没用&lt;/p&gt;

&lt;p&gt;然后我自己看了下代码, 发现在包里的 server.go 里 有个检测 host 的.. 大约在 127 行左右&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;checkOrigin := u.CheckOrigin
if checkOrigin == nil {
    checkOrigin = checkSameOrigin
}
if !checkOrigin(r) {
    return u.returnError(w, r, http.StatusForbidden, &amp;quot;websocket:&#39;Origin&#39;header value not allowed&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而检验返回回来的是个 bool 值, 我打印了下我的结果.. 是 false&lt;/p&gt;

&lt;p&gt;所以目前的方法是, 我把这个验证给去了...&lt;/p&gt;

&lt;p&gt;做法是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r.Header.Del(&amp;quot;Origin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;恩! 然后正常运行了... 只不过... 可能有点问题... 如果是公网.. 可以考虑加个白名单, 只有白名单里的 域名 才删除, 不是白名单里的, 就不允许...&lt;/p&gt;

&lt;p&gt;origin := r.Header.Get(&amp;quot;Origin&amp;quot;)&lt;br /&gt;
whiteList := &amp;quot;domain&amp;quot;// 哈哈刚学, 判断是否在数组里.. 暂时不会, 所以就写一个字符串... 类似于 php 的 in_array(PHP 是世界上最好的语言)&lt;br /&gt;
if origin == whiteList {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r.Header.Del(&amp;quot;Origin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;br /&gt;
当然这个做法是不对的，正确的做法是:&lt;/p&gt;

&lt;p&gt;upgrader.CheckOrigin = func(r *http.Request) bool {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;这个 CheckOrigin 是给开放给用户自己配置的。&lt;/p&gt;

&lt;h1 id=&#34;2-配置-nginx-cors-跨域&#34;&gt;2.配置 nginx CORS 跨域&lt;/h1&gt;

&lt;h2 id=&#34;设置允许所有的请求&#34;&gt;设置允许所有的请求&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {
    location / {
        add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;只允许get请求&#34;&gt;只允许GET请求&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {
    location / {
        add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;;
        add_header &#39;Access-Control-Request-Method&#39; &#39;GET&#39;;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;请求白名单&#34;&gt;请求白名单&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {
    location / {
        # 白名单
        if ($http_origin ~* (baidu\.com|github.xuexb.com)$) {
            add_header &#39;Access-Control-Allow-Origin&#39; &#39;$http_origin&#39;;

            # 允许cookie
            add_header &#39;Access-Control-Allow-Credentials&#39; true;

            # 只允许某些方法
            add_header &#39;Access-Control-Request-Method&#39; &#39;GET, POST, OPTIONS&#39;;

            # 支持获取其她字段, 需要前端设置 `xhr.withCredentials = true`
            add_header &#39;Access-Control-Allow-Headers&#39; &#39;User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;3-跨域资源共享-cors-详解&#34;&gt;3.跨域资源共享 CORS 详解&lt;/h1&gt;

&lt;p&gt;CORS 是一个 W3C 标准，全称是 &amp;quot;跨域资源共享&amp;quot;（Cross-origin resource sharing）。&lt;br /&gt;
它允许浏览器向跨源服务器，发出 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 请求，从而克服了 AJAX 只能 ** 同源 ** 使用的限制。&lt;br /&gt;
本文详细介绍 CORS 的内部机制。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何将 emoji 当成单色 icon 使用</title>
      <link>/frontend/emoji/</link>
      <pubDate>Sat, 21 Jul 2018 08:42:54 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/emoji/</guid>
      <description>How to Use Emojis as Icons – Preethi Sam 使用单色 emoji 在 web 设计中 icon 变得越来越重要，在网上有很多关于 icon 的资源，免费的付费的都有。在这里，介绍如何运用一种已经我们非常熟悉</description>
    </item>
    
    <item>
      <title>Ajax</title>
      <link>/frontend/jquery/jquery-ajax/</link>
      <pubDate>Thu, 12 Jul 2018 15:18:08 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-ajax/</guid>
      <description>Jquery在异步提交方面封装的很好，直接用AJAX非常麻烦，Jquery大大简化了我们的操作，不用考虑浏览器的诧异了。 推荐一篇不错的jQu</description>
    </item>
    
    <item>
      <title>Editor在线代码编辑器Ace</title>
      <link>/frontend/editor-ace/</link>
      <pubDate>Wed, 27 Jun 2018 10:09:42 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/editor-ace/</guid>
      <description>在线demo 开启自动补全 ace.require(&amp;quot;ace/ext/language_tools&amp;quot;); var editor = ace.edit(&amp;quot;editor&amp;quot;); editor.setOptions({ enableBasicAutocompletion: true //开启自动补全 }); 1.初始化editor(） ace.edit(domId[string]) domId: dom元素id字符串（不加#） return : editor对象 举</description>
    </item>
    
    <item>
      <title>echart使用小结</title>
      <link>/frontend/js/echart%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Thu, 29 Mar 2018 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/echart%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</guid>
      <description>Echarts 将图表转换为图片 echarts.getInstanceByDom(document.getElementById(&amp;quot;ElemID&amp;quot;)).getConnectedDataURL(); Echarts var picBase64Info = myChart.getDataURL(&amp;quot;png&amp;quot;); 这个方法可以将图片转为base64编码，将该编码传到后台，解析base64为图片，将解析好的图片存入word 十</description>
    </item>
    
    <item>
      <title>Js Toggle Display</title>
      <link>/frontend/js-toggle-display/</link>
      <pubDate>Wed, 21 Mar 2018 14:29:20 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js-toggle-display/</guid>
      <description>slim 版是去掉了ajax功能的瘦身版 &amp;lt;script type=&#39;text/javascript&#39; src=&#39;https://cdn.bootcss.com/jquery/3.2.1/jquery.slim.min.js?ver=3.2.1&#39;&amp;gt;&amp;lt;/script&amp;gt; 缓慢的将段落滑上或滑下 切换显示 $(&amp;quot;.btn1&amp;quot;).click(function(){ $(&amp;quot;p&amp;quot;).slideToggle(); }); &amp;lt;script src=&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js&amp;quot;&amp;gt; $(&#39;#icon-for-search&#39;).click(function () { $(&#39;#search-wrapper&#39;).fadeToggle(&#39;slow&#39;); }); &amp;lt;/script&amp;gt; &amp;lt;div id=&amp;quot;icon-for-search&amp;quot;&amp;gt;Search Icon&amp;lt;/div&amp;gt; &amp;lt;div id=&amp;quot;search-wrapper&amp;quot;&amp;gt;Search Wrapper&amp;lt;/div&amp;gt; &amp;lt;a id=&amp;quot;loginLink&amp;quot; onclick=&amp;quot;toggleTable();&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Login&amp;lt;/a&amp;gt; function toggleTable() { var login = document.getElementById(&amp;quot;loginTable&amp;quot;); login.style.display = (lTable.style.display == &amp;quot;table&amp;quot;) ? &amp;quot;none&amp;quot; :</description>
    </item>
    
    <item>
      <title>如何使用 Chrome DevTools</title>
      <link>/frontend/chrome-devtools/</link>
      <pubDate>Mon, 19 Mar 2018 14:13:21 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/chrome-devtools/</guid>
      <description>如何使用 Chrome DevTools 认识 Chrome DevTools Chrome DevTools - Elements Chrome DevTools - Console Chrome DevTools - Sources Chrome DevTools - Network Chrome DevTools - Performance Chrome DevTools - Memory Chrome DevTools - Application Chrome DevTools - Security Chrome DevTools - Audits Chrome extensions/apps 既然用 Chrome， 为什么不让 Chrome extensions/apps 让你的 Chrome 更</description>
    </item>
    
    <item>
      <title>Github 的 CSS 风格指南</title>
      <link>/frontend/scss/scss-styletype/</link>
      <pubDate>Mon, 19 Mar 2018 11:14:52 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/scss/scss-styletype/</guid>
      <description>Github 的 CSS 风格指南 这个CSS风格指南是在GitHub内部用于应用程序的指南。我们鼓励您建立一个适合你自己团队的风格指南。在你阅读这个之前，你需要</description>
    </item>
    
    <item>
      <title>Html5 语义化布局Layout</title>
      <link>/frontend/html/html-layout/</link>
      <pubDate>Sat, 17 Mar 2018 17:02:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/html-layout/</guid>
      <description>结构元素 section：内容块，用于分块使用，通常由标题与内容组成 article：页面独立的内容，通常用于正文；可嵌套使用，可表示插件 asi</description>
    </item>
    
    <item>
      <title>Sass Mixin Extend</title>
      <link>/frontend/scss/sass-mixin-extend/</link>
      <pubDate>Sat, 17 Mar 2018 14:50:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/scss/sass-mixin-extend/</guid>
      <description>当我们提及预编译的时候，我经常会被问到的一个问题是Mixins 还是 @extend ? 关于这个话题我经常直言不讳，而且鉴于以下的这几条原因，我坚定的认为你应</description>
    </item>
    
    <item>
      <title>解决Sass媒体查询的重复问题</title>
      <link>/frontend/scss/sass-media-mixin/</link>
      <pubDate>Sat, 17 Mar 2018 14:48:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/scss/sass-media-mixin/</guid>
      <description>在Sass中有很多方法可以解决媒体查询这个问题，但是其中一些方法存在相同的问题。一开始我会还原这个问题，然后提供我的解决方案，最后列出这个方</description>
    </item>
    
    <item>
      <title>wepack3 url-loader</title>
      <link>/frontend/webpack-url-loader/</link>
      <pubDate>Tue, 12 Dec 2017 15:47:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/webpack-url-loader/</guid>
      <description>module: { rules: [ { test: /\.js$/, use: &#39;babel-loader?cacheDirectory&#39;, // 开启 babel-loader 缓存 include: [path.resolve(&#39;src&#39;), path.resolve(&#39;test&#39;)], exclude: /node_modules/ }, { test: /\.(css|scss)$/, use: [&#39;style-loader&#39;, &#39;css-loader&#39;, &#39;postcss-loader&#39;, &#39;sass-loader&#39;] }, { test: /\.(png|jpe?g|gif|svg)(\?.*)?$/i, loader: &#39;url-loader&#39;, options: { limit: 10 * 1024, name: &#39;images/[name].[ext]?[hash]&#39; } }, { test: /\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/, loader: &#39;url-loader&#39;, options: { limit: 10 * 1024, name: &#39;media/[name].[ext]?[hash]&#39; } }, { test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/, loader: &#39;url-loader&#39;, options: { limit: 10 *</description>
    </item>
    
    <item>
      <title>wepack3 详解</title>
      <link>/frontend/webpack/</link>
      <pubDate>Tue, 12 Dec 2017 15:47:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/webpack/</guid>
      <description>webpack3中文文档 Fis3构建迁移Webpack之路 大公司里怎样开发和部署前端代码 awesome-webpack-cn webpack进阶之插件篇 webpack飞行手册 推</description>
    </item>
    
    <item>
      <title>JavaScript原生数组及高阶函数</title>
      <link>/frontend/js/javascript%E5%8E%9F%E7%94%9F%E6%95%B0%E7%BB%84%E5%8F%8A%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 07 Nov 2017 18:55:24 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/javascript%E5%8E%9F%E7%94%9F%E6%95%B0%E7%BB%84%E5%8F%8A%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</guid>
      <description>一、map map() 方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果 callback 函数会被自动传入三个参数：数组元素，元素索引，原</description>
    </item>
    
    <item>
      <title>jQuery选择器总结</title>
      <link>/frontend/jquery/jquery%E9%80%89%E6%8B%A9%E5%99%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 03 Jul 2017 18:05:05 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery%E9%80%89%E6%8B%A9%E5%99%A8%E6%80%BB%E7%BB%93/</guid>
      <description>content {:toc} jQuery 的选择器可谓强大无比，这里简单地总结一下常用的元素查找方法 基本选择器 ID选择器 $(&amp;quot;#my&amp;quot;) 选择id值等于my的元素，id值不能重复，所以得到的是</description>
    </item>
    
    <item>
      <title>ES6新特性</title>
      <link>/frontend/js/es6-js%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Wed, 29 Mar 2017 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/es6-js%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>一、作用域 块级作用域 块级变量let 块级常量 const 二、箭头函数 sum = (a,b)=&amp;gt; a + b nums.forEach(v=&amp;gt; {console.log(v)}) 词法 this 三、参数处理 默认参数值 剩余参数 展开运算符 四、模板字面量 多行字符</description>
    </item>
    
    <item>
      <title>ES6编码风格</title>
      <link>/frontend/js/es6-js-%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</link>
      <pubDate>Wed, 29 Mar 2017 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/es6-js-%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</guid>
      <description>一、块级作用域 1.1 let取代var ES6提出了两个新的声明变量的命令：let和const。其中，let完全可以取代var，因为两者语义相同，而</description>
    </item>
    
    <item>
      <title>jQuery之DOM操作小结</title>
      <link>/frontend/jquery/jquery%E4%B9%8Bdom%E6%93%8D%E4%BD%9C%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Sat, 14 Jan 2017 10:20:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery%E4%B9%8Bdom%E6%93%8D%E4%BD%9C%E5%B0%8F%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;一-过滤器&#34;&gt;一、过滤器&lt;/h3&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;1-匹配指定元素的父&#34;&gt;1 匹配指定元素的父&lt;/h4&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;elem.parent([exp])&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-匹配指定元素的子元素&#34;&gt;2 匹配指定元素的子元素&lt;/h4&gt;

&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>JavaScript作用域分析总结</title>
      <link>/frontend/js/js-javascript%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%88%86%E6%9E%90%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 10 Jan 2017 12:50:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-javascript%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%88%86%E6%9E%90%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文链接 &lt;a href=&#34;http://blog.poetries.top/2017/01/10/js-scope&#34; target=&#34;_blank&#34;&gt;http://blog.poetries.top/2017/01/10/js-scope&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;一-js解析顺序和作用域&#34;&gt;一、JS解析顺序和作用域：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;解析顺序：&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;定义 (1. 先找&lt;code&gt;var&lt;/code&gt;  &lt;code&gt;function&lt;/code&gt;)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;执行 (2. 再逐步执行)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;注意:如果函数名和&lt;code&gt;var&lt;/code&gt;定义的变量相同，&lt;code&gt;var&lt;/code&gt;会被函数覆盖&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;作用域：&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;每个&lt;code&gt;script&lt;/code&gt;是一个作用域&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;每个函数&lt;code&gt;{}&lt;/code&gt;是一个作用域&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;程序每执行到一个作用域，都是按照解析顺序解析代码;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;作用域链:从内往外找要找函数内的变量;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JS常用的内置函数整理</title>
      <link>/frontend/js/js-functions-%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 13 Dec 2016 14:50:24 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-functions-%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;h3 id=&#34;string字符串对象&#34;&gt;String字符串对象&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt; 属性 长度&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;concat(String)&lt;/code&gt; 连接两个或更多个字符&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;indexOf(string)&lt;/code&gt; 返回出现字符的位置&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;substr(num1,[num2])&lt;/code&gt;截取字符串&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;转成小写&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;转成大写&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;replace(str1,str2)&lt;/code&gt; 字符串替换&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Ajax总结篇</title>
      <link>/frontend/jquery/ajax%E6%80%BB%E7%BB%93%E7%AF%87/</link>
      <pubDate>Sat, 26 Nov 2016 14:35:24 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/ajax%E6%80%BB%E7%BB%93%E7%AF%87/</guid>
      <description>原文出处 http://blog.poetries.top/2016/11/26/Ajax-summary 本文主要总结整理Ajax的一些常用的基础知识，适合初学者。 一、Ajax简介、优劣势、应用场景以及技术 Ajax简介 : Asynchronous Javascript And XML （异步的</description>
    </item>
    
    <item>
      <title>UI</title>
      <link>/frontend/ui/</link>
      <pubDate>Wed, 09 Nov 2016 00:47:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/ui/</guid>
      <description>导航网站: https://hao.uisdc.com icons svg图标下载 SVG图标 foundation6 SVG CSS 11,429种完美的CSS3渐变颜色代码表 最全前端UI库 豆瓣UI Pure ionic Google 发布新一代Web UI库Po</description>
    </item>
    
    <item>
      <title>html</title>
      <link>/frontend/html/html/</link>
      <pubDate>Wed, 09 Nov 2016 00:47:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/html/</guid>
      <description>HTML5 元素 模板引擎 逼格最高显然是Jade 但改名为Pug（哈巴狗）后 就像是小龙女被尹志平不可描述后 再也无爱了 从此以后 留了胡子（Mustache） 扶</description>
    </item>
    
    <item>
      <title>postcss</title>
      <link>/frontend/postcss/</link>
      <pubDate>Wed, 09 Nov 2016 00:47:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/postcss/</guid>
      <description>caniuse [](http://www.ibm.com/developerworks/cn/web/1604-postcss-css/) plugins webpack 3 + postcss构建移动端网站架子 apm install caniuse can-i-use:show Show panel can-i-use:update Update data ext install vscode-caniuse npm install postcss-cli postcss --use autoprefixer -c options.json -o screen.css screen.css 什么是PostCSS？ PostCSS不是预处理器;</description>
    </item>
    
    <item>
      <title>scss</title>
      <link>/frontend/scss/scss/</link>
      <pubDate>Wed, 09 Nov 2016 00:47:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/scss/scss/</guid>
      <description>SASS中文文档 SASS中文网 [](http://www.w3cplus.com/sassguide/) libsass Install gem install sass gem install scss_lint 配置 scss-lint . --config .scss-lint.yml scss-lint . --exclude ./node_modules/**/* scss-lint ./assets/stylesheets libsass gosass 经典代码块 https://github.com/lmtX10ded/bitup/tree/4293a0b148234c24bce444c31f20bf14501d29b0/src/_sass/hover_2.2.0</description>
    </item>
    
    <item>
      <title>前端技能汇总</title>
      <link>/frontend/%E6%B1%87%E6%80%BB/</link>
      <pubDate>Wed, 09 Nov 2016 00:47:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/%E6%B1%87%E6%80%BB/</guid>
      <description>前端技能汇总 建站： 论坛 nodebb font-family: &amp;quot;FZLanTingHei&amp;quot; !important; Pushpin api 文档 文档书籍 Web在线编辑器 可视化HTML编辑器 https://www.oschina.net/project/tag/172/wysiwyg Markdown 编辑器 Editor.md TinyMCE是一个轻量级的基于浏览器的所见即</description>
    </item>
    
    <item>
      <title>移动端适配</title>
      <link>/frontend/html/html-mobile/</link>
      <pubDate>Tue, 08 Nov 2016 16:47:11 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/html-mobile/</guid>
      <description>HTML5 元素 ## 对 HTML 的设置 &amp;lt;!DOCTYPE html&amp;gt; 设置正确的浏览器渲染模式 &amp;lt;html lang=&amp;quot;zh-cmn-Hans&amp;quot;&amp;gt; 设置页面内容的语言为 简体中文； &amp;lt;html lang=&amp;quot;zh-cmn-Hant&amp;quot;&amp;gt; 为繁体中文； &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; 为英文 &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; 设置编码格式为 UTF-8 &amp;lt;meta name=&amp;quot;format-detection&amp;quot; content=&amp;quot;telephone=no&amp;quot; /&amp;gt; 当该 HTML</description>
    </item>
    
    <item>
      <title>jQuery笔记总结篇</title>
      <link>/frontend/jquery/jquery-%E6%80%BB%E7%BB%93%E7%AF%87/</link>
      <pubDate>Thu, 20 Oct 2016 09:35:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-%E6%80%BB%E7%BB%93%E7%AF%87/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文链接 &lt;a href=&#34;http://blog.poetries.top/2016/10/20/review-jQuery&#34; target=&#34;_blank&#34;&gt;http://blog.poetries.top/2016/10/20/review-jQuery&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先，来了解一下&lt;code&gt;jQuery&lt;/code&gt;学习的整体思路&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xq6al.com1.z0.glb.clouddn.com/jquery1.png&#34; alt=&#34;jQuery系统学习篇&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS系统学习笔记回顾</title>
      <link>/frontend/html/div-css%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9E%E9%A1%BE/</link>
      <pubDate>Tue, 06 Sep 2016 18:24:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/div-css%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9E%E9%A1%BE/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tags-css&#34;&gt;tags: [css]&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-html&#34;&gt;第一部分 HTML&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%E5%92%8C%E5%89%8D%E6%99%AF&#34;&gt;#### 第一章 职业规划和前景&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%BA%8C%E7%AB%A0-html%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84&#34;&gt;#### 第二章 html基本结构&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%89%E7%AB%A0-html%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE&#34;&gt;第三章 html基本标签&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%9B%9B%E7%AB%A0-img%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE%E4%B8%8E%E8%B7%AF%E5%BE%84&#34;&gt;#### 第四章 img图片标签与路径&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%B8%89%E7%A7%8D%E5%88%97%E8%A1%A8%E7%9A%84%E8%AE%B2%E8%A7%A3&#34;&gt;#### 第五章 三种列表的讲解&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%85%AD%E7%AB%A0-form%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E4%B8%8A&#34;&gt;#### 第六章 Form表单元素(上)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%83%E7%AB%A0-%E8%A1%A8%E5%8D%95%E5%92%8C%E8%A1%A8%E6%A0%BC%E4%B8%8B&#34;&gt;#### 第七章 表单和表格(下)&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-css&#34;&gt;第二部分 CSS&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%85%AB%E7%AB%A0-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86&#34;&gt;#### 第八章 css基础知识&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B9%9D%E7%AB%A0-css%E9%80%89%E6%8B%A9%E5%99%A8%E4%B8%8A&#34;&gt;第九章 css选择器(上)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E7%AB%A0-css%E9%80%89%E6%8B%A9%E5%99%A8%E4%B8%8B&#34;&gt;#### 第十章 css选择器(下)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0-%E8%83%8C%E6%99%AF%E5%B1%9E%E6%80%A7&#34;&gt;#### 第十一章 背景属性&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0-%E6%96%87%E5%AD%97%E6%96%87%E6%9C%AC%E5%B1%9E%E6%80%A7&#34;&gt;#### 第十二章 文字文本属性&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B&#34;&gt;#### 第十三章 盒子模型&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E5%9B%9B%E7%AB%A0-%E5%9D%97%E5%85%83%E7%B4%A0%E8%A1%8C%E5%85%83%E7%B4%A0%E4%B8%8E%E6%BA%A2%E5%87%BA&#34;&gt;#### 第十四章 块元素、行元素与溢出&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%BA%94%E7%AB%A0-%E5%AE%9A%E4%BD%8D&#34;&gt;#### 第十五章 定位&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E5%85%AD%E7%AB%A0-%E6%A1%86%E6%9E%B6&#34;&gt;#### 第十六章 框架&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%B8%83%E7%AB%A0-css%E9%AB%98%E7%BA%A7%E5%B1%9E%E6%80%A7&#34;&gt;#### 第十七章 css高级属性&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86-%E9%99%84%E5%BD%95&#34;&gt;第三部分 附录&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%B8%80-div%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83&#34;&gt;附录一 DIV命名规范&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%BA%8C-css%E7%B2%BE%E7%81%B5&#34;&gt;附录二 CSS精灵&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%B8%89-%E4%B8%80%E4%BA%9Btips%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88&#34;&gt;#### 附录三 一些tips解决方案&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%A1%B5%E9%9D%A2%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5&#34;&gt;##### 页面优化实践&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%86%99divcss-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%AF%86&#34;&gt;##### 写DIV+CSS 的一些常识&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5&#34;&gt;##### 常用代码片段&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93&#34;&gt;##### 一些总结&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5&#34;&gt;##### 一些概念&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%B9%E6%A1%88%E8%8D%9F%E8%90%83%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB&#34;&gt;##### 方案荟萃扩展阅读&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E5%9B%9B-%E9%83%A8%E5%88%86%E5%B7%A5%E5%85%B7%E8%B5%84%E6%BA%90&#34;&gt;#### 附录四 部分工具资源&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%BA%94-%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83&#34;&gt;#### 附录五 编码规范&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E5%85%AD-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0&#34;&gt;#### 附录六 进阶学习&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%B8%83-%E5%85%B6%E4%BB%96%E8%B5%84%E6%BA%90&#34;&gt;#### 附录七 其他资源&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E5%85%AB-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;#### 附录八 常见问题&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;#%E5%85%B6%E4%BB%96&#34;&gt;#### 其他&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;第一部分-html&#34;&gt;第一部分 HTML&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;第一章-职业规划和前景&#34;&gt;第一章 职业规划和前景&lt;/h4&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;职业方向规划定位：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt;前端开发工程师&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt;网站架构师&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;自己创业&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;转岗管理或其他&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery基础之Ajax（六）</title>
      <link>/frontend/jquery/jquery-6.%E5%9F%BA%E7%A1%80%E4%B9%8Bajax%E5%85%AD/</link>
      <pubDate>Sun, 07 Aug 2016 22:30:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-6.%E5%9F%BA%E7%A1%80%E4%B9%8Bajax%E5%85%AD/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ajax&lt;/strong&gt; : &lt;code&gt;Asynchronous Javascript And XML&lt;/code&gt; （异步的&lt;code&gt;JavaScript&lt;/code&gt;和&lt;code&gt;XML&lt;/code&gt;）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建&lt;code&gt;ajax&lt;/code&gt;对象 &lt;code&gt;var xhr = new XMLHttpRequest();&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery基础之Event（五）</title>
      <link>/frontend/jquery/jquery-5.%E5%9F%BA%E7%A1%80%E4%B9%8Bevent%E4%BA%94/</link>
      <pubDate>Sun, 07 Aug 2016 22:10:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-5.%E5%9F%BA%E7%A1%80%E4%B9%8Bevent%E4%BA%94/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;什么是&lt;code&gt;Event&lt;/code&gt;？&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery基础之插件（六）</title>
      <link>/frontend/jquery/jquery-7.%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%8F%92%E4%BB%B6%E5%85%AD/</link>
      <pubDate>Sun, 07 Aug 2016 22:10:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-7.%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%8F%92%E4%BB%B6%E5%85%AD/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;什么是插件&lt;br /&gt;
插件(&lt;code&gt;Plugin&lt;/code&gt;)也称为&lt;code&gt;jQuery&lt;/code&gt;的扩展。以`&lt;code&gt;jQuery核心代码为基础编写的符合一定规范的应用程序。通过&lt;/code&gt;js文件的方式引用。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery动画基础（四）</title>
      <link>/frontend/jquery/jquery-4.%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80%E5%9B%9B/</link>
      <pubDate>Sun, 07 Aug 2016 21:10:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-4.%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80%E5%9B%9B/</guid>
      <description>&lt;p&gt;&lt;strong&gt;介绍&lt;code&gt;jQuery&lt;/code&gt;动画&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JavaScript&lt;/code&gt;语言本身不支持动画设计，必须通过改变`CSS来实现动画效果。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery操作DOM（三）</title>
      <link>/frontend/jquery/jquery-3.%E6%93%8D%E4%BD%9Cdom%E4%B8%89/</link>
      <pubDate>Sun, 07 Aug 2016 21:10:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-3.%E6%93%8D%E4%BD%9Cdom%E4%B8%89/</guid>
      <description>&lt;h3 id=&#34;操作dom&#34;&gt;操作DOM&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>jQuery选择器及优化（二）</title>
      <link>/frontend/jquery/jquery-2.%E9%80%89%E6%8B%A9%E5%99%A8%E5%8F%8A%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sun, 07 Aug 2016 21:05:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-2.%E9%80%89%E6%8B%A9%E5%99%A8%E5%8F%8A%E4%BC%98%E5%8C%96/</guid>
      <description>&lt;h3 id=&#34;层级选择器&#34;&gt;层级选择器:&lt;/h3&gt;

&lt;p&gt;通过&lt;code&gt;DOM&lt;/code&gt;的嵌套关系匹配元素&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jQuery-1-概述</title>
      <link>/frontend/jquery/jquery-1.%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 07 Aug 2016 19:35:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-1.%E6%A6%82%E8%BF%B0/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jQuery&lt;/code&gt;是什么:&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;是一个&lt;code&gt;javascript&lt;/code&gt;代码仓库，我们称之为&lt;code&gt;javascript&lt;/code&gt;框架。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;是一个快速的简洁的&lt;code&gt;javascript&lt;/code&gt;框架，可以简化查询&lt;code&gt;DOM&lt;/code&gt;对象、处理事件、制作动画、处理&lt;code&gt;Ajax&lt;/code&gt;交互过程。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JavaScript中property和attribute的区别</title>
      <link>/frontend/js/js-dom-property%E5%92%8Cattribute%E7%9A%84%E5%8C%BA%E5%88%AB-/</link>
      <pubDate>Wed, 27 Jul 2016 13:50:20 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-dom-property%E5%92%8Cattribute%E7%9A%84%E5%8C%BA%E5%88%AB-/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;1. 定义&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;property&lt;/code&gt;（元素属性）：&lt;code&gt;DOM&lt;/code&gt; 节点是一个对象，因此，可以添加自定义的属性以及方法。&lt;code&gt;property&lt;/code&gt; 的值可以是任何的数据类型，对大小写敏感。自定义的&lt;code&gt;property&lt;/code&gt;不会出现在 &lt;code&gt;html&lt;/code&gt; 中，只存在 &lt;code&gt;JavaSctipt&lt;/code&gt; 中。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attribute&lt;/code&gt;（标签属性）：&lt;code&gt;attribute&lt;/code&gt; 只能是字符串，大小写不敏感，出现在 &lt;code&gt;innerHTML&lt;/code&gt; 中，通过类数组&lt;code&gt;attributes&lt;/code&gt;可以罗列所有的 &lt;code&gt;attribute&lt;/code&gt;。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;2. 相同之处&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery与原生JS的DOM操作对比</title>
      <link>/frontend/jquery/jquery%E4%B8%8E%E5%8E%9F%E7%94%9Fjs%E7%9A%84dom%E6%93%8D%E4%BD%9C%E5%AF%B9%E6%AF%94-/</link>
      <pubDate>Wed, 27 Jul 2016 13:50:20 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery%E4%B8%8E%E5%8E%9F%E7%94%9Fjs%E7%9A%84dom%E6%93%8D%E4%BD%9C%E5%AF%B9%E6%AF%94-/</guid>
      <description>&lt;h3 id=&#34;1-创建元素节点&#34;&gt;1. 创建元素节点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;原生JS创建元素节点: &lt;code&gt;document.createElement(&amp;quot;p&amp;quot;);&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;jQuery创建元素节点：&lt;code&gt;$(&#39;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&#39;);&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JavaScript与Unicode编码</title>
      <link>/frontend/js/js-encode-unicode/</link>
      <pubDate>Wed, 27 Jul 2016 11:40:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-encode-unicode/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;字符集的概念：&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;字符集：就是--编码--&amp;gt;字符的映射&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JavaScript中三种绑定事件的方式与去除绑定</title>
      <link>/frontend/js/js-event-onclick/</link>
      <pubDate>Wed, 27 Jul 2016 11:40:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-event-onclick/</guid>
      <description>window.addEventListener(&#39;wheel&#39;, function (e) { // firstScrollStatus(e, &#39;wheel&#39;); e.stopPropagation(); e.preventDefault(); }, { passive: false }); const items = document.querySelector(&amp;quot;#items&amp;quot;); right.addEventListener(&amp;quot;click&amp;quot;, function() { loop(&amp;quot;right&amp;quot;); }); left.addEventListener(&amp;quot;click&amp;quot;, function() { loop(&amp;quot;left&amp;quot;); }); function loop(direction) { if (direction === &amp;quot;right&amp;quot;) { items.appendChild(items.firstElementChild); } else { items.insertBefore(items.lastElementChild, items.firstElementChild); } } 绑定事件的第1种办法： 函数写在结构层里面 非常不好，使</description>
    </item>
    
    <item>
      <title>JavaScript中三种绑定事件的方式与去除绑定</title>
      <link>/frontend/js/js-event-onscroll/</link>
      <pubDate>Wed, 27 Jul 2016 11:40:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-event-onscroll/</guid>
      <description>How to develop high performance onScroll event? javascript - window.onscroll无法刷新scrollTop的值？ - SegmentFault 思否 return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0; scrolltop = (((t = document.documentElement) || (t = document.body.parentNode)) typeof t.scrollTop == ‘numbe</description>
    </item>
    
    <item>
      <title>JavaScript之定时器</title>
      <link>/frontend/js/js-timer-settimeout-setinterval/</link>
      <pubDate>Wed, 27 Jul 2016 11:40:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-timer-settimeout-setinterval/</guid>
      <description>&lt;h3 id=&#34;setinterval和settimeout的区别&#34;&gt;setInterval和setTimeout的区别，&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  setTimeout(function(){
    /* Some long block of code... */
    setTimeout(arguments.callee, 10);
  }, 10);
 
  setInterval(function(){
    /* Some long block of code... */
  }, 10);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看第一眼，会觉得这两段代码功能相同，实际上，他们是不同的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   需要注意到，setTimeout的回调函数的执行总是保证了至少10ms的间隔（与上一个回调的执行相比，实际执行时，这个间隔可能变长，但是不可能更少），但是setInterval会尝试每隔10ms执行一次回调，不管上一个回调函数时候已经执行完毕。（很多类库的动画都是使用的setTimeout实现）
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;window定时器&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setIntval&lt;/code&gt;(表达式,毫秒)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clearIntval&lt;/code&gt;(定时器对象)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTimeout&lt;/code&gt;(表达式,毫秒)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clearTimeout&lt;/code&gt;(定时器对象)&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery之AJAX的使用方法</title>
      <link>/frontend/jquery/jquery%E4%B9%8Bajax%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 29 May 2016 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery%E4%B9%8Bajax%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>jQuery之AJAX的使用方法 什么是 AJAX？ AJAX = 异步 JavaScript 和 XML（Asynchronous JavaScript and XML）。 简短地说，在不重载整个网页的情况下</description>
    </item>
    
    <item>
      <title>JS,Jquery 获取各种屏幕的宽度和高度</title>
      <link>/frontend/jquery/-jsjquery-%E8%8E%B7%E5%8F%96%E5%90%84%E7%A7%8D%E5%B1%8F%E5%B9%95%E7%9A%84%E5%AE%BD%E5%BA%A6%E5%92%8C%E9%AB%98%E5%BA%A6/</link>
      <pubDate>Sat, 07 May 2016 23:59:59 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/-jsjquery-%E8%8E%B7%E5%8F%96%E5%90%84%E7%A7%8D%E5%B1%8F%E5%B9%95%E7%9A%84%E5%AE%BD%E5%BA%A6%E5%92%8C%E9%AB%98%E5%BA%A6/</guid>
      <description>content {:toc} Javascript: 网页可见区域宽： document.body.clientWidth 网页可见区域高： document.body.clientHeight 网页可见区域宽： document.body.offsetWidth (包括边线的宽) 网页可见区域高： document.body.offsetHeight (包括边线的高) 网页正文全文宽： document.body.scrollWidth 网页正文全文</description>
    </item>
    
    <item>
      <title>Jquery</title>
      <link>/frontend/jquery/jquery/</link>
      <pubDate>Sun, 01 May 2016 23:59:59 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery/</guid>
      <description>content {:toc} 获取当前节点及子节点 jQuery.html() 是获取当前节点下的html代码，并不包含当前节点本身的代码 jQuery.parent().html() 如果当前元素没有兄弟元素可以，如果有那就不行了 最佳实践</description>
    </item>
    
    <item>
      <title>html实现网页跳转的几种方式</title>
      <link>/frontend/html/html-url-location/</link>
      <pubDate>Tue, 29 Mar 2016 21:25:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/html-url-location/</guid>
      <description>纯 html 页面跳转 mkdir -p /docker/tomcat/webapps/ROOT/; echo &#39;&amp;lt;script language=&amp;quot;javascript&amp;quot;&amp;gt; window.location = &amp;quot;/work/&amp;quot;; &amp;lt;/script&amp;gt;&#39; &amp;gt; /docker/tomcat/webapps/ROOT/index.html javaScript 跳转 方法一: &amp;lt;script language=&amp;quot;javascript&amp;quot;&amp;gt;window.location = &amp;quot;http://www.baidu.com&amp;quot;;&amp;lt;/script&amp;gt; 方法二: &amp;lt;script language=&amp;quot;javascript&amp;quot;&amp;gt; document.location = &amp;quot;http://www.baidu.com&amp;quot;; &amp;lt;/script&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;正在跳转&amp;lt;/title&amp;g</description>
    </item>
    
    <item>
      <title>Meteor</title>
      <link>/frontend/meteor/meteor-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/meteor/meteor-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
      <description>Meteor Session is not defined Meteor Session is not defined 之所以会产生这样的问题，是因为包含有Session的代码被server加载了，而 Session只是在client服务，那</description>
    </item>
    
    <item>
      <title>Meteor</title>
      <link>/frontend/meteor/meteor/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/meteor/meteor/</guid>
      <description>Meteor 中文社区 Meteor 中文文档 Iron.Router 指南 Discover Meteor 中文版 [](https://github.com/MeteorChina) Meteor开发指南 Meteor-DDP Rocket.Chat Meteor 中文文档 Rendering frameworks Blaze (Meteor default) React (Facebook) Angular (Google) curl https://install.meteor.com | sh ##meteor代理 on Linux or Mac OS X export HTTP_PROXY=http://user:password@1.2.3.4:5678 export HTTPS_PROXY=http://user:password@1.2.3.4:5678 meteor</description>
    </item>
    
    <item>
      <title>Meteor</title>
      <link>/frontend/meteor/meteor%E5%89%8D%E7%AB%AF%E9%80%89-blazeangular%E8%BF%98%E6%98%AFreact/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/meteor/meteor%E5%89%8D%E7%AB%AF%E9%80%89-blazeangular%E8%BF%98%E6%98%AFreact/</guid>
      <description>从 Meteor 1.2 开始，这三个框架都是官方支持的了。如果你开始一个新的 Meteor 项目，还没有确定用什么前端框架的时候，估计会遇到这个问题。 Blaze Blaze 是这三个里最简单的</description>
    </item>
    
    <item>
      <title>Meteor</title>
      <link>/frontend/meteor/meteor%E7%9A%84reactive%E7%89%B9%E6%80%A7/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/meteor/meteor%E7%9A%84reactive%E7%89%B9%E6%80%A7/</guid>
      <description>Principles of Meteor Meteor 是一个实时 full stack JavaScript 框架。Reactivity 是它的一个非常重要的特点。官网上列出了 Meteor 的7大原则或者说是特点: Data on the Wire. Meteor 不发 HTML，服</description>
    </item>
    
    <item>
      <title>Meteor</title>
      <link>/frontend/meteor/meteor%E9%A1%B9%E7%9B%AE%E6%94%B6%E9%9B%86/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/meteor/meteor%E9%A1%B9%E7%9B%AE%E6%94%B6%E9%9B%86/</guid>
      <description>[](https://github.com/CCharlieLi/OpenCAS-Base.git) http://www.classcraft.com/25 https://rocket.chat/42 开源的聊天平台 https://wekan.io/19 开源的类 trello 看板工具 https://codefights.com/17 编程比赛、学习 http://waited.com/6 http://www.koantum.com/6 http://learntomooch.com/5 https://www.thoughtly.co/16 机器学习相关 https://hansoftx.com/home/index.html22 团队协作 http://www.flowkey.com/en12 学习弹钢琴 https://app.versoapp.com/30 教育相关 https://respond.ly/4 https://lookback.io/5 http://blonk.co/6 1、[url]https:</description>
    </item>
    
    <item>
      <title>Xpath语法笔记</title>
      <link>/frontend/xpath/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/xpath/</guid>
      <description>摘要: XPath 是一门在 XML 文档中查找信息的语言。XPath 用于在 XML 文档中通过元素和属性进行导航。 同时Xpath在做爬虫时也是一款利器 一、选取节点 常用</description>
    </item>
    
    <item>
      <title>learning Meteor</title>
      <link>/frontend/meteor/learning-meteor/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/meteor/learning-meteor/</guid>
      <description>0. 简介 Kevin的Meteor介绍 通过一个中文的系列视频，从整个web框架演进的角度让你大致了解一下meteor的先进性以及相关原理，同时做</description>
    </item>
    
    <item>
      <title>sass揭秘之@mixin@function</title>
      <link>/frontend/scss/sass-mixin-function/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/scss/sass-mixin-function/</guid>
      <description>因为文章内含有很多sass代码，如需自己动手查看编译结果，推荐使用sassmeister这款在线编译工具，方便你阅读学习。 在阅读本文章之前，</description>
    </item>
    
    <item>
      <title>一看就懂的ReactJs入门教程</title>
      <link>/frontend/react/reactjs/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/react/reactjs/</guid>
      <description>一看就懂的ReactJs入门教程（精华版） ReactJS官网地址：http://facebook.github.io/react/ Githu</description>
    </item>
    
    <item>
      <title>使用 Meteor 轻松开发实时网站</title>
      <link>/frontend/meteor/%E4%BD%BF%E7%94%A8-meteor-%E8%BD%BB%E6%9D%BE%E5%BC%80%E5%8F%91%E5%AE%9E%E6%97%B6%E7%BD%91%E7%AB%99/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/meteor/%E4%BD%BF%E7%94%A8-meteor-%E8%BD%BB%E6%9D%BE%E5%BC%80%E5%8F%91%E5%AE%9E%E6%97%B6%E7%BD%91%E7%AB%99/</guid>
      <description>原文链接 什么是 Meteor？ Meteor 是一种新的 JavaScript 框架，用于自动化和简化实时运行的 Web 应用程序的开发。它使用一个名为分布式数据协议 (Distributed Data Protocol, DDP) 的协议来处理</description>
    </item>
    
    <item>
      <title>前端JSer装逼手册</title>
      <link>/frontend/jser/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jser/</guid>
      <description>在装逼成本越来越高的JS圈，是时候充值一下了 ———— 题记 开发 Macbook Pro是标配，美其名曰“提高开发体验” 什么？你还在用Spotlight？赶紧给</description>
    </item>
    
    <item>
      <title>账户系统</title>
      <link>/frontend/crypto-bcrypt/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/crypto-bcrypt/</guid>
      <description>如何安全的存储密码 账户系统介绍 #密码与安全性 故意增加密码计算所需耗费的资源和时间，使得任何人都不可获得足够的资源建立所需的rainbow ta</description>
    </item>
    
    <item>
      <title>前端开发 Html5</title>
      <link>/frontend/html/html5/</link>
      <pubDate>Sun, 20 Mar 2016 09:55:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/html5/</guid>
      <description>在线工具 CSS 参考手册 菜鸟教程 HTML5 视频 Video tag not supported. Download the video here. ul unordered lists ol ordered lists download属性 实现下载文件重命名 在你需要执行下载任务时非常的有用，很多时候</description>
    </item>
    
    <item>
      <title>DIV企业命名参考</title>
      <link>/frontend/html/html-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</link>
      <pubDate>Mon, 14 Mar 2016 14:09:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/html-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</guid>
      <description>&lt;h3 id=&#34;网页内容类&#34;&gt;&lt;strong&gt;网页内容类&lt;/strong&gt;&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>Moment.js 2.6中文文档</title>
      <link>/frontend/js/js-moment.js-2.6-doc/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-moment.js-2.6-doc/</guid>
      <description>文档地址：http://momentjs.com/docs/ 1. 在哪使用 浏览器或者Node.JS ###Node.js npm install moment var moment = require(&#39;moment&#39;); moment().format(); ###浏览器 &amp;lt;script src=&amp;quot;moment.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; moment().format(); &amp;lt;/script&amp;gt; ###Bower bower install</description>
    </item>
    
    <item>
      <title>javascript 数组循环</title>
      <link>/frontend/js/javascript-array-loop/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/javascript-array-loop/</guid>
      <description>原文地址：http://stackoverflow.com/questions/9329446/for-each-over-an-array</description>
    </item>
    
    <item>
      <title>underscore学习</title>
      <link>/frontend/js/js-underscore/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-underscore/</guid>
      <description>##集合 Note: Collection functions work on arrays, objects, and array-like objects such as arguments, NodeList and similar. But it works by duck-typing, so avoid passing objects with a numeric length property. It&#39;s also good to note that an each loop cannot be broken out of — to break, use _.find instead. ###遍历 each map pluck invoke ###查找 find where</description>
    </item>
    
  </channel>
</rss>