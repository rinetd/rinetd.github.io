<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>时光小栈</title>
    <link>/frontend/css/</link>
    <description>Recent content on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 08 Dec 2018 11:19:50 +0800</lastBuildDate>
    
	<atom:link href="/frontend/css/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>css 利用visibility属性来让元素消失</title>
      <link>/frontend/css/css-visable/</link>
      <pubDate>Sat, 08 Dec 2018 11:19:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-visable/</guid>
      <description>一个小的技巧：隐藏元素并消失 如果我们想隐藏一个元素，并实现过渡的效果。我们可能会用jQuery的fadeOut(), 也可以用css3的的op</description>
    </item>
    
    <item>
      <title>详解 CSS 七种三栏布局技巧</title>
      <link>/frontend/css/css-layout-3col/</link>
      <pubDate>Wed, 21 Mar 2018 13:16:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-layout-3col/</guid>
      <description>三栏布局，顾名思义就是两边固定，中间自适应。三栏布局在开发十分常见，那么什么是三栏布局？比如我打开某东的首页： 映入眼帘的就是一个常见的三栏布</description>
    </item>
    
    <item>
      <title>CSS导航菜单水平居中的多种方法</title>
      <link>/frontend/css/css-nav-middle/</link>
      <pubDate>Wed, 21 Mar 2018 11:03:33 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-nav-middle/</guid>
      <description>CSS导航菜单水平居中的多种方法 | 设计达人 在网页设计中，水平导航菜单使用是十分广泛的，在CSS样式中，我们一般会用Float元素或是「dis</description>
    </item>
    
    <item>
      <title>Css Position定位属性</title>
      <link>/frontend/css/css-position/</link>
      <pubDate>Wed, 21 Mar 2018 11:03:33 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-position/</guid>
      <description>Z-index z-index深入理解 子元素的z-index值只在父元素范围内有效 z-index只对具有定位的元素有效 规则: background/border z-index =-1 为负值 空属性 block元</description>
    </item>
    
    <item>
      <title>Css tips</title>
      <link>/frontend/css/css-tips/</link>
      <pubDate>Wed, 21 Mar 2018 11:03:33 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-tips/</guid>
      <description>两端对齐/悬挂缩进 .context{ text-align:justify;//两端对齐 text-indent: -1.5em;//悬挂缩进 } 截断字符串 首先要固定宽和高，然后使用如下</description>
    </item>
    
    <item>
      <title>Css 滚动条指示器</title>
      <link>/frontend/css/css-tip-progress-bar/</link>
      <pubDate>Wed, 21 Mar 2018 11:03:33 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-tip-progress-bar/</guid>
      <description>纯CSS实现Scroll Indicator(滚动指示器)_CSS3 教程_w3cplus</description>
    </item>
    
    <item>
      <title>Css 清除浮动 clear</title>
      <link>/frontend/css/css-clearfix/</link>
      <pubDate>Wed, 21 Mar 2018 10:54:55 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-clearfix/</guid>
      <description>clear 不能用于非块级元素，因此如果对内联元素应用 clear 来清除浮动，则不会有任何效果，除非改变该内联元素的属性为 display：block 如果某元素应</description>
    </item>
    
    <item>
      <title>CSS BFC Haslayout详解</title>
      <link>/frontend/css/css-bfc-haslayout/</link>
      <pubDate>Wed, 21 Mar 2018 10:16:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-bfc-haslayout/</guid>
      <description>理解CSS中BFC_CSS, BFC 教程_w3cplus BFC 深入理解 - 前端 - 掘金 深入理解BFC IE中也有与BFC类似概念 haslayout 简单来说就是，触发了bfc</description>
    </item>
    
    <item>
      <title>深入理解CSS浮动</title>
      <link>/frontend/css/css-float/</link>
      <pubDate>Wed, 21 Mar 2018 10:16:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-float/</guid>
      <description>深入理解CSS浮动</description>
    </item>
    
    <item>
      <title>Css Styleguide</title>
      <link>/frontend/css/css-styleguide/</link>
      <pubDate>Sat, 17 Mar 2018 17:53:30 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-styleguide/</guid>
      <description></description>
    </item>
    
    <item>
      <title>动画展示 Flexbox 布局</title>
      <link>/frontend/css/layout/css-flexbox/</link>
      <pubDate>Sat, 17 Mar 2018 11:06:35 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/layout/css-flexbox/</guid>
      <description>Flexbox Cheatsheet Cheatsheet 玩游戏玩转FlexBox布局 Flexbox 布局将我们从CSS的邪恶（如垂直对齐）中拯救了出来。 很好，Flexbox 确实实现了这个目标。 但掌握新的弹</description>
    </item>
    
    <item>
      <title>玩转 grid 布局</title>
      <link>/frontend/css/layout/css-grid/</link>
      <pubDate>Sat, 17 Mar 2018 11:06:35 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/layout/css-grid/</guid>
      <description>边玩游戏边学 Grid 布局</description>
    </item>
    
    <item>
      <title>Flex弹性布局</title>
      <link>/frontend/css/css-layout-flex/</link>
      <pubDate>Sat, 17 Mar 2018 10:25:46 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-layout-flex/</guid>
      <description>Flexbox布局是如何工作的 – 用大彩图和GIF动画解释 更多关于Flexbox布局如何工作的 – 用大彩图和GIF动画解释 flex 布局很容易与其他布局</description>
    </item>
    
    <item>
      <title>HTML5&#43;CSS3整体回顾</title>
      <link>/frontend/css/layout/html5&#43;css3%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE/</link>
      <pubDate>Wed, 19 Oct 2016 09:35:08 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/layout/html5&#43;css3%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;转载请声明 &lt;a href=&#34;http://blog.poetries.top/2016/10/19/HTML5+CSS3%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE%20/&#34; target=&#34;_blank&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这篇文章主要总结H5的一些新增的功能以及一些基础归纳，并不是很详细，后面会一直完善补充新的内容，本文是一些笔记记录，放在这里供自己参考也供他人学习！&lt;/p&gt;

&lt;h4 id=&#34;第一课-html5结构&#34;&gt;第一课 HTML5结构&lt;/h4&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HTML5&lt;/code&gt; 是新一代的 &lt;code&gt;HTML&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DTD&lt;/code&gt;声明改变 &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;新的结构标签&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;注意的地方&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ie8&lt;/code&gt; 不兼容&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://upload-images.jianshu.io/upload_images/1480597-ce00790dcabf9c47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;一些总结--from-dunitian&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS中的BFC</title>
      <link>/frontend/css/css%E4%B8%AD%E7%9A%84bfc/</link>
      <pubDate>Wed, 07 Sep 2016 18:20:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css%E4%B8%AD%E7%9A%84bfc/</guid>
      <description>&lt;h3 id=&#34;bfc-是什么&#34;&gt;BFC 是什么？&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BFC&lt;/code&gt; (&lt;code&gt;Block Formatting Contexts&lt;/code&gt;) 即块级格式化上下文，从样式上看，它与普通的容器没有什么区别，但是从功能上，&lt;code&gt;BFC&lt;/code&gt; 可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 &lt;code&gt;BFC&lt;/code&gt; 具有普通容器没有的一些特性，例如可以包含浮动元素，使到它可以包含浮动元素，从而防止出现高度塌陷的问题&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>HTML5 CSS3 最酷的 loading 效果收集</title>
      <link>/frontend/css/html5-css3-%E6%9C%80%E9%85%B7%E7%9A%84-loading-%E6%95%88%E6%9E%9C%E6%94%B6%E9%9B%86/</link>
      <pubDate>Fri, 20 May 2016 09:11:44 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/html5-css3-%E6%9C%80%E9%85%B7%E7%9A%84-loading-%E6%95%88%E6%9E%9C%E6%94%B6%E9%9B%86/</guid>
      <description>&lt;p&gt;这里收集了几十个用 html5 和 css3 实现的 loading 效果，以供学习参考&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自适应网页的媒体查询</title>
      <link>/frontend/css/css-media/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-media/</guid>
      <description>CSS2.1规范最重要的新特性之一就是引入了media types,下边是media types的10个值，常用的并不多。当没有media标签时</description>
    </item>
    
    <item>
      <title>web技术第七弹 CSS中的重要基础概念</title>
      <link>/frontend/css/layout/web%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%83%E5%BC%B9-css%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Sun, 20 Mar 2016 09:55:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/layout/web%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%83%E5%BC%B9-css%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</guid>
      <description>web技术第七弹 CSS中的重要基础概念 学习这些东西，千万不要死记硬背所有的属性，一定要理解一些重要概念，脑子里对这些概念有了直观的认识，就很</description>
    </item>
    
    <item>
      <title>web技术第七弹 CSS盒子模型及布局应用</title>
      <link>/frontend/css/layout/web%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%83%E5%BC%B9-css%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%8F%8A%E5%B8%83%E5%B1%80%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sun, 20 Mar 2016 09:55:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/layout/web%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%83%E5%BC%B9-css%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%8F%8A%E5%B8%83%E5%B1%80%E5%BA%94%E7%94%A8/</guid>
      <description>web技术第七弹 CSS盒子模型及布局应用 近日工作繁忙，更新速度稍慢，敬请谅解。闲话不说，就上一弹的CSS选择器话题，先供上一张总结图片供参考</description>
    </item>
    
    <item>
      <title>web技术第八弹 CSS3盒子模型增强属性</title>
      <link>/frontend/css/layout/web%E6%8A%80%E6%9C%AF%E7%AC%AC%E5%85%AB%E5%BC%B9-css3%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%A2%9E%E5%BC%BA%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Sun, 20 Mar 2016 09:55:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/layout/web%E6%8A%80%E6%9C%AF%E7%AC%AC%E5%85%AB%E5%BC%B9-css3%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%A2%9E%E5%BC%BA%E5%B1%9E%E6%80%A7/</guid>
      <description>web技术第八弹 CSS3盒子模型增强属性 2016-04-06 17:59:06 1314浏览 1评论 前一弹讲述了在CSS中，盒子模型的相关标准属性和布局简单应用。这一弹，我们会继</description>
    </item>
    
    <item>
      <title>CSS块级元素和行内元素</title>
      <link>/frontend/css/css%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</link>
      <pubDate>Wed, 16 Mar 2016 16:24:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</guid>
      <description>&lt;p&gt;&lt;code&gt;HTML&lt;/code&gt;中的元素可分为两种类型：块级元素和行级元素。这些元素的类型是通过文档类型定义（DTD）来指明。块级元素：显示在一块内，会自动换行，元素会从上到下垂直排列，各自占一行，如&lt;code&gt;p&lt;/code&gt;,&lt;code&gt;ul&lt;/code&gt;,&lt;code&gt;form&lt;/code&gt;,&lt;code&gt;div&lt;/code&gt;等标签元素。行内元素：元素在一行内水平排列，高度由元素的内容决定，&lt;code&gt;height&lt;/code&gt;属性不起作用，如span,input等元素。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>当内容超出容器宽度时做何处理? text-overflow</title>
      <link>/frontend/css/09-css-text-overflow/</link>
      <pubDate>Mon, 09 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/09-css-text-overflow/</guid>
      <description>text-overflow 的作用: text-overflow 用来声明：当内容超出容器宽度时做何处理。 text-overflow 语法: text-overflow: [ clip | ellipsis | &amp;lt;string&amp;gt; ] 简单的说明：text-overflow的默认值为clip，即当内</description>
    </item>
    
    <item>
      <title>第八天，谈谈【旋转和翻转】</title>
      <link>/frontend/css/08-css-rotate-and-scale/</link>
      <pubDate>Sun, 08 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/08-css-rotate-and-scale/</guid>
      <description>在切图过程中，经常会碰到一些小图标，比如各种方向的箭头等。这时我们就可以利用旋转和翻转，来减少切图工作量，同时也能减小图片体积。 我们有下面的</description>
    </item>
    
    <item>
      <title>第七天，谈谈【shrink-to-fit】</title>
      <link>/frontend/css/07-css-shrink-to-fit/</link>
      <pubDate>Sat, 07 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/07-css-shrink-to-fit/</guid>
      <description>什么是 shrink-to-fit shrink-to-fit指的是块级元素只占据内容所需要的宽度。Shrink-To-Fit，字面意思就是收缩包围。 为什么需要shri</description>
    </item>
    
    <item>
      <title>行级块元素 display:inline-block</title>
      <link>/frontend/css/css-display-inline-block/</link>
      <pubDate>Fri, 06 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-display-inline-block/</guid>
      <description>对一个html元素应用display:inline-block会产生怎样的效果？ 官方文档是这样说的： inline-block This value causes an element to generate an inline-level block container. The inside of an inline-block is formatted as</description>
    </item>
    
    <item>
      <title>第二天，谈谈【line-height】</title>
      <link>/frontend/css/02-css-lineheight/</link>
      <pubDate>Mon, 02 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/02-css-lineheight/</guid>
      <description>先来看MDN上的总结： On block level elements, the line-height CSS property specifies the minimal height of line boxes within the element. On non-replaced inline elements, line-height specifies the height that is used in the calculation of the line box height. On replaced inline elements, like buttons or other input element, line-height has no effect.[1] 也就是说： 在*b</description>
    </item>
    
    <item>
      <title>第一天，谈谈【透明】</title>
      <link>/frontend/css/01-css-opacity/</link>
      <pubDate>Sun, 01 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/01-css-opacity/</guid>
      <description>提到透明，大家首先会想到opacity。先来看测试用例一： .case{ /*省略无关样式*/ background-color: red; opacity: 0.5; } 在支持opacity的浏览器里效果如下： opaci</description>
    </item>
    
  </channel>
</rss>