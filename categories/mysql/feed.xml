<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on 时光小栈</title>
    <link>/categories/mysql/</link>
    <description>Recent content in mysql on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 22 Apr 2019 19:00:49 +0800</lastBuildDate>
    
	<atom:link href="/categories/mysql/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mysql常用分区方式partition</title>
      <link>/database/mysql/mysql-partition/</link>
      <pubDate>Mon, 22 Apr 2019 19:00:49 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-partition/</guid>
      <description>MySQL 常用分区方式 Range 分区 范围分区，每个分区包含那些分区表达式的值位于一个给定的连续区间内的行。这些区间要连续且不能相互重叠，使用 VALUES LESS THAN 操作符来进</description>
    </item>
    
    <item>
      <title>mysql merge</title>
      <link>/database/mysql/mysql-merge/</link>
      <pubDate>Wed, 17 Apr 2019 15:35:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-merge/</guid>
      <description>#!/bin/sh # # SCRIPT:	mysqlmerge.sh # AUTHOR:	dreamingfish123@gmail.com # DATE:	2014-02-17 # REV:	1.0.T # # PURPOSE:	Merge Bugzilla databases set -e # config, please modify to match your system env. # ============ ORIGIN=/media/bugzilla WORKSPACE=/media/bugzilla # ============ MYSQL_HOST=localhost MYSQL_PORT=3306 MYSQL_USER=root MYSQL_PASS=root MYSQL_MAX_ALLOWED_PACKET=1000000000 # ============ # === Init params.. DATE=`date +%Y%m%d` DAY=`date +%a` SRCPATH=$ORIGIN/$DAY TARPATH=$WORKSPACE/$DATE LOGFILE=$WORKSPACE/bugzilla_merge.log # === MYSQL_CONNPARAM=&amp;quot;-h$MYSQL_HOST -P$MYSQL_PORT -u$MYSQL_USER -p$MYSQL_PASS --max-allowed-packet=$MYSQL_MAX_ALLOWED_PACKET&amp;quot; TAR_DBNAME=mergetest TABLES1=&amp;quot;products versions bugs bug_see_also bugs_fulltext attach_data attachments cc components longdescs&amp;quot; TABLES2=&amp;quot;profiles rep_platform op_sys&amp;quot; echo &amp;quot;===========&amp;quot;	&amp;gt;&amp;gt; $LOGFILE echo &amp;quot;&amp;quot;	&amp;gt;&amp;gt; $LOGFILE echo &amp;quot;[*] Init params.</description>
    </item>
    
    <item>
      <title>mysql io write</title>
      <link>/database/mysql/mysql-io-write/</link>
      <pubDate>Wed, 20 Mar 2019 09:32:31 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-io-write/</guid>
      <description>Cpu的Iowait time过高 - 十月鱼的博客（本博客不再更新，作者迁移至：http://wiki.51centos.com） - CSDN博客</description>
    </item>
    
    <item>
      <title>mysql memory</title>
      <link>/database/mysql/mysql-memory/</link>
      <pubDate>Wed, 20 Mar 2019 08:48:52 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-memory/</guid>
      <description>MySQL Memory Calculator 记一次Mysql占用内存过高的优化过程 - 克隆大菠萝的后庭 - CSDN博客 1. 内存清理 free -m total used free shared buff/cache available Mem: 15886 5687 155 832 10043 9094 Swap: 0 0 0 total 系统可支配使用</description>
    </item>
    
    <item>
      <title>mysql monitor</title>
      <link>/database/mysql/mysql-monitor/</link>
      <pubDate>Mon, 28 Jan 2019 08:49:10 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-monitor/</guid>
      <description>MySQL 监控指标 监控 对于数据库，通常可以主动监控以下四个与性能及资源利用率相关的指标： 查询吞吐量 查询执行性能 连接情况 缓冲池使用情况 1. 吞吐量 在 MySQL 中有</description>
    </item>
    
    <item>
      <title>mysql 实现闪回功能 flashback binlog rollback</title>
      <link>/database/mysql/mysql-flashback-binlog-rollback/</link>
      <pubDate>Mon, 14 Jan 2019 15:17:47 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-flashback-binlog-rollback/</guid>
      <description>https://github.com/GoDannyLai/binlog_rollback 简介 binlog_rollback通过解释mysql/mariadb binlog/relaylog实现以下三大功能: 1）flashback</description>
    </item>
    
    <item>
      <title>mysql binlog</title>
      <link>/database/mysql/mysql-binlog/</link>
      <pubDate>Fri, 04 Jan 2019 15:54:57 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-binlog/</guid>
      <description>2892931976/binlog_inspector: mysql binlog parser, flash back, rollback. mysql binlog回滚/闪回，前滚， 分析各表DML情况， 找出长事务与大事务 GoDannyLai/binlog_rollback: mysql binlog rollback mysql 有个 binlog 的功能，会记录所有的用户的操作，可以依靠</description>
    </item>
    
    <item>
      <title>mysql install</title>
      <link>/database/mysql/mysql-install/</link>
      <pubDate>Fri, 04 Jan 2019 15:35:54 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-install/</guid>
      <description>#用压缩包安装 根据自己的操作系统下载对应的32位或64位的压缩包。按如下步骤操作： 第一步： 解压缩 将压缩包解压到C:\Program Files</description>
    </item>
    
    <item>
      <title>mysql statment join</title>
      <link>/database/mysql/mysql-statment-join/</link>
      <pubDate>Tue, 11 Dec 2018 13:46:09 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-statment-join/</guid>
      <description>关键字: on 数据库在通过连接两张或多张表来返回记录时，都会生成一张中间的&amp;quot;临时表&amp;quot;，然后再将这张临时表返回给用户。 多表级联</description>
    </item>
    
    <item>
      <title>mysql SQL 中With as 的用法</title>
      <link>/database/mysql/mysql-with/</link>
      <pubDate>Sat, 10 Nov 2018 12:48:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-with/</guid>
      <description>With alias_name as (select1), -- as和select中的括号都不能省略 alias_name2 as (select2), -- 后面的没有with，逗号分割，同一个主查询同级别地方，with子查询只能定义一次 alias_namen as (select</description>
    </item>
    
  </channel>
</rss>