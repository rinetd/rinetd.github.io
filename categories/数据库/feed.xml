<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on 时光小栈</title>
    <link>/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 21 Apr 2018 10:05:08 +0800</lastBuildDate>
    
	<atom:link href="/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mysql 编码问题</title>
      <link>/database/mysql/mysql-character/</link>
      <pubDate>Sat, 21 Apr 2018 10:05:08 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-character/</guid>
      <description>mysql 编码问题 如何识别乱码的本来想要表达的文字 要从乱码字符中反解出原来的正确文字需要对各个字符集编码规则有较为深刻的掌握。但是原理很简单，这里用</description>
    </item>
    
    <item>
      <title>Mysql Basic</title>
      <link>/database/mysql/mysql-sql/</link>
      <pubDate>Sat, 21 Apr 2018 09:44:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql/</guid>
      <description>go实现的mysql管理工具 kill -s TERM /bin/pidof mysqld nohup mysqld &amp;amp; Mysql 导出数据csv解决乱码. 导出时直接设置字符集格式： mysql&amp;gt; select * from mobile_order_region where school_id=6921 into outfile &#39;/tmp/6921.csv&#39; CHARACTER SET gbk FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&amp;quot;&#39; LINES</description>
    </item>
    
    <item>
      <title>Mysql 实现无限级分类</title>
      <link>/database/mysql/mysql_closuretable/</link>
      <pubDate>Sat, 21 Apr 2018 09:44:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql_closuretable/</guid>
      <description>在数据库中存储一棵树，实现无限级分类 ClosureTable https://segmentfault.com/a/1190000014284076 我也是从别的地方找来的，分析后发现挺不错的，特来分享。 无法发图只能简单处理： id name pid path 1 新闻 0 0 2 中国</description>
    </item>
    
    <item>
      <title>优化MySQL的21个建议</title>
      <link>/database/mysql/mysql-config-top10/</link>
      <pubDate>Mon, 16 Apr 2018 10:07:40 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-config-top10/</guid>
      <description>优化MySQL的21个建议 By 吴 炳锡 MySQL优化, 优化案例 3 Comments 作者：吴炳锡 来源：http://www.mysqlsupport.cn/ 联系方</description>
    </item>
    
    <item>
      <title>数据库连接协议DSN 简介</title>
      <link>/database/dsn/</link>
      <pubDate>Sat, 14 Apr 2018 08:51:42 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/dsn/</guid>
      <description>Go 各种数据库连接字符串汇总 Introduction - DSN – The Data Source Name [username[:password]@][protocol[(address)]]/dbname[?param1=value1&amp;amp;...&amp;amp;paramN=valueN] drone DRONE_DATABASE_DATASOURCE: root:pa55word@tcp(1.2.3.4:3306)/drone?parseTime=true DRONE_DATABASE_DRIVER: postgres DRONE_DATABASE_DATASOURCE: postgres://root:pa55word@1.2.3.4:5432/postgres?sslmode=disable Description To connect to a database through PEAR::DB, you have to create a valid DSN - data source name. This DSN consists in the following parts: phptype: Database backend used in PHP (i.e. mysql , odbc etc.) dbsyntax: Database used with</description>
    </item>
    
    <item>
      <title>测试MySQL死锁</title>
      <link>/database/mysql/mysql-deadlock/</link>
      <pubDate>Tue, 03 Apr 2018 16:57:00 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-deadlock/</guid>
      <description>解除正在死锁的状态有两种方法： 第一种： 1.查询是否锁表 show OPEN TABLES where In_use &amp;gt; 0; 2.查询进程（如果您有SUPER权限，您可以看到所有线程。否则，您只能看</description>
    </item>
    
    <item>
      <title>Mongo Pattern Design</title>
      <link>/database/mongo/mongo-pattern-design/</link>
      <pubDate>Wed, 14 Mar 2018 13:53:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mongo/mongo-pattern-design/</guid>
      <description>[](http://www.mongoing.com/mongodb-advanced-pattern-design) 关系模型和文档模型的区别在哪里？ 关系模型需要你把一个数据对象，拆分成零部件，然后存到各个相应的表里，需要的是最后把它拼起来。举例子来说，假</description>
    </item>
    
    <item>
      <title>CentOS 6 MariaDB Cluster</title>
      <link>/database/mysql/mysql-cluster-galera-nginx/</link>
      <pubDate>Mon, 26 Feb 2018 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cluster-galera-nginx/</guid>
      <description>可将cluster 同步方式设置成为 wsrep_sst_method=xtrabackup #所有节点都要更改 xtrabackup 安装 FROM http://allcmd.com/post/id/198 INSTALL MARIADB 192.168.80.111 node1 db1 192.168.80.110 node2 db2 192.168.80.101 node3 db3 all node 因为官方源连接不稳定,最好使用迅雷下载下来,放到每</description>
    </item>
    
    <item>
      <title>MySQL性能分析</title>
      <link>/database/mysql/mysql-tool-mytop%E7%9B%91%E6%8E%A7-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 26 Jan 2018 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-tool-mytop%E7%9B%91%E6%8E%A7-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</guid>
      <description>ps-top - a top-like program for MySQL Install: go get -u github.com/sjmudd/ps-top/cmd/ps-top go get -u github.com/sjmudd/ps-top/cmd/ps-stats mytop mytop -h 10.114.0.10 -upmm -ppercona2018 -s 1 mytop 是一个类似 Linux 下的 top 命令风格的 MySQL 监控工具，可以监控当前的连接用户和正在执行的命令 mytop 的结果信息</description>
    </item>
    
    <item>
      <title>Mysql多列索引经典案例</title>
      <link>/database/mysql/mysql-index-multi-question/</link>
      <pubDate>Tue, 23 Jan 2018 09:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-index-multi-question/</guid>
      <description>一个经典的多列索引案例，如题： 假设某个表有一个联合索引（c1,c2,c3,c4）以下——只能使用该联合索引的 c1,c2,c3 部分 A where c1=x and c2=x and c4&amp;gt;x and c3=x B where c1=x and</description>
    </item>
    
    <item>
      <title>RethinkDB</title>
      <link>/database/rethinkdb/</link>
      <pubDate>Thu, 26 May 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/rethinkdb/</guid>
      <description>install docker run -d -P --name rethink1 rethinkdb 1. apt安装 ppa:rethinkdb/unstable source /etc/lsb-release &amp;amp;&amp;amp; echo &amp;quot;deb http://download.rethinkdb.com/apt $DISTRIB_CODENAME main&amp;quot; | sudo tee /etc/apt/sources.list.d/rethinkdb.list wget -qO- https://download.rethinkdb.com/apt/pubkey.gpg | sudo apt-key add - sudo apt-get update sudo apt-get install rethinkdb 2.源码安装 sudo apt-get install build-essential protobuf-compiler python libprotobuf-dev libcurl4-openssl-dev \ libboost-all-dev libncurses5-dev \ libjemalloc-dev wget m4 wget https://download.rethinkdb.com/dist/rethinkdb-latest.tgz tar xf rethinkdb-2.3.4.tgz ./configure --allow-fetch</description>
    </item>
    
    <item>
      <title>深入浅出Redis</title>
      <link>/database/redis/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAredis/</link>
      <pubDate>Thu, 26 May 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/redis/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAredis/</guid>
      <description>Redis 命令参考 可视化工具 RedisDesktopManager 支持: Windows 7+, Mac OS X 10.10+, Ubuntu 14+ 特点： C++ 编写，响应迅速，性能好。但不支持数据库备份与恢复。 项目地址： https://github.com/uglide/RedisDesktopManager redis-desktop-manager curl -Lkx 127.0.0.1:8087 https://github.com/uglide/RedisDesktopManager/releases/download/0.9.0-alpha3/redis-desktop-manager_0.9.0.27_amd64.deb -O dpkg -i redis-desktop-manager_0.9.0.27_amd64.deb Download deb package from</description>
    </item>
    
    <item>
      <title>Linux之MariaDB基础详解</title>
      <link>/database/mysql/mysql/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql/</guid>
      <description>MySQL Memory Calculator内存占用计算器 Linux之MariaDB基础详解 MariaDB中文手册 远程登录 MySQL / MariaDB数据库配置教程 Mys</description>
    </item>
    
    <item>
      <title>Linux之MariaDB集群</title>
      <link>/database/mysql/mysql-cluster-galera/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cluster-galera/</guid>
      <description>通过上面的一系列测试，最后总结一下： 在生产环境下应该避免使用大事务，不建议在高并发写入场景下使用Galera Cluster架构，会导致集群限</description>
    </item>
    
    <item>
      <title>MariaDB-federated</title>
      <link>/database/mysql/mysql-federated/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-federated/</guid>
      <description>开启 federated 方式 安装插件 mysql&amp;gt; install plugin federated soname &#39;ha_federated.so&#39;; mysql&amp;gt; show engines; 启动 FEDERATED 存储引擎，修改 / etc/my.cnf 参数， 在 [mysqld] 下面添加：federated，重启 mysql ``` [mysqld] federated # federated=1 ``` 在服务器 A [真实数据存</description>
    </item>
    
    <item>
      <title>MySQL 中 KEY vs PRIMARY KEY vs UNIQUE KEY vs INDEX 的区别</title>
      <link>/database/mysql/mysql-index-primary-key/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-index-primary-key/</guid>
      <description>Mysql索引概念： 说说Mysql索引，看到一个很少比如：索引就好比一本书的目录，它会让你更快的找到内容，显然目录（索引）并不是越多越好，假</description>
    </item>
    
    <item>
      <title>MySQL 优化索引</title>
      <link>/database/mysql/mysql-optimization-index/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-optimization-index/</guid>
      <description>mysql 性能优化 - 慢查询分析、优化索引和配置 美团 MySQL 索引原理及慢查询优化 Mysql 反应慢，CPU 占用高的解决办法总结 千万级记录的 Discuz 论坛导致 MySQL CPU 100% 的优化笔记 type</description>
    </item>
    
    <item>
      <title>MySQL 性能排查思路</title>
      <link>/database/mysql/mysql-optimization-performance/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-optimization-performance/</guid>
      <description>除了服务器硬件的性能瓶颈，对于 MySQL 系统本身，我们可以使用工具来优化数据库的性能，通常有三种：使用索引，使用 EXPLAIN 分析查询以及调整 MySQL 的内部配置。 mysql 性</description>
    </item>
    
    <item>
      <title>MySQL 数据库修复</title>
      <link>/database/mysql/mysql-repair/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-repair/</guid>
      <description>7种修复MySQL数据库的方法，当简单的重启对数据库不起作用，或者有表崩溃时。 简单的MySQL重启： /usr/local/mysql/bin/mysqladmin -uUSERNAME -pPASSWORD shutdown /usr/local/mysql/bin/mysqld_safe &amp;amp; 1、MyISAM表崩溃 MyS</description>
    </item>
    
    <item>
      <title>MySQL5.7杀手级新特性：GTID原理与实战</title>
      <link>/database/mysql/mysql-cluster-gtid/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cluster-gtid/</guid>
      <description>MySQL5.7杀手级新特性：GTID原理与实战 | Focus on MySQL,Focus on Focus</description>
    </item>
    
    <item>
      <title>MySQL运维及开发规范</title>
      <link>/database/mysql/mysql%E8%BF%90%E7%BB%B4%E5%8F%8A%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql%E8%BF%90%E7%BB%B4%E5%8F%8A%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</guid>
      <description>MySQL运维及开发规范 一. 基础规范 约定 (1) 使用INNODB存储引擎 (2) 表字符集使用UTF8 (3) 所有表都需要添加注释 (4) 尽量不使用触发器、函数、存储</description>
    </item>
    
    <item>
      <title>PostgreSQL详解</title>
      <link>/database/postgresql/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/postgresql/</guid>
      <description>PostgreSQL的去重查询-SELECT DISTINCT-PostgreSQL轻松学-SJK66.COM docker 启动postgres docker run --restart=always -d --name</description>
    </item>
    
    <item>
      <title>mongodb</title>
      <link>/database/mongo/mongodb/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mongo/mongodb/</guid>
      <description>##selector 类似于SQL语句中的where 。选择器是一个JSON对象，最简单的就是{}匹配所有文档。 {field:value} 用来查找field值为 value的文档。 {field1:value1,field2:value2} 相当于</description>
    </item>
    
    <item>
      <title>msyql中子查询IN，EXISTS，ANY，ALL，SOME，UNION关键字介绍</title>
      <link>/database/mysql/mysql-sql-select/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-select/</guid>
      <description>msyql中子查询IN，EXISTS，ANY，ALL，SOME，UNION介绍 ANY关键字 假设any内部的查询语句返回的结果个数是三个，如:</description>
    </item>
    
    <item>
      <title>my.cnf详解</title>
      <link>/database/mysql/mysql-config-my.cnf/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-config-my.cnf/</guid>
      <description>[client] default-character-set = utf8 [mysqld] datadir = /docker/mysql # MASTER [server] server_id=1 log_bin=master-binlog binlog_format = ROW log-bin-trust-function-creators=1 max_binlog_size = 256M expire_logs_days = 7 # innodb_flush_log_at_trx_comit = 1 # sync_binlog = 0 binlog-ignore-db = test binlog-ignore-db = information_schema binlog-ignore-db = performance_schema # slave [server] #read_only=ON log-slave-updates = ON slave-skip-errors = ALL slave-skip-errors = 1007,1008,1053,1062,1213,1158,1159 relay_log_recovery=ON replicate-ignore-db = information_schema replicate-ignore-db = performance_schema [mysqld] user = mysql lower_case_table_names = 1 default_storage_engine = InnoDB</description>
    </item>
    
    <item>
      <title>mysql 主从、主主复制</title>
      <link>/database/mysql/mysql-cluster-replication/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cluster-replication/</guid>
      <description>slave端配置 1.中继日志是连接mastert和slave的信息，它是复制的核心，I/O线程将来自master的事件存储到中继日志中，中继</description>
    </item>
    
    <item>
      <title>mysql 命令行你知多少</title>
      <link>/database/mysql/mysql-cmd/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cmd/</guid>
      <description>mysql 命令行你知多少 张映 发表于 2010-10-19 分类目录： mysql 标签：mysql, 实例, 手册 mysql -u root -p 等这些常用的参数外，你知道多少？来测试一下吧 一，mysql命令行</description>
    </item>
    
    <item>
      <title>mysql 查询当天、本周，本月，上一个月的数据</title>
      <link>/database/mysql/mysql-sql-datetime/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-datetime/</guid>
      <description>format格式说明： %M 月名字(January～December) %W 星期名字(Sunday～Saturday) %D 有英语前缀的月份的日期(1s</description>
    </item>
    
    <item>
      <title>mysqldump</title>
      <link>/database/mysql/mysqldump/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysqldump/</guid>
      <description>在线导入 i1 -&amp;gt; l4 mysqldump -h 10.114.0.7 -ulzkp -p&#39;yqhtfjzm&#39; shizhi | mysql -h10.114.0.14 -P3306 -ulzkp -pyqhtfjzm lzkp ## mysqldump -uroot -pxxxx --add-drop-table --hex-blob --skip-comments maindatabasename &amp;gt; main.sql mysqldump.sh ```sh #!/usr/bin/env bash #USERNAME=&amp;quot; -u backup &amp;quot; # see $HOME/.my.cnf BACKUP=/docker/backup/ HOST=&amp;quot;&amp;quot; USER=&amp;quot;-uroot&amp;quot; PASSWORD=&amp;quot;-ptoor&amp;quot; if [ -z &amp;quot;$1&amp;quot; ];then HOST=&amp;quot;&amp;quot; else HOST=&amp;quot;-h $1&amp;quot; fi if [ -z &amp;quot;$1&amp;quot; ] ;then databases=`/usr/bin/mysql $HOST $USER $PASSWORD --execute=&#39;show databases&#39; --skip-column-names --batch |</description>
    </item>
    
    <item>
      <title>mysql参数max_allowed_packet提高批量插入性能</title>
      <link>/database/mysql/mysql-config-max_allowed_packet/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-config-max_allowed_packet/</guid>
      <description>MySQL根据配置文件会限制Server接受的数据包大小。有时候大的插入和更新会受 max_allowed_packet 参数限制，导致大数据写入或者更新失败。 set global max_allowed_packet = 1024*1024*1024 1G 查看目</description>
    </item>
    
    <item>
      <title>mysql的查询、子查询及连接查询</title>
      <link>/database/mysql/mysql-sql-select-groupby/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-select-groupby/</guid>
      <description>unix_timestamp 按小时统计数量 mysql&amp;gt; select from_unixtime(addtime,&#39;%Y-%m-%d %H&#39;) as date,count() from table group by from_unixtime(addtime,&#39;%Y-%m-%d %H&#39;); +---------------+----------+ | date | count() | +---------------+----------+ | 2016-03-30 19 | 409 | | 2016-03-30 20 | 161 | +---------------+----------+ 如何理解理解group by和聚合函数 http://www.tuicool.com/articles/yamUn2I group by 之后其他列会存在多</description>
    </item>
    
    <item>
      <title>mysql配置文件my.cnf详解</title>
      <link>/database/mysql/mysql-config-my.cnf%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-config-my.cnf%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</guid>
      <description>mysql5.6版本以上，取消了参数log-slow-queries，更改为slow-query-log-file，切记！！ 还需要加上 slow_query_log = on</description>
    </item>
    
    <item>
      <title>percona 性能分析</title>
      <link>/database/mysql/mysql-tool-percona/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-tool-percona/</guid>
      <description>[](https://www.cnblogs.com/zishengY/p/6852280.html) apt-get install percona-toolkit yum install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm yum list | grep percona-toolkit yum install percona-toolkit 最新版 https://www.percona.com/downloads/percona-toolkit/LATEST/ pt-query-digest --help http://www.percona.com/doc/percona-toolkit/2.1/pt-query-digest.html pt-query-digest /var/log/mysql/slow.log &amp;gt; slow.txt pt-query-digest --processlist h=localhost --print --no-report CREATE DATABASE percona; use percona; wget https://nodeload.github.com/kormoc/Query-Digest-UI/zip/master unzip master pt-query-digest使用方法介绍 直接分析慢查询文件</description>
    </item>
    
    <item>
      <title>sql 约束（constraints） on update cascade 和 on delete cascade 作用区别？</title>
      <link>/database/mysql/mysql-constraints/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-constraints/</guid>
      <description>sql 约束（constraints） 在 sql 中，我们有如下约束： not null - 指示某列不能存储 null 值。 unique - 保证某列的每行必须有唯一的值。 primary key - not null 和 unique 的结合。</description>
    </item>
    
    <item>
      <title>sqlite3</title>
      <link>/database/sqlite3/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/sqlite3/</guid>
      <description>golang 在内存中打开 sql.Open(&amp;quot;sqlite3&amp;quot;, &amp;quot;:memory:&amp;quot;) DB.SetMaxOpenConns(1) // this resolved the &amp;quot;table not found&amp;quot; in memory error for me. 创建数据库 sqlite3 ./phalcon_test.sqlite &amp;lt; &amp;quot;schemas/sqlite/phalcon_test.sql&amp;quot; 打开或创建 sqlite3 ./phalcon_test.sqlite 格式化输出 .header on 显示表头 默认off .mode list|column|insert|line|tabs|tcl|csv 改变输出格式 .timer on .separator &amp;quot;X&amp;quot; 更改分界</description>
    </item>
    
    <item>
      <title>sqlite3 如何删除唯一索引</title>
      <link>/database/sqlite3_unique/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/sqlite3_unique/</guid>
      <description>SQLite: Unique Constraints This SQLite tutorial explains how to create, add, and drop unique constraints in SQLite with syntax and examples. What is a unique constraint in SQLite? A unique constraint is a single field or combination of fields that uniquely defines a record. Some of the fields can contain null values as long as the combination of values is unique. What is the difference between a unique constraint and</description>
    </item>
    
    <item>
      <title>mysql 中 的数据类型</title>
      <link>/database/mysql/mysql-sql-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-type/</guid>
      <description>MySQL数字类型int与tinyint、float与decimal如何选择 了解并熟悉 mysql 中的数据类型，对建表和数据库优化都非常重要。 mysql 实现了</description>
    </item>
    
  </channel>
</rss>