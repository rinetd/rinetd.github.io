<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on 时光小栈</title>
    <link>/categories/docker/</link>
    <description>Recent content in docker on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 11 May 2019 08:35:13 +0800</lastBuildDate>
    
	<atom:link href="/categories/docker/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>phpmyadmin</title>
      <link>/devops/docker/phpmyadmin/</link>
      <pubDate>Sat, 11 May 2019 08:35:13 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/phpmyadmin/</guid>
      <description>拉取镜像 搜索镜像 $ docker search phpmyadmin NAME DESCRIPTION STARS OFFICIAL AUTOMATED phpmyadmin/phpmyadmin A web interface for MySQL and MariaDB. 441 [OK] nazarpc/phpmyadmin phpMyAdmin as Docker container, based on o... 56 [OK] ...... 没有官方的镜像, 那就默认打星最多的 (默认标签:latest) $ docker</description>
    </item>
    
    <item>
      <title>docker network</title>
      <link>/devops/docker/docker-network/</link>
      <pubDate>Mon, 11 Feb 2019 16:37:20 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-network/</guid>
      <description>容器访问控制 · Docker —— 从入门到实践 容器访问控制 容器的访问控制，主要通过 Linux 上的 iptables 防火墙来进行管理和实现。iptables 是 Linux 上默认的防火墙软件，</description>
    </item>
    
    <item>
      <title>docker ssh</title>
      <link>/devops/docker/docker-ssh/</link>
      <pubDate>Tue, 22 Jan 2019 21:38:48 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-ssh/</guid>
      <description>结论: iptables 规则出了问题. 修改iptables规则即可 求教个阿里云专有网络 ssh -v 无法连接的问题: 实验环境:用的是阿里云的主机 ,网络为专有网络 问题描</description>
    </item>
    
    <item>
      <title>docker的安全机制capability</title>
      <link>/devops/docker/docker-capability/</link>
      <pubDate>Thu, 13 Dec 2018 13:33:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-capability/</guid>
      <description>Seccomp security profiles for Docker Docker作为最重视安全的容器技术之一，在很多方面都提供了强安全性的默认配置，其中包括：容器root用户的 Capability 能力限制、Secco</description>
    </item>
    
    <item>
      <title>Docker 资源限制之 CPU</title>
      <link>/devops/docker/docker-limit-cpu/</link>
      <pubDate>Mon, 12 Mar 2018 08:57:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-limit-cpu/</guid>
      <description>Docker 资源限制之内存 Docker 资源限制之 CPU Docker 资源限制之 IO 一、压测工具 同上文 Docker 资源限制之内存 使用 stress 测试。 二、CPU 测试 Runtime constraints on resources 目前 Docker 支持 CPU 资源限制选项 -c, --cpu-shares=0</description>
    </item>
    
    <item>
      <title>Docker 资源限制之 MEM</title>
      <link>/devops/docker/docker-limit-mem/</link>
      <pubDate>Mon, 12 Mar 2018 08:57:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-limit-mem/</guid>
      <description>Docker 资源限制之内存 Docker 资源限制之 CPU Docker 资源限制之 IO 一、压测工具 stress 通过如下 Dockerfile 构建简单的测试镜像 ➜ cat Dockerfile FROM ubuntu:latest RUN apt-get update &amp;amp;&amp;amp; \ apt-get install stress ➜ docker build -t ubuntu-stress:latest . 二、内存测试 Runtime constraints</description>
    </item>
    
    <item>
      <title>docker volume</title>
      <link>/devops/docker/dockerplugin/</link>
      <pubDate>Sun, 04 Feb 2018 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/dockerplugin/</guid>
      <description>docker plugin install --grant-all-permissions store/weaveworks/net-plugin:latest_release docker plugin install --grant-all-permissions --alias vsphere vmware/docker-volume-vsphere:latest docker plugin install --grant-all-permissions --alias kahuna shivanshug/vsphere-shared:kahuna-mount1 docker plugin install --grant-all-permissions --alias netapp netapp/ndvp-plugin:17.07 docker plugin install riyaz/authz-no-volume-plugin dockerd --authorization-plugin=riyaz/authz-no-volume-plugin:latest curl -sSL https://dl.bintray.com/emccode/rexray/install | sh - google cloud engine drive docker plugin install rexray/gcepd:latest GCEPD_TAG=rexray GCEPD_ZONE=us-east4-a GCEPD_DEFAULTDISKTYPE=pd-standard sshfs https://github.com/vieux/docker-volume-sshfs/blob/master/main.go sshfs root@l14:/home/tecmint/ /mnt/tecmint fuse.sshfs defaults 0 0 Docker volume plugin for sshFS 准备工作：必备</description>
    </item>
    
    <item>
      <title>Awesome docker</title>
      <link>/devops/docker/awesome-docker/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/awesome-docker/</guid>
      <description> WEB UI  seagull is Friendly Web UI to manage and monitor docker
docker run -d -p 10086:10086 -v /var/run/docker.sock:/var/run/docker.sock tobegit3hub/seagull
   Multi-host
Seagull supports monitoring multiple servers. Make sure you start docker daemon like this.
docker -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock -api-enable-cors=true -d
 </description>
    </item>
    
    <item>
      <title>Portainer</title>
      <link>/devops/docker/portainer/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/portainer/</guid>
      <description>Portainer
http://114.215.45.96:9000
admin:por...</description>
    </item>
    
    <item>
      <title>dockerRegistry</title>
      <link>/devops/docker/dockerregistry/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/dockerregistry/</guid>
      <description>纯HTTP的Registry 从官方拉取一个Registry $ docker run -d -p 5000:5000 --restart=always --name registry -vpwd/data:/var/lib/registry registry:2 修改docker1.12版 Registry server 以及所有要访问Registry</description>
    </item>
    
    <item>
      <title>Docker基础-常用技巧</title>
      <link>/devops/docker/docker/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker/</guid>
      <description>docker 操作命令详解 Docker —— 从入门到实践 Docker 知识库 Docker 中文指南 Docker中文网站： 一小时Docker教程 Docker学习笔记之一，搭建一个JAVA To</description>
    </item>
    
    <item>
      <title>Linux命令 Docker</title>
      <link>/devops/docker/docker-network-bridge/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-network-bridge/</guid>
      <description>Docker：添加自定义网桥 Docker服务进程在启动的时候会生成一个名为docker0的网桥，容器默认都会挂载到该网桥下，但是我们可以通过</description>
    </item>
    
    <item>
      <title>Linux命令 Docker machine</title>
      <link>/devops/docker/docker-machine/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-machine/</guid>
      <description>Install docker-machine sudo curl -C - -Lk --socks5 127.0.0.1:1080 https://github.com/docker/machine/releases/download/v0.11.0/docker-machine-`uname -s-uname -m` -o /usr/local/bin/docker-machine sudo curl -C - -Lkx 127.0.0.1:8087 https://github.com/docker/machine/releases/download/v0.11.0/docker-machine-uname -s-uname -m-o /usr/local/bin/docker-machine &amp;amp;&amp;amp; \ sudo chmod +x /usr/local/bin/docker-machine ExecStart=/usr/bin/dockerd -D -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --storage-driver aufs --tls=true --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=generic swarm集群 --generic-engine-port: Port to use for Docker Daemon (Note: This flag will not work with boot2docker).</description>
    </item>
    
    <item>
      <title>Linux命令 Docker swarm</title>
      <link>/devops/docker/docker-swarm/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-swarm/</guid>
      <description>ElasticSearch cluster using Docker Swarm mode 1.12 基本知识 docker swarm init --advertise-addr 192.168.99.100 --advertise-addr vboxnet0 指定发布ip;绑定监听网卡 --advertise-addr 参数用来标记当前管理节点发布出去后的网络地址，集群中的其他节点应该可以通过这</description>
    </item>
    
    <item>
      <title>Linux命令 Docker volume</title>
      <link>/devops/docker/docker-volume/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-volume/</guid>
      <description>Use Docker Engine plugins - Docker List of Docker Volume Drivers | Emerging Technology Deep Dive Volume Driver Supported Remote Storage Type Source Flocker OpenZFS, EMC Scaleio, NetApp ONTP, etc ClusterHQ Ceph RBD Ceph RBD Yahoo AcalephStorage VolPlugin EMC Rexray EMC Scaleio, XtremIO, AWS EBS, OpenStack Cinder EMC Convoy VFS, NFS Rancher Lab Glusterfs Glusterfs Docker NFS NFS Docker Azure File Service Azure File Service Microsoft iSCSI iSCSI Phoenix-io, Blockbridge</description>
    </item>
    
    <item>
      <title>Linux命令 Dockerfile</title>
      <link>/devops/docker/dockerfile/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/dockerfile/</guid>
      <description>http://www.cnblogs.com/52fhy/p/5638571.html dockerfile 剖析 ENV ENV 的就是给docker来设置变量的. 基本格式为: ENV name=jimmy age=18 修改环境变量 ENV PATH=$PATH:/user/bin 而通过 ENV 我们就可以完美的告诉docker 从这里开始,你就不能</description>
    </item>
    
    <item>
      <title>Linux命令 alpie</title>
      <link>/devops/docker/alpine/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/alpine/</guid>
      <description>ENV TIMEZONE Asia/Shanghai RUN ln -snf /usr/share/zoneinfo/$TIMEZONE /etc/localtime RUN echo $TIMEZONE &amp;gt; /etc/timezone RUN sed -i &#39;$a * soft nproc 65536 \ * hard nproc 65536 \ * soft nofile 65536 \ * hard nofile 65536 \ &#39; \ /etc/security/limits.conf #RUN sed -i &#39;$a # fs.file-max = 767246 # fs.aio-max-nr = 1048576 # &#39; /etc/sysctl.conf RUN sed -i &#39;$a ulimit -s 4096 \ ulimit -m 15728640 \ &#39; /etc/profile</description>
    </item>
    
    <item>
      <title>Linux命令 docker-compose</title>
      <link>/devops/docker/docker-compose/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-compose/</guid>
      <description>官方参考文档 Compose file version 3 reference - Docker Documentation https://github.com/docker/compose/releases Docker Compose文件详解 V2 [](https://yq.aliyun.com/articles/69444) 1. Install docker-compose by pip apt-get install python-pip python-dev sudo pip install --upgrade pip pip install -U docker-compose 2. Install docker-compose by curl uname -s &amp;gt;&amp;gt; linux uname -m &amp;gt;&amp;gt; x86_64 curl -Lkx 127.0.0.1:8087 https://github.com/docker/compose/releases/download/1.12.0/docker-compose-`uname -s-uname -m`|sudo tee /usr/local/bin/docker-compose sudo curl</description>
    </item>
    
  </channel>
</rss>