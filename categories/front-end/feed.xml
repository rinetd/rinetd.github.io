<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Front-End on 时光小栈</title>
    <link>/categories/front-end/</link>
    <description>Recent content in Front-End on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 07 Nov 2017 18:55:24 +0000</lastBuildDate>
    
	<atom:link href="/categories/front-end/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript原生数组及高阶函数</title>
      <link>/frontend/js/javascript%E5%8E%9F%E7%94%9F%E6%95%B0%E7%BB%84%E5%8F%8A%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 07 Nov 2017 18:55:24 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/javascript%E5%8E%9F%E7%94%9F%E6%95%B0%E7%BB%84%E5%8F%8A%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</guid>
      <description>一、map map() 方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果 callback 函数会被自动传入三个参数：数组元素，元素索引，原</description>
    </item>
    
    <item>
      <title>jQuery之DOM操作小结</title>
      <link>/frontend/jquery/jquery%E4%B9%8Bdom%E6%93%8D%E4%BD%9C%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Sat, 14 Jan 2017 10:20:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery%E4%B9%8Bdom%E6%93%8D%E4%BD%9C%E5%B0%8F%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;一-过滤器&#34;&gt;一、过滤器&lt;/h3&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;1-匹配指定元素的父&#34;&gt;1 匹配指定元素的父&lt;/h4&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;elem.parent([exp])&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-匹配指定元素的子元素&#34;&gt;2 匹配指定元素的子元素&lt;/h4&gt;

&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>JavaScript作用域分析总结</title>
      <link>/frontend/js/js-javascript%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%88%86%E6%9E%90%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 10 Jan 2017 12:50:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-javascript%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%88%86%E6%9E%90%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文链接 &lt;a href=&#34;http://blog.poetries.top/2017/01/10/js-scope&#34; target=&#34;_blank&#34;&gt;http://blog.poetries.top/2017/01/10/js-scope&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;一-js解析顺序和作用域&#34;&gt;一、JS解析顺序和作用域：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;解析顺序：&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;定义 (1. 先找&lt;code&gt;var&lt;/code&gt;  &lt;code&gt;function&lt;/code&gt;)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;执行 (2. 再逐步执行)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;注意:如果函数名和&lt;code&gt;var&lt;/code&gt;定义的变量相同，&lt;code&gt;var&lt;/code&gt;会被函数覆盖&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;作用域：&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;每个&lt;code&gt;script&lt;/code&gt;是一个作用域&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;每个函数&lt;code&gt;{}&lt;/code&gt;是一个作用域&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;程序每执行到一个作用域，都是按照解析顺序解析代码;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;作用域链:从内往外找要找函数内的变量;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JS常用的内置函数整理</title>
      <link>/frontend/js/js-functions-%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 13 Dec 2016 14:50:24 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-functions-%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;h3 id=&#34;string字符串对象&#34;&gt;String字符串对象&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt; 属性 长度&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;concat(String)&lt;/code&gt; 连接两个或更多个字符&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;indexOf(string)&lt;/code&gt; 返回出现字符的位置&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;substr(num1,[num2])&lt;/code&gt;截取字符串&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;转成小写&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;转成大写&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;replace(str1,str2)&lt;/code&gt; 字符串替换&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery笔记总结篇</title>
      <link>/frontend/jquery/jquery-%E6%80%BB%E7%BB%93%E7%AF%87/</link>
      <pubDate>Thu, 20 Oct 2016 09:35:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-%E6%80%BB%E7%BB%93%E7%AF%87/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文链接 &lt;a href=&#34;http://blog.poetries.top/2016/10/20/review-jQuery&#34; target=&#34;_blank&#34;&gt;http://blog.poetries.top/2016/10/20/review-jQuery&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先，来了解一下&lt;code&gt;jQuery&lt;/code&gt;学习的整体思路&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xq6al.com1.z0.glb.clouddn.com/jquery1.png&#34; alt=&#34;jQuery系统学习篇&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS中的BFC</title>
      <link>/frontend/css/css%E4%B8%AD%E7%9A%84bfc/</link>
      <pubDate>Wed, 07 Sep 2016 18:20:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css%E4%B8%AD%E7%9A%84bfc/</guid>
      <description>&lt;h3 id=&#34;bfc-是什么&#34;&gt;BFC 是什么？&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BFC&lt;/code&gt; (&lt;code&gt;Block Formatting Contexts&lt;/code&gt;) 即块级格式化上下文，从样式上看，它与普通的容器没有什么区别，但是从功能上，&lt;code&gt;BFC&lt;/code&gt; 可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 &lt;code&gt;BFC&lt;/code&gt; 具有普通容器没有的一些特性，例如可以包含浮动元素，使到它可以包含浮动元素，从而防止出现高度塌陷的问题&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery基础之Ajax（六）</title>
      <link>/frontend/jquery/jquery-6.%E5%9F%BA%E7%A1%80%E4%B9%8Bajax%E5%85%AD/</link>
      <pubDate>Sun, 07 Aug 2016 22:30:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-6.%E5%9F%BA%E7%A1%80%E4%B9%8Bajax%E5%85%AD/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ajax&lt;/strong&gt; : &lt;code&gt;Asynchronous Javascript And XML&lt;/code&gt; （异步的&lt;code&gt;JavaScript&lt;/code&gt;和&lt;code&gt;XML&lt;/code&gt;）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建&lt;code&gt;ajax&lt;/code&gt;对象 &lt;code&gt;var xhr = new XMLHttpRequest();&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery基础之Event（五）</title>
      <link>/frontend/jquery/jquery-5.%E5%9F%BA%E7%A1%80%E4%B9%8Bevent%E4%BA%94/</link>
      <pubDate>Sun, 07 Aug 2016 22:10:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-5.%E5%9F%BA%E7%A1%80%E4%B9%8Bevent%E4%BA%94/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;什么是&lt;code&gt;Event&lt;/code&gt;？&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery基础之插件（六）</title>
      <link>/frontend/jquery/jquery-7.%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%8F%92%E4%BB%B6%E5%85%AD/</link>
      <pubDate>Sun, 07 Aug 2016 22:10:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-7.%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%8F%92%E4%BB%B6%E5%85%AD/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;什么是插件&lt;br /&gt;
插件(&lt;code&gt;Plugin&lt;/code&gt;)也称为&lt;code&gt;jQuery&lt;/code&gt;的扩展。以`&lt;code&gt;jQuery核心代码为基础编写的符合一定规范的应用程序。通过&lt;/code&gt;js文件的方式引用。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery动画基础（四）</title>
      <link>/frontend/jquery/jquery-4.%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80%E5%9B%9B/</link>
      <pubDate>Sun, 07 Aug 2016 21:10:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-4.%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80%E5%9B%9B/</guid>
      <description>&lt;p&gt;&lt;strong&gt;介绍&lt;code&gt;jQuery&lt;/code&gt;动画&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JavaScript&lt;/code&gt;语言本身不支持动画设计，必须通过改变`CSS来实现动画效果。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery操作DOM（三）</title>
      <link>/frontend/jquery/jquery-3.%E6%93%8D%E4%BD%9Cdom%E4%B8%89/</link>
      <pubDate>Sun, 07 Aug 2016 21:10:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-3.%E6%93%8D%E4%BD%9Cdom%E4%B8%89/</guid>
      <description>&lt;h3 id=&#34;操作dom&#34;&gt;操作DOM&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>jQuery选择器及优化（二）</title>
      <link>/frontend/jquery/jquery-2.%E9%80%89%E6%8B%A9%E5%99%A8%E5%8F%8A%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sun, 07 Aug 2016 21:05:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery-2.%E9%80%89%E6%8B%A9%E5%99%A8%E5%8F%8A%E4%BC%98%E5%8C%96/</guid>
      <description>&lt;h3 id=&#34;层级选择器&#34;&gt;层级选择器:&lt;/h3&gt;

&lt;p&gt;通过&lt;code&gt;DOM&lt;/code&gt;的嵌套关系匹配元素&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jQuery与原生JS的DOM操作对比</title>
      <link>/frontend/jquery/jquery%E4%B8%8E%E5%8E%9F%E7%94%9Fjs%E7%9A%84dom%E6%93%8D%E4%BD%9C%E5%AF%B9%E6%AF%94-/</link>
      <pubDate>Wed, 27 Jul 2016 13:50:20 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/jquery/jquery%E4%B8%8E%E5%8E%9F%E7%94%9Fjs%E7%9A%84dom%E6%93%8D%E4%BD%9C%E5%AF%B9%E6%AF%94-/</guid>
      <description>&lt;h3 id=&#34;1-创建元素节点&#34;&gt;1. 创建元素节点&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;原生JS创建元素节点: &lt;code&gt;document.createElement(&amp;quot;p&amp;quot;);&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;jQuery创建元素节点：&lt;code&gt;$(&#39;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&#39;);&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JavaScript与Unicode编码</title>
      <link>/frontend/js/js-encode-unicode/</link>
      <pubDate>Wed, 27 Jul 2016 11:40:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-encode-unicode/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;字符集的概念：&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;字符集：就是--编码--&amp;gt;字符的映射&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JavaScript中三种绑定事件的方式与去除绑定</title>
      <link>/frontend/js/js-event-onclick/</link>
      <pubDate>Wed, 27 Jul 2016 11:40:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-event-onclick/</guid>
      <description>window.addEventListener(&#39;wheel&#39;, function (e) { // firstScrollStatus(e, &#39;wheel&#39;); e.stopPropagation(); e.preventDefault(); }, { passive: false }); const items = document.querySelector(&amp;quot;#items&amp;quot;); right.addEventListener(&amp;quot;click&amp;quot;, function() { loop(&amp;quot;right&amp;quot;); }); left.addEventListener(&amp;quot;click&amp;quot;, function() { loop(&amp;quot;left&amp;quot;); }); function loop(direction) { if (direction === &amp;quot;right&amp;quot;) { items.appendChild(items.firstElementChild); } else { items.insertBefore(items.lastElementChild, items.firstElementChild); } } 绑定事件的第1种办法： 函数写在结构层里面 非常不好，使</description>
    </item>
    
    <item>
      <title>JavaScript中三种绑定事件的方式与去除绑定</title>
      <link>/frontend/js/js-event-onscroll/</link>
      <pubDate>Wed, 27 Jul 2016 11:40:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-event-onscroll/</guid>
      <description>How to develop high performance onScroll event? javascript - window.onscroll无法刷新scrollTop的值？ - SegmentFault 思否 return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0; scrolltop = (((t = document.documentElement) || (t = document.body.parentNode)) typeof t.scrollTop == ‘numbe</description>
    </item>
    
    <item>
      <title>JavaScript之定时器</title>
      <link>/frontend/js/js-timer-settimeout-setinterval/</link>
      <pubDate>Wed, 27 Jul 2016 11:40:43 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/js/js-timer-settimeout-setinterval/</guid>
      <description>&lt;h3 id=&#34;setinterval和settimeout的区别&#34;&gt;setInterval和setTimeout的区别，&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  setTimeout(function(){
    /* Some long block of code... */
    setTimeout(arguments.callee, 10);
  }, 10);
 
  setInterval(function(){
    /* Some long block of code... */
  }, 10);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看第一眼，会觉得这两段代码功能相同，实际上，他们是不同的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   需要注意到，setTimeout的回调函数的执行总是保证了至少10ms的间隔（与上一个回调的执行相比，实际执行时，这个间隔可能变长，但是不可能更少），但是setInterval会尝试每隔10ms执行一次回调，不管上一个回调函数时候已经执行完毕。（很多类库的动画都是使用的setTimeout实现）
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;window定时器&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setIntval&lt;/code&gt;(表达式,毫秒)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clearIntval&lt;/code&gt;(定时器对象)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTimeout&lt;/code&gt;(表达式,毫秒)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clearTimeout&lt;/code&gt;(定时器对象)&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>HTML5 CSS3 最酷的 loading 效果收集</title>
      <link>/frontend/css/html5-css3-%E6%9C%80%E9%85%B7%E7%9A%84-loading-%E6%95%88%E6%9E%9C%E6%94%B6%E9%9B%86/</link>
      <pubDate>Fri, 20 May 2016 09:11:44 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/html5-css3-%E6%9C%80%E9%85%B7%E7%9A%84-loading-%E6%95%88%E6%9E%9C%E6%94%B6%E9%9B%86/</guid>
      <description>&lt;p&gt;这里收集了几十个用 html5 和 css3 实现的 loading 效果，以供学习参考&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS块级元素和行内元素</title>
      <link>/frontend/css/css%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</link>
      <pubDate>Wed, 16 Mar 2016 16:24:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</guid>
      <description>&lt;p&gt;&lt;code&gt;HTML&lt;/code&gt;中的元素可分为两种类型：块级元素和行级元素。这些元素的类型是通过文档类型定义（DTD）来指明。块级元素：显示在一块内，会自动换行，元素会从上到下垂直排列，各自占一行，如&lt;code&gt;p&lt;/code&gt;,&lt;code&gt;ul&lt;/code&gt;,&lt;code&gt;form&lt;/code&gt;,&lt;code&gt;div&lt;/code&gt;等标签元素。行内元素：元素在一行内水平排列，高度由元素的内容决定，&lt;code&gt;height&lt;/code&gt;属性不起作用，如span,input等元素。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DIV企业命名参考</title>
      <link>/frontend/html/html-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</link>
      <pubDate>Mon, 14 Mar 2016 14:09:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/html-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</guid>
      <description>&lt;h3 id=&#34;网页内容类&#34;&gt;&lt;strong&gt;网页内容类&lt;/strong&gt;&lt;/h3&gt;</description>
    </item>
    
  </channel>
</rss>