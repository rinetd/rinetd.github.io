<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>嵌入式 on 时光小栈</title>
    <link>/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/</link>
    <description>Recent content in 嵌入式 on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 04 Feb 2017 02:17:22 +0800</lastBuildDate>
    
	<atom:link href="/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CANBUS协议解析</title>
      <link>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/canbus%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sat, 04 Feb 2017 02:17:22 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/canbus%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</guid>
      <description>CAN协议，系统结构和帧结构 一张图诠释CAN标准帧和扩展帧的区别 简单学习STM32CAN协议 [](http://blog.csdn.net/mao0514/article/details/48131597) RTR Remote Transmission Request 远程帧 [ 隐性(1)为远程帧 ) IDE Identifier Extension 扩展</description>
    </item>
    
    <item>
      <title>BOSCH协议解析</title>
      <link>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/bosch%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sat, 04 Feb 2017 02:15:52 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/bosch%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</guid>
      <description>BOSCH协议是BOSCH公司开发的一种通信协议，符合ISO9141标准。下面从物理层特性、系统进入、帧结构、命令交互、交互时间参数、常用命</description>
    </item>
    
    <item>
      <title>VPW协议解析</title>
      <link>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/vpw%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sat, 04 Feb 2017 02:15:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/vpw%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</guid>
      <description>SAE J1850 VPW协议也是OBD II标准中的一种，通常应用于GM车系中。VPW英文全称是Variable Pulse Width Modulated，即可变脉宽调制。下面</description>
    </item>
    
    <item>
      <title>PWM协议解析</title>
      <link>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/pwm%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sat, 04 Feb 2017 02:13:53 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/pwm%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</guid>
      <description>SAEJ1850 PWM协议也是OBD II标准中的一种，通常应用在FORD车系汽车中，已知的还有JAGUAR，MAZDA。PWM英文全称是Pulse Width Mod</description>
    </item>
    
    <item>
      <title>ISO9141-2协议解析</title>
      <link>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/iso9141-2%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sat, 04 Feb 2017 02:12:52 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/iso9141-2%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</guid>
      <description>ISO-9141-2协议是最常用的通信协议之一，也是属于OBD II标准协议的一种。下面从物理层特性、系统进入、帧结构、命令交互、交互时间参数</description>
    </item>
    
    <item>
      <title>KWP2000协议解析</title>
      <link>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/kwp2000%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sat, 04 Feb 2017 02:09:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/%E8%BD%A6%E8%81%94%E7%BD%91/kwp2000%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</guid>
      <description>KWP 2000协议是最常用的通信协议之一，是属于OBD II标准协议的一种。KWP系统又称为关键字协议，因为这种协议在系统进入时，会涉及到关键字的</description>
    </item>
    
    <item>
      <title>编程基础</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/linux%E5%86%85%E6%A0%B8-%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 07 Mar 2016 15:36:55 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/linux%E5%86%85%E6%A0%B8-%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</guid>
      <description>Google 开源项目风格指南 使用 getopt() 进行命令行处理 C/C++ 中的0长数组（柔性数组） EOF是ASCII码为255的字符，对应的有符号数是-1 #define EOF (-1) Windows Ctrl-Z Linux Ctrl-D Lin</description>
    </item>
    
    <item>
      <title>Android GPIO输入</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/android-linux-gpio%E6%8C%89%E9%94%AE%E8%BE%93%E5%85%A5/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/android-linux-gpio%E6%8C%89%E9%94%AE%E8%BE%93%E5%85%A5/</guid>
      <description>petazzoni-device-tree-dummies Android编译系统参考手册 键值从键盘到Linux内核传输过程分析 Android4.2.2自增物理按键frameworks android kl文件 android4.0 添</description>
    </item>
    
    <item>
      <title>Android LED 输出</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/android-linux-led/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/android-linux-led/</guid>
      <description>1.2 LED使用1.2.1前言 Firefly-RK3288开发板上有 2 个 LED 灯，如下表所示： LED GPIO ref. GPIO number Blue GPIO8_A1 257 Yellow GPIO8_A2 258 可通过使用 LED 设备子系统或者直接操</description>
    </item>
    
    <item>
      <title>Android gpio输出</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/android-linux-gpio-%E8%BE%93%E5%87%BA/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/android-linux-gpio-%E8%BE%93%E5%87%BA/</guid>
      <description>使用手册 Power_ePAPR_APPROVED_v1.1.pdf GPIO接口解析 Device Tree（二）：基本概念 Linux加载DTS设备节点的过程(以高通8974平台为例) msm平台GPIO相关的de</description>
    </item>
    
    <item>
      <title>Android 按键输入</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/android-hal%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/android-hal%E7%BC%96%E7%A8%8B/</guid>
      <description>Android HAL编程</description>
    </item>
    
    <item>
      <title>Android 按键输入</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/android-linux-led%E5%AD%90%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/android-linux-led%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid>
      <description>LED子系统剖析（一） Platform设备之gpio-led分析 led子系统 gpio框架及处理流程分析 OpenWRT中的按键和灯的GPIO控</description>
    </item>
    
    <item>
      <title>Android开发环境搭建</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/android%E5%BA%95%E5%B1%82-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/android%E5%BA%95%E5%B1%82-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>Android编译系统参考手册 Android 源码下载 Android 编译环境 常用PPA源 [git] apt-add-repository ppa:git-core/ppa ssh-keygen -t rsa -b 4096 -C &amp;quot;rinetd@163.com&amp;quot; [java] add-apt-repository ppa:webupd8team/java [vim7.3] add-apt-repository ppa:passy/vim [python2.7] add-apt-repository ppa:fkrull/deadsnakes [cmake 2.8.11] apt-add-repository ppa:roblib/ppa ################################################################################ Ubuntu 10.04 64位LTS英文版本 sudo apt-get install</description>
    </item>
    
    <item>
      <title>Android自动开关机实现</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/android-%E8%87%AA%E5%8A%A8%E5%BC%80%E5%85%B3%E6%9C%BA%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/android-%E8%87%AA%E5%8A%A8%E5%BC%80%E5%85%B3%E6%9C%BA%E5%AE%9E%E7%8E%B0/</guid>
      <description>Android自动开关机实现 关于android自动关机，网上有很多应用程序和例子。 相对于自动开机来说，自动关机可以在应用层通过设置alarm</description>
    </item>
    
    <item>
      <title>Linux内核及文件系统移植</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/linux%E5%86%85%E6%A0%B8-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%A7%BB%E6%A4%8D/</link>
      <pubDate>Thu, 07 Jan 2016 16:46:14 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/linux%E5%86%85%E6%A0%B8-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%A7%BB%E6%A4%8D/</guid>
      <description>Linux内核及文件系统移植 嵌入式系统包含硬件子系统与软件子系统，其中软件子系统大致可分为：bootloader、Linux内核、文件系统与</description>
    </item>
    
    <item>
      <title>嵌入式开发 AM335x</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/linux%E5%B5%8C%E5%85%A5%E5%BC%8F-am335x%E5%BC%80%E5%8F%91/</link>
      <pubDate>Thu, 07 Jan 2016 16:46:14 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/linux%E5%B5%8C%E5%85%A5%E5%BC%8F-am335x%E5%BC%80%E5%8F%91/</guid>
      <description>TI Resource Explorer PROCESSOR-SDK-LINUX-AM335X AM335x(TQ335x)移植笔记 为AM335x移植Linux内核主线代码 TI am335x sdk安装过程记录 第一部分 sdk的组成 beaglebone black出</description>
    </item>
    
    <item>
      <title>Linux-下如何操作GPIO</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/linux-gpio/</link>
      <pubDate>Mon, 28 Dec 2015 19:37:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/linux-gpio/</guid>
      <description>可以使用系统中的GPIOLIB模块在用户空间提供的sysfs接口，实现应用层对GPIO的独立控制。 使用 Linux Kernel 提供的 sysfs 來控制 GPIO 在要寫程式之前，我</description>
    </item>
    
    <item>
      <title>Linux原子操作与同步机制</title>
      <link>/hardware/android-%E5%BA%95%E5%B1%82/linux%E5%86%85%E6%A0%B8-%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Mon, 28 Dec 2015 19:37:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/android-%E5%BA%95%E5%B1%82/linux%E5%86%85%E6%A0%B8-%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6/</guid>
      <description>0x01 并发问题 现代操作系统支持多任务的并发，并发在提高计算资源利用率的同时也带来了资源竞争的问题。例如C语言语句“count++;”在未经编译器</description>
    </item>
    
    <item>
      <title>STM32_定时器</title>
      <link>/hardware/stm32-%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
      <pubDate>Wed, 09 Dec 2015 11:00:19 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      <description>最近做项目，用到定时器，索性重新学习一下，以前只是用于简单的pwm生成和中断处理，对定时器根本就没有进行深入研究，今天借此机会，重新学习一下</description>
    </item>
    
    <item>
      <title>STM32_GPIO模式</title>
      <link>/hardware/stm32-gpio%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 04 Dec 2015 10:54:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-gpio%E6%A8%A1%E5%BC%8F/</guid>
      <description>所有的开漏输出都需要接上拉电阻。 ## 1、普通推挽输出（GPIO_Mode_Out_PP）: 使用场合：一般用在0V和3.3V的场合。线路经过两个</description>
    </item>
    
    <item>
      <title>STM32_TIM定时器</title>
      <link>/hardware/stm32-tim%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
      <pubDate>Thu, 03 Dec 2015 14:44:28 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-tim%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      <description>名词解释： 1.单脉冲模式 One Pulse mode TIM_SelectOnePulseMode(TIM2, TIM_OPMode_Single)//设置TIM2在单脉冲模式，且是单一的脉冲，在下一个更新事件停止 关于始</description>
    </item>
    
    <item>
      <title>STM32_NVIC中断响应</title>
      <link>/hardware/stm32-nvic%E4%B8%AD%E6%96%AD%E5%93%8D%E5%BA%94/</link>
      <pubDate>Thu, 03 Dec 2015 14:18:57 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-nvic%E4%B8%AD%E6%96%AD%E5%93%8D%E5%BA%94/</guid>
      <description>STM32中断优先级彻底讲解 - 凡人的博客 - CSDN博客 NVIC，中文名嵌套中断向量控制器，是Cortex-M3系列控制器内部独有集成单元，与</description>
    </item>
    
    <item>
      <title>STM32中断</title>
      <link>/hardware/stm32%E4%B8%AD%E6%96%AD/</link>
      <pubDate>Wed, 02 Dec 2015 14:39:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32%E4%B8%AD%E6%96%AD/</guid>
      <description>stmcube太强大了 0x00 外部中配置EXIT stm32中断边沿是可配置的 既可以配置为上升沿触发，也可配置为下降沿触发，还可以同时触发</description>
    </item>
    
  </channel>
</rss>