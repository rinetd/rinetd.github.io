<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>时光小栈</title>
    <link>/language/android/</link>
    <description>Recent content on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 11 Jan 2016 14:10:29 +0800</lastBuildDate>
    
	<atom:link href="/language/android/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Activity详解</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-activity%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-activity%E8%AF%A6%E8%A7%A3/</guid>
      <description>Activity四种启动模式详解 Android生命周期 理解Fragment生命周期 Activity四种启动模式详解 standard ［多任务，多实例］ 可重复</description>
    </item>
    
    <item>
      <title>Android Activity和Intent机制学习笔记</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-intent%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-intent%E5%AE%9E%E4%BE%8B/</guid>
      <description>[](blog.csdn.net/zhangjg_blog/article/details/10901293) Intent用法实例 1.无参数Activity跳转 Intent it = new Intent(Activity.Main.this, Activity2.class); startActivity(it); 2.向下一个Activity传递数据（使用Bundle和Intent.pu</description>
    </item>
    
    <item>
      <title>Android Intent 详解</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-intent%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-intent%E6%9C%BA%E5%88%B6/</guid>
      <description>第十章：Intent详解 android intent和intent action大全 Android Activity和Intent机制学习笔记 1.Intent的用法： (1</description>
    </item>
    
    <item>
      <title>Android NDK C&#43;&#43; 开发利器：Android Studio</title>
      <link>/language/android/android-ndk-c&#43;&#43;-%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8android-studio/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android-ndk-c&#43;&#43;-%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8android-studio/</guid>
      <description>http://www.androiddevtools.cn/ 在今年的Google IO大会上，Google宣布Android Studio开始支持NDK开发。通过和JetBrains的合作，将CLion</description>
    </item>
    
    <item>
      <title>Android 应用开发常见问题</title>
      <link>/language/android/android%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
      <description>android studio layout中的preview异常 Preview给出的提示： Rendering Problems Exception raised during rendering: com/Android/util/PropertiesMap 经过，实验，只要把SDK的版本调低就可以了。</description>
    </item>
    
    <item>
      <title>Android应用开发</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-toast/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-toast/</guid>
      <description>Toast定义为全局，避免一直不断的吐吐吐吐。 public class MToast { private static Toast mToast; private static TextView tv_content; public static void showToast(Context context, String msg) { try { if (mToast == null) { mToast = Toast.makeText(context, msg, Toast.LENGTH_SHORT); mToast.setGravity(Gravity.TOP, 0, DensityUtil.dip2px(context, 3)); View view = View.inflate(context, R.layout.m_toast, null); tv_content = (TextView) view.findViewById(R.id.tv_content); mToast.setView(view);</description>
    </item>
    
    <item>
      <title>Android应用开发</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91-%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91-%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>【Android 开发技巧】常见问题归纳——需要注意的坑和解决方案 全戦之路 Android总结篇系列：Android 权限 安卓资源库列表 feisky Android A中的</description>
    </item>
    
    <item>
      <title>Android应用开发环境搭建</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91-jni/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91-jni/</guid>
      <description>Create Hello-JNI with Android Studio Android NDK Preview Advanced Gradle Fundamentals for C/C++ Training Course Android Studio使用gradle-experimental构建NDK工程(无需Android.mk、Applic</description>
    </item>
    
    <item>
      <title>Android应用开发环境搭建</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>Google Java编程风格指南 移动应用开发必备工具盘点 云服务提供商 UCloud ## Bmob 个推 极光推送 LeanCloud [](https://www.firebase.com/) ## Fir.im IT性能监控神器 Testin云测 BugHD ## 短信验证码 代码库 code4app 优</description>
    </item>
    
    <item>
      <title>Android应用请求获取Root权限</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-root%E6%9D%83%E9%99%90/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-root%E6%9D%83%E9%99%90/</guid>
      <description>Android应用请求获取Root权限 要让Android应用获得Root权限，首先Android设备必须已经获得Root权限。 应用获取Roo</description>
    </item>
    
    <item>
      <title>Android控件布局属性全解</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-%E5%B8%83%E5%B1%80%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-%E5%B8%83%E5%B1%80%E5%B1%9E%E6%80%A7/</guid>
      <description>Android控件布局属性全解 Android五种布局模式 LinearLayout（线性布局） —— 从外框上可以理解为一个div，它首先是一个一</description>
    </item>
    
    <item>
      <title>Android权限管理</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
      <description>网络上不乏android权限列表，但是很少有将列表和使用方法放在一起的，所以特此总结一下 需要在AndroidManifest.xml中定义相</description>
    </item>
    
    <item>
      <title>Application.mk</title>
      <link>/language/android/android-ndk-application.mk%E6%96%87%E4%BB%B6/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android-ndk-application.mk%E6%96%87%E4%BB%B6/</guid>
      <description>Application.mk目的是描述在你的应用程序中所需要的模块(即静态库或动态库)。 Application.mk文件通常被放置在 $PRO</description>
    </item>
    
    <item>
      <title>android中解析JSON</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-json%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-json%E8%A7%A3%E6%9E%90/</guid>
      <description>怎样在android中解析JSON Jackson 是一个将java对象转换成JSON与JSON转化java类的类库。Gson 是解决这个问题的流行方案，然而</description>
    </item>
    
    <item>
      <title>四大组件之 Service</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6service/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6service/</guid>
      <description>Service,四大组件之一,是一个可以在后台执行长时间运行操作而不使用用户界面的应用组件。服务可由其他应用组件启动，而且即使用户切换到其他</description>
    </item>
    
    <item>
      <title>在Android开发中，如何结束整个应用程序</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8%E6%8A%80%E5%B7%A7-%E7%BB%93%E6%9D%9F%E6%89%80%E6%9C%89%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8%E6%8A%80%E5%B7%A7-%E7%BB%93%E6%9D%9F%E6%89%80%E6%9C%89%E5%BA%94%E7%94%A8/</guid>
      <description>我想做一个，点击按钮：关闭应用。就可以，结束整个，应用程序的功能。 北风某尸 和 班长小崔给提供了两种解决方案，仔细想想，都有道理！然后，参考了网</description>
    </item>
    
    <item>
      <title>自动填写短信验证码</title>
      <link>/language/android/android%E5%BA%94%E7%94%A8-%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99/</link>
      <pubDate>Mon, 11 Jan 2016 14:10:29 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/android/android%E5%BA%94%E7%94%A8-%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99/</guid>
      <description>这个也不是什么新东西，目前很多app都有这个功能，最近有几个小伙伴问我是怎么实现的，索性写一篇博客来为大家解答。 实现思路很简单： 1、在需要输</description>
    </item>
    
  </channel>
</rss>