<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>时光小栈</title>
    <link>/language/python/</link>
    <description>Recent content on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 08 Nov 2019 15:33:34 +0800</lastBuildDate>
    
	<atom:link href="/language/python/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>pyqt toolbar</title>
      <link>/language/python/pyqt/pyqt-toolbar/</link>
      <pubDate>Fri, 08 Nov 2019 15:33:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/pyqt/pyqt-toolbar/</guid>
      <description>super(QToolBar, self).setFixedHeight(value) https://github.com/tpoveda/tpQtLib/blob/da4baa56b457061bcd17fd52a4a66b64d672c035/source/tpQtLib/widgets/toolbar.py 修改toolbar的显示区域 self.addToolBar(Qt.TopToolBarArea, toolbar) 修改toolbar的大小 toolBar.setFixedHeight(36); - works well. But if I set icon size after this: toolBar-&amp;gt;setFixedHeight(36); toolBar-&amp;gt;setIconSize(QSize(10, 10)); height breaks down. Also it happens if I set icon size via stylesheet. Changing of calls order helps: toolBar-&amp;gt;setIconSize(QSize(10, 10)); toolBar-&amp;gt;setFixedHeight(36); super(QToolBar, self).setFixedHeight(value) def</description>
    </item>
    
    <item>
      <title>python os split</title>
      <link>/language/python/python-os-split/</link>
      <pubDate>Wed, 06 Nov 2019 11:05:22 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-os-split/</guid>
      <description># -*- coding:utf-8 -*- &amp;quot;&amp;quot;&amp;quot; @author:lei &amp;quot;&amp;quot;&amp;quot; import os #os.path.join() 将分离的部分合成一个整体 filename=os.path.join(&#39;/home/ubuntu/python_coding&#39;,&#39;split_func&#39;) print filename #输出为：/home/ubuntu/python_coding/split_func #os</description>
    </item>
    
    <item>
      <title>opencv traffic sign detection</title>
      <link>/language/python/opencv/opencv-traffic-sign-detection/</link>
      <pubDate>Tue, 05 Nov 2019 17:38:22 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-traffic-sign-detection/</guid>
      <description>一次不太成功的项目实战：HOG特征+SVM实现交通标志的检测 - Meringue&#39;s Blog - CSDN博客 本文主要讲如何通过HOG特征和SVM分类器实现部分交通标志的</description>
    </item>
    
    <item>
      <title>python bytes string</title>
      <link>/language/python/python-bytes-string/</link>
      <pubDate>Fri, 01 Nov 2019 18:32:21 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-bytes-string/</guid>
      <description>1、bytes主要是给在计算机看的，string主要是给人看的 2、中间有个桥梁就是编码规则，现在大趋势是utf8 3、bytes对象是二进制，</description>
    </item>
    
    <item>
      <title>谈谈python2,3中的str、unicode</title>
      <link>/language/python/python-string/</link>
      <pubDate>Thu, 31 Oct 2019 21:02:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-string/</guid>
      <description>谈谈python2,3中的str、unicode - 简书 本文首先对Unicode与UTF-8的区别做一个解释，如果已了解，可跳过该部分。然后会</description>
    </item>
    
    <item>
      <title>python xml</title>
      <link>/language/python/python-xml/</link>
      <pubDate>Thu, 31 Oct 2019 20:34:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-xml/</guid>
      <description>ET读取xml try: import xml.etree.cElementTree as ET C实现速度快一点的xml.etree.cElementTree except ImportError: import xml.etree.ElementTree as ET import xml.etree.ElementTree as ET----------导入xml模</description>
    </item>
    
    <item>
      <title>pyqt QTableView</title>
      <link>/language/python/pyqt/pyqt-qtableview/</link>
      <pubDate>Thu, 31 Oct 2019 13:59:21 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/pyqt/pyqt-qtableview/</guid>
      <description>PyQt5高级界面控件之QTableWidget（四） - jia666666的博客 - CSDN博客 QTableView 实现Excel表格编辑功能 PyQt5使用记录</description>
    </item>
    
    <item>
      <title>qt QColorDialog</title>
      <link>/language/python/pyqt/qt-qcolordialog/</link>
      <pubDate>Thu, 31 Oct 2019 10:10:32 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/pyqt/qt-qcolordialog/</guid>
      <description>QColorDialog提供了选择颜色值的对话框控件。 下面是运行源代码: #!/usr/bin/env python # -*- coding: utf-8 -*- # @Time : 2017/11/1 下午3:03 # @Author : hukezhu # @Site : # @File : 1101-01-QColorDialog.py # @Software: PyCharm &amp;quot;&amp;quot;&amp;quot; 在这</description>
    </item>
    
    <item>
      <title>pyqt</title>
      <link>/language/python/pyqt/pyqt/</link>
      <pubDate>Wed, 30 Oct 2019 15:40:31 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/pyqt/pyqt/</guid>
      <description>【 分类 】- PyQt5基本窗口控件 - jia666666的博客 - CSDN博客</description>
    </item>
    
    <item>
      <title>pandas book</title>
      <link>/language/python/pandas/pandas-book/</link>
      <pubDate>Wed, 30 Oct 2019 09:14:22 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/pandas/pandas-book/</guid>
      <description>基础概念 import pandas as pd，是 Pandas 库约定的导入方式。 Pandas 库的两种重要数据类型：Series 类型（对应一维）和 DataFrame 类型（对应二维）。 DataFrame 类型的每一列对应着一个</description>
    </item>
    
    <item>
      <title>mplot3d</title>
      <link>/language/python/matplotlib/mplot3d/</link>
      <pubDate>Tue, 29 Oct 2019 10:14:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/matplotlib/mplot3d/</guid>
      <description>因为梯度下降算法需要绘制 3 维图像，故学习之，日后借鉴。 matplot 之 3D 绘图指南 本文稿翻译自 mplot3d tutorial — Matplotlib 2.0.2 documentation。 使用 matplotlib 绘制 3D 图像，一般</description>
    </item>
    
    <item>
      <title>numpy distance</title>
      <link>/language/python/numpy/numpy-distance/</link>
      <pubDate>Mon, 28 Oct 2019 16:30:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/numpy/numpy-distance/</guid>
      <description># coding=utf-8 &amp;quot;&amp;quot;&amp;quot; Created on Sun Dec 28 10:33:42 2014 @author: wepon &amp;quot;&amp;quot;&amp;quot; # 相似度计算,inA、inB都是行向量 import numpy as np from numpy import linalg as la # 欧式距离 def euclidSimilar(inA, inB): return 1.0 / (1.0 + la.norm(inA - inB)) # 皮尔逊相关系数 def pearsonSimilar(inA , inB):</description>
    </item>
    
    <item>
      <title>pyplot</title>
      <link>/language/python/matplotlib/pyplot/</link>
      <pubDate>Mon, 28 Oct 2019 13:49:10 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/matplotlib/pyplot/</guid>
      <description>matplotlib plot 绘图 实现样式和标注动态显示(根据鼠标位置) - qq_1874445373的博客 - CSDN博客 Python+matplotlib实现鼠标跟随</description>
    </item>
    
    <item>
      <title>python super</title>
      <link>/language/python/python-super/</link>
      <pubDate>Mon, 30 Sep 2019 17:25:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-super/</guid>
      <description>Python super 详解</description>
    </item>
    
    <item>
      <title>python defaultdict</title>
      <link>/language/python/python-defaultdict/</link>
      <pubDate>Mon, 30 Sep 2019 17:08:19 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-defaultdict/</guid>
      <description>理解 Python 语言中的 defaultdict - 团子的小窝</description>
    </item>
    
    <item>
      <title>opencv imgproc</title>
      <link>/language/python/opencv/opencv-imgproc/</link>
      <pubDate>Fri, 27 Sep 2019 18:00:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-imgproc/</guid>
      <description>[](#目录 &amp;quot;目录&amp;quot;)目录 平滑图像 / 模糊 腐蚀和膨胀 形态变化 ：开运算 、闭运算 、形态梯度、 顶帽 、黑帽 Hit-or-Miss 击中击不中 图像金字塔 二</description>
    </item>
    
    <item>
      <title>opencv Threshold</title>
      <link>/language/python/opencv/opencv-threshold/</link>
      <pubDate>Fri, 27 Sep 2019 16:51:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-threshold/</guid>
      <description>OpenCV阈值操作(Threshold，AdaptiveThreshold) - 疯狂的LittleBee的博客 - CSDN博客 def threshold(src, thresh, maxval, type, dst=None) th</description>
    </item>
    
    <item>
      <title>opencv inpaint</title>
      <link>/language/python/opencv/opencv-inpaint/</link>
      <pubDate>Fri, 27 Sep 2019 16:45:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-inpaint/</guid>
      <description>图像修复 import cv2 import numpy as np import os def deal(img_path,out_path,img_name): print(&amp;quot;deal&amp;quot;,img_path) img = cv2.imread(img_path) hight, width, depth = img.shape[0:3] # 图片二值化处理，把[240, 240, 240]~[255, 255, 255]以外的颜色变成0 thresh = cv2.inRange(img, np.array([0, 0, 130]), np.array([50, 50, 255])) # 创建形状和尺寸</description>
    </item>
    
    <item>
      <title>opencv</title>
      <link>/language/python/opencv/opencv/</link>
      <pubDate>Fri, 27 Sep 2019 14:54:57 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv/</guid>
      <description>arch=$(uname -m) if [ &amp;quot;$arch&amp;quot; == &amp;quot;i686&amp;quot; -o &amp;quot;$arch&amp;quot; == &amp;quot;i386&amp;quot; -o &amp;quot;$arch&amp;quot; == &amp;quot;i486&amp;quot; -o &amp;quot;$arch&amp;quot; == &amp;quot;i586&amp;quot; ]; then flag=1 else flag=0 fi echo &amp;quot;Installing OpenCV 3.0.0&amp;quot; mkdir OpenCV cd OpenCV echo &amp;quot;Removing any pre-installed ffmpeg and x264&amp;quot; sudo apt-get -y remove ffmpeg x264 libx264-dev echo &amp;quot;Installing Dependenices&amp;quot; sudo apt-get -y install libopencv-dev sudo apt-get -y install build-essential checkinstall cmake pkg-config yasm sudo apt-get -y install libjpeg-dev libjasper-dev</description>
    </item>
    
    <item>
      <title>opencv 图像的腐蚀(erode)和膨胀(dilate) 开运算以及闭运算</title>
      <link>/language/python/opencv/opencv-erode-dilate/</link>
      <pubDate>Fri, 27 Sep 2019 14:22:55 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-erode-dilate/</guid>
      <description>OpenCV---开闭操作 - 山上有风景 - 博客园 腐蚀 ： 腐蚀操作会把前景物体的边缘腐蚀掉。原理是卷积核沿着图像滑动，如果与卷积核对应的原图像像素</description>
    </item>
    
    <item>
      <title>opencv findContours</title>
      <link>/language/python/opencv/opencv-findcontours/</link>
      <pubDate>Fri, 27 Sep 2019 09:43:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-findcontours/</guid>
      <description>OpenCV中几何形状识别与测量-流浪的鱼-51CTO博客 import cv2 im = cv2.imread(&#39;star.png&#39;) im = im.copy() gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY) ret, binary = cv2.threshold(gray, 127, 255, cv2.THRESH_BINARY) # 寻找轮廓 contours, hierarchy = cv2.findContours(binary, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE) # 获取第一个矩形框的尺</description>
    </item>
    
    <item>
      <title>opencv inrange</title>
      <link>/language/python/opencv/opencv-inrange/</link>
      <pubDate>Fri, 27 Sep 2019 08:34:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-inrange/</guid>
      <description>OpenCV中的inRange()函数可实现二值化功能（这点类似threshold()函数），更关键的是可以同时针对多通道进行操作，使用起来</description>
    </item>
    
    <item>
      <title>opencv detected_edges</title>
      <link>/language/python/opencv/opencv-detected_edges/</link>
      <pubDate>Thu, 26 Sep 2019 14:01:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-detected_edges/</guid>
      <description>轮廓检测 OpenCV中几何形状识别与测量-流浪的鱼-51CTO博客 计算极值 pentagram = contours[1] #第二条轮廓是五角星 leftmost = tuple(pentagram[:,0][pentagram[:,:,0].argmin()]) rightmost = tuple(pentagram[:,0][pentagram[:,:,0].argmin()]) cv2.circle(img, leftmost, 2, (0,255,0),3) cv2.circle(img, rightmost, 2, (0,0,255),3) 获取标记图片</description>
    </item>
    
    <item>
      <title>python HSV</title>
      <link>/language/python/opencv/python-hsv/</link>
      <pubDate>Thu, 26 Sep 2019 13:57:06 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/python-hsv/</guid>
      <description>opencv中的HSV空间取值范围： H 0~180，S 0~255，V 0~255； Android中的HSV空间取值范围： H 0~360，S 0~1，</description>
    </item>
    
    <item>
      <title>python loadimage</title>
      <link>/language/python/python-loadimage/</link>
      <pubDate>Sat, 21 Sep 2019 15:22:49 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-loadimage/</guid>
      <description>#定义图片数据集加载函数load_image def load_image(data_dir): labels = [] images = [] for d in directories: label_dir = os.path.join(data_dir, d) file_names = [os.path.join(label_dir, f) for f in os.listdir(label_dir) if f.endswith(&#39;.ppm&#39;)] for f in file_names: # 以指定的尺寸读取图像数据 image_data = image.load_img(f, target_size=(config.img_rows, config.img_cols))</description>
    </item>
    
    <item>
      <title>python str rbuf</title>
      <link>/language/python/python-str-rbuf/</link>
      <pubDate>Wed, 18 Sep 2019 14:40:33 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-str-rbuf/</guid>
      <description>r/R: 非转义的原始字符串 与普通字符相比，其他相对特殊的字符，其中可能包含转义字符，即那些，反斜杠加上对应字母，表示对应的特殊含义的，比如最常见的</description>
    </item>
    
    <item>
      <title>python class</title>
      <link>/language/python/python-class/</link>
      <pubDate>Wed, 18 Sep 2019 09:20:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-class/</guid>
      <description>正确理解Python中的 @staticmethod@classmethod方法 - 知乎</description>
    </item>
    
    <item>
      <title>python scrapy img</title>
      <link>/language/python/python-scrapy-img/</link>
      <pubDate>Mon, 16 Sep 2019 10:52:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-scrapy-img/</guid>
      <description>#coding=utf-8 import requests from bs4 import BeautifulSoup import os import time url=&amp;quot;https://www.tooopen.com/search/logo.aspx?cate=0&amp;amp;type=0&amp;amp;sort=1&amp;amp;level=0&amp;amp;color=0&amp;amp;copyright=0&amp;amp;page=1&amp;quot; ref=&amp;quot;https://www.tooopen.com/search/logo.aspx&amp;quot; #http请求头 referer = { &#39;User-Agent&#39;: &#39;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)&#39;, &#39;Referer&#39;: ref } #此请求头破解盗链 #保存地址 path = &#39;./data/&#39; #记录文件 data = &#39;./dl/.data&#39; #读取保存记录 def get_log(file): page</description>
    </item>
    
    <item>
      <title>python cuda</title>
      <link>/language/python/python-cuda/</link>
      <pubDate>Thu, 12 Sep 2019 08:36:05 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-cuda/</guid>
      <description>conda的安装与使用（2019-6-28更新） - 简书 清华大学开源软件镜像站 | Tsinghua... Anaconda 配置镜像 conda config --show 查看配置项 配置镜像(安装一次，镜像也只配置一</description>
    </item>
    
    <item>
      <title>Python高级特性——多维数组切片（Slice）</title>
      <link>/language/python/numpy/numpy-slice/</link>
      <pubDate>Wed, 11 Sep 2019 16:42:33 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/numpy/numpy-slice/</guid>
      <description>(1)我们先用arange函数创建一个数组并改变其维度，使之变成一个三维数组： a = np.arange(24).reshape(2,3,4) a array([[[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]], [[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]])</description>
    </item>
    
    <item>
      <title>python package module</title>
      <link>/language/python/python-package-module/</link>
      <pubDate>Sat, 23 Mar 2019 09:18:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-package-module/</guid>
      <description>Python模块导入与包构建最佳实践 - 简书</description>
    </item>
    
    <item>
      <title>py numpy quickstart</title>
      <link>/language/python/numpy/py-numpy-quickstart/</link>
      <pubDate>Thu, 07 Mar 2019 15:45:55 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/numpy/py-numpy-quickstart/</guid>
      <description>本文由 简悦 SimpRead 转码， 原文地址 http://studyai.site/2018/05/11/NumPy%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/ [](#快速入门教程 &amp;quot;快速入门教程&amp;quot;)快速入门教程 [](#前提条件 &amp;quot;前提条件&amp;qu</description>
    </item>
    
    <item>
      <title>python pytest</title>
      <link>/language/python/python-pytest/</link>
      <pubDate>Fri, 01 Mar 2019 07:14:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-pytest/</guid>
      <description>本文由 简悦 SimpRead 转码， 原文地址 https://www.jianshu.com/p/b825addb4e16 Pytest 学习笔记 记录下 pytest 官方文档的阅读笔记，以便后续参考使用。非完整版，个人理解为主，难免有误，望理解。 安装与快速使用</description>
    </item>
    
    <item>
      <title>python None</title>
      <link>/language/python/python-none/</link>
      <pubDate>Mon, 21 Jan 2019 14:07:41 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-none/</guid>
      <description>Python中对变量是否为None的判断 - 满月青灰 - 博客园 Python中对变量是否为None的判断 三种主要的写法有： 第一种：if X is None; 第二种</description>
    </item>
    
    <item>
      <title>py string nlp</title>
      <link>/language/python/py-string-nlp/</link>
      <pubDate>Thu, 27 Dec 2018 11:08:15 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/py-string-nlp/</guid>
      <description>https://github.com/fighting41love/funNLP 最近需要从文本中抽取结构化信息，用到了很多github上的包，遂整理了一下，后续会不断更新。 很多包非常有趣，值得收藏，满足大家的收集癖！ 如</description>
    </item>
    
    <item>
      <title>py string similary</title>
      <link>/language/python/py-string-similary/</link>
      <pubDate>Thu, 27 Dec 2018 10:56:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/py-string-similary/</guid>
      <description>自然语言处理中句子相似度计算的几种方法 luozhouyang/python-string-similarity: 最近因为工作需要，使用Python实现了常用的字符串相似度算法，一共超过十种。列举如下： Levenshtein NormalizedLevenshtein WeightedLevenshtein DamerauLevenshtein OptimalStringAlignment Jarowinkler</description>
    </item>
    
    <item>
      <title>py numpy</title>
      <link>/language/python/numpy/py-numpy/</link>
      <pubDate>Fri, 14 Dec 2018 10:43:40 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/numpy/py-numpy/</guid>
      <description>numpy 辨异（三）—— hstack/column_stack，linalg.eig/linalg.eigh - Zhang&#39;s Wikipedia - CSDN博客 1.3 NumPy：创建和</description>
    </item>
    
    <item>
      <title>py matplotlib</title>
      <link>/language/python/matplotlib/py-matplotlib/</link>
      <pubDate>Fri, 14 Dec 2018 10:43:10 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/matplotlib/py-matplotlib/</guid>
      <description>scipy Matplotlib Tutorial(译) https://matplotlib.org/faq/usage_faq.html scipy 1.4 Matplotlib：绘图 非常棒 Pyplot 教程 · Matplotlib 用户指南 8个Matplotlib常用技巧，带你走进Python可视</description>
    </item>
    
    <item>
      <title>pandas</title>
      <link>/language/python/pandas/</link>
      <pubDate>Sat, 17 Nov 2018 14:39:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/pandas/</guid>
      <description>NumPy 与深度学习 pandas删除行删除列，增加行增加列 - GUXH - 博客园 df1 = pd.DataFrame(np.ones((3,4))*0, columns=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]) #concat纵向合并 res = pd.concat([df1, df2, df3], axis=0) 安装与导入 通过pip进行安装: pip install pandas</description>
    </item>
    
    <item>
      <title>二叉树遍历</title>
      <link>/language/python/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</link>
      <pubDate>Sat, 17 Nov 2018 11:53:48 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</guid>
      <description>二叉树是一种非常重要的数据结构，很多其它数据结构都是基于二叉树的基础演变而来的。对于二叉树，有深度遍历和广度遍历， 深度遍历有前序、中序以及后</description>
    </item>
    
    <item>
      <title>numpy 中 Axis</title>
      <link>/language/python/pandas-numpy-axis/</link>
      <pubDate>Thu, 24 May 2018 14:56:10 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/pandas-numpy-axis/</guid>
      <description>如何理解Pandas 和 Numpy里的axis | 不正经数据科学家 a=np.random.randn(3, 3,4) a array([[[-1.07545889, -0.6768323 , -1.0880692 , 0.57601962], [ 1.56703709, -1.49662137, 0.82062876, 0.63184192], [-0.69757345, 1.18234807, -1.55820847, -1.72833287]], [[ 1.63360391, -0.46357388, 1.39688357, -2.63435781], [-1.64659948, -0.56986644, 0.19513227, -0.54037261], [ 0.24695649, -0.16908192, -0.43023855, -0.86536263]], [[-1.9470638 , -0.55732135, 2.89679383, 1.65513333], [ 0.43883947,</description>
    </item>
    
    <item>
      <title>PyPI 包管理器 pip 在 Windwos/Macos/Linux 下，配置国内镜像加速下载</title>
      <link>/language/python/python-pip/</link>
      <pubDate>Fri, 09 Mar 2018 18:08:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-pip/</guid>
      <description>修改pip全局配置 方法一：通过命令修改配置 pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ pip config set install.trusted-host mirrors.aliyun.com 方法二：修改/创建配置文件 在~/.pip/pip.conf配置文件（若没有则创</description>
    </item>
    
    <item>
      <title>Python3 从文件读取操作</title>
      <link>/language/python/py3-readfile/</link>
      <pubDate>Fri, 09 Mar 2018 18:08:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/py3-readfile/</guid>
      <description>转Python3从文件中读取数据 Python3有三种从文件中读取数据的方法： read() 读取整个文件内容；占用内存多 readline() 每次读取并返回一行数据；读取速度</description>
    </item>
    
    <item>
      <title>Python标准库 urllib2 的使用</title>
      <link>/language/python/python-urlib2/</link>
      <pubDate>Fri, 09 Mar 2018 18:08:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-urlib2/</guid>
      <description>1、Proxy 的设置 urllib2 默认会使用环境变量 http_proxy 来设置 HTTP Proxy。 如果想在程序中明确控制 Proxy，而不受环境变量的影响，可以使用下面的方式 import urllib2</description>
    </item>
    
    <item>
      <title>Python默认模块 os 和 shutil 实用函数</title>
      <link>/language/python/python-os-shutil.1/</link>
      <pubDate>Fri, 09 Mar 2018 18:08:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-os-shutil.1/</guid>
      <description>os.sep 可以取代操作系统特定的路径分隔符。windows下为 &#39;\&#39; os.name 字符串指示你正在使用的平台。比如对于Windows，它是&#39;nt&#39;，而对于Linux</description>
    </item>
    
    <item>
      <title>Python特殊场景</title>
      <link>/language/python/python%E7%89%B9%E6%AE%8A%E5%9C%BA%E6%99%AF/</link>
      <pubDate>Fri, 28 Jul 2017 13:53:05 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python%E7%89%B9%E6%AE%8A%E5%9C%BA%E6%99%AF/</guid>
      <description>content {:toc} 数组插入 A = [&#39;aa&#39;,&#39;bb&#39;,&#39;cc&#39;] A.insert(0,&#39;dd&#39;) A.insert(3,&#39;ee&#39;) print A B = [[&#39;aa&#39;,&#39;bb&#39;]] B.insert(0,[&#39;aa&#39;,&#39;bb&#39;]) print B 一维数组转二维 A = [u&#39;123&#39;, u&#39;abc&#39;] B = [ [A[i]] for i in range(len(A))] print B 三目 a,b = 1,2 print a if a &amp;gt; b else b print (a &amp;gt; b and [a] or [b])[0]</description>
    </item>
    
    <item>
      <title>Python时间格式化</title>
      <link>/language/python/python%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96/</link>
      <pubDate>Wed, 12 Apr 2017 13:53:05 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96/</guid>
      <description>content {:toc} time.strftime 可以实现时间格式化 time.strptime 可以实现字符串转时间 &amp;gt;&amp;gt;&amp;gt; import time &amp;gt;&amp;gt;&amp;gt; time.localtime() time.struct_time(tm_year=2017, tm_mon=4, tm_mday=12, tm_hour=13, tm_min=44, tm_sec=57, tm_wday=2, tm_yday=102, tm_isdst=0) &amp;gt;&amp;gt;&amp;gt; print time.strftime(&#39;%Y-%m-%d&#39;,time.localtime()) 2017-04-12 &amp;gt;&amp;gt;&amp;gt; time.strptime(&#39;2017-04-12&#39;,&#39;%Y-%m-%d&#39;) time.struct_time(tm_year=2017, tm_mon=4, tm_mday=12, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=2, tm_yday=102, tm_isdst=-1) &amp;gt;&amp;gt;&amp;gt; 格式化符号 %a 英文星期简写 %A 英文星期</description>
    </item>
    
    <item>
      <title>paramiko</title>
      <link>/language/python/python-ssh-paramiko/</link>
      <pubDate>Wed, 25 May 2016 23:59:59 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-ssh-paramiko/</guid>
      <description>content {:toc} 简介 paramiko 是一个可以模拟 SSH 的 Python 包，在登陆成功后可以进行 执行命令、上传文件、下载文件 等操作。 官网 要求 Python 2.6+/3.3+ 不支持文件夹上传，可遍历实现 安装 只尝试</description>
    </item>
    
    <item>
      <title>python</title>
      <link>/language/python/python-coding/</link>
      <pubDate>Thu, 24 Mar 2016 14:55:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-coding/</guid>
      <description>用pyenv和virtualenv搭建单机多版本python虚拟开发环境 sudo apt-get install python python-pip 设置python编码 Python编码介绍——encode和</description>
    </item>
    
    <item>
      <title>python</title>
      <link>/language/python/python/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python/</guid>
      <description>Book python3-cookbook 3.0.0 文档 利用 Python 进行数据分析 · 第 2 版 雨敲窗Python python开发大全、系列文章、精品教程 - 全栈工程师开发手册（原创） - CSDN博客 Py</description>
    </item>
    
    <item>
      <title>python 编码</title>
      <link>/language/python/python-encode-decode/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-encode-decode/</guid>
      <description>u = u&amp;quot;中文&amp;quot; u u&#39;\u4e2d\u6587&#39; s = &amp;quot;中文&amp;quot; s &#39;\xe4\xb8\xad\xe6\x96\x87&#39; s.decode(&amp;quot;utf8&amp;quot;) u&#39;\u4e2d\u6587&#39; u.encode(&amp;quot;gbk&amp;quot;) &#39;\xd6\xd0\xce\xc4&#39; s.encode(&amp;quot;gbk&amp;quot;) Traceback (most recent call last): File &amp;quot;&amp;quot;, line 1, in UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe4 in position 0: ordinal not in range(128) u.decode(&amp;quot;utf8&amp;quot;) Traceback (most recent</description>
    </item>
    
    <item>
      <title>python中，我们使用decode()和encode()来进行解码和编码</title>
      <link>/language/python/python-encode/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-encode/</guid>
      <description>总结： 1.为了处理英文字符，产生了ASCII码。 2.为了处理中文字符，产生了GB2312。 3.为了处理各国字符，产生了Unicode。 4.为</description>
    </item>
    
    <item>
      <title>Python 压缩及解压缩文件</title>
      <link>/language/python/python-%E5%8E%8B%E7%BC%A9%E5%8F%8A%E8%A7%A3%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/</link>
      <pubDate>Thu, 12 Nov 2015 01:19:05 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-%E5%8E%8B%E7%BC%A9%E5%8F%8A%E8%A7%A3%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/</guid>
      <description>content {:toc} import os import zipfile def zip_dir(dirname,zipfilename): filelist = [] if os.path.isfile(dirname): filelist.append(dirname) else : for root, dirs, files in os.walk(dirname): for name in files: filelist.append(os.path.join(root, name)) zf = zipfile.ZipFile(zipfilename, &amp;quot;w&amp;quot;, zipfile.zlib.DEFLATED) for tar in filelist: arcname = tar[len(dirname):] zf.write(tar,arcname) zf.close() def unzip_file(zipfilename, unziptodir): if not os.path.exists(unziptodir): os.mkdir(unziptodir, 0777) zfobj = zipfile.ZipFile(zipfilename) for name in zfobj.namelist(): name = name.replace(&#39;\\&#39;,&#39;/&#39;) if name.endswith(&#39;/&#39;): os.mkdir(os.path.join(unziptodir, name)) else: ext_filename = os.path.join(unziptodir, name) ext_dir=</description>
    </item>
    
    <item>
      <title>Python 对文件和文件夹的相关操作</title>
      <link>/language/python/python-%E5%AF%B9%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 11 Nov 2015 23:59:05 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-%E5%AF%B9%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</guid>
      <description>content {:toc} Python 对文件、文件夹的操作通常涉及到 os 模块和 shutil 模块。 创建文件 1. os.system(&#39;touch A&#39;) # 创建空文件 A 2. open(&#39;A&#39;,&#39;w&#39;) # 打开 A 文件，如果不存在则创建 创建目录 os.mkdir(&#39;A/B&#39;) # 创建目录 B，A</description>
    </item>
    
    <item>
      <title>Python 去除字符串空格</title>
      <link>/language/python/python-%E5%8E%BB%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%A9%BA%E6%A0%BC/</link>
      <pubDate>Fri, 23 Oct 2015 16:00:05 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-%E5%8E%BB%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%A9%BA%E6%A0%BC/</guid>
      <description>a = &amp;quot; x y z &amp;quot; print a.strip() #return &amp;quot;x y z&amp;quot; print a.lstrip() #return &amp;quot;x y z &amp;quot; print a.rstrip() #return &amp;quot; x y z&amp;quot; print a.replace(&#39; &#39;,&#39;&#39;) #return &amp;quot;xyz&amp;quot;</description>
    </item>
    
    <item>
      <title></title>
      <link>/language/python/py-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/py-file/</guid>
      <description>https://github.com/mprat/pascal-voc-python
#!/usr/bin/env python # -*- coding: utf-8 -*- import os import codecs sys.stdout=io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf8&#39;) path = &amp;quot;.&amp;quot; #文件夹目录 files= os.listdir(path) #得到文件夹下的所有文件名称 s = [] for file in files: #遍历文件夹 if not os.path.isdir(file): #判断是否是文件夹，不是文件夹才打开 f = codecs.open(file,&#39;r+&#39;,encoding=&#39;utf-8&#39;)#必须事先知道文件的编码格式，这里文件编码是使用的utf-8 for line in f: line=line.strip(&#39;\n&#39;) readline = line.split(&#39;: &#39;) # print(readline) # instance = [] # if not(any(&amp;quot;?&amp;quot; in s for s in readline)): # print(s) if readline[0] == &#39;title&#39; : try: os.rename(file, readline[1]+&amp;quot;.md&amp;quot;) print(readline[1]+&amp;quot;.</description>
    </item>
    
  </channel>
</rss>