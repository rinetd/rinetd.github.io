<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hardwares on 时光小栈</title>
    <link>/hardware/</link>
    <description>Recent content in Hardwares on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 19 Oct 2019 18:18:03 +0800</lastBuildDate>
    
	<atom:link href="/hardware/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jetson</title>
      <link>/hardware/jetson/jetson/</link>
      <pubDate>Sat, 19 Oct 2019 18:18:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/jetson/jetson/</guid>
      <description>又多了一个垫桌角的玩具——Jetson Nano 初体验1 - 〇矽小筑 - 博客园 3月19日，NVIDIA的2019 GTC大会于硅谷召开，CEO黄仁勋发布了</description>
    </item>
    
    <item>
      <title>linux iio</title>
      <link>/linux/kernel/linux-iio/</link>
      <pubDate>Sat, 12 Oct 2019 17:16:40 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/kernel/linux-iio/</guid>
      <description>直接读取sys 以下方式使用软件写入start的方式，每次触发一次采样 cat /sys/bus/iio/devices/iio:device0/xxx_raw 通过外部硬件trigger读取 这种方式下，每次ADC的触发都需要AD</description>
    </item>
    
    <item>
      <title>linux adc</title>
      <link>/linux/kernel/linux-adc/</link>
      <pubDate>Sat, 12 Oct 2019 16:01:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/kernel/linux-adc/</guid>
      <description>linux adc读取应用 - 简书 linux adc读取应用 1原理图 image.png 2设备节点 image.png 3控制代码 #include &amp;lt;stdio.h&amp;gt; //文件操作函数头文件 #include &amp;lt;sys/types.h&amp;gt; #include &amp;lt;sys/stat.h&amp;gt; #include &amp;lt;fcntl.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; int main(int argv,char *argc[]) { char *adc_path=&amp;quot;/dev/adc&amp;quot;; int fd,len; char</description>
    </item>
    
    <item>
      <title>linux device</title>
      <link>/linux/kernel/linux-device/</link>
      <pubDate>Fri, 11 Oct 2019 17:50:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/kernel/linux-device/</guid>
      <description>(8条消息)linux设备模型六（device细节） - To_run_away的博客 - CSDN博客 总线驱动设备 - 简书</description>
    </item>
    
    <item>
      <title>linux jiffies</title>
      <link>/linux/kernel/linux-jiffies/</link>
      <pubDate>Fri, 11 Oct 2019 16:13:27 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/kernel/linux-jiffies/</guid>
      <description>#define time_after(a,b) ((long)(b) - (long)(a) &amp;lt; 0)) 注意： time_after(a,b) 只能保证 a b 的时间跨度 &amp;lt; 0x8FFFFFFF 时的正确性 1.linux HZ Linux核心几个重要跟时间有关的名词或变数，以下将介绍HZ、tick与jif</description>
    </item>
    
    <item>
      <title>hi3516</title>
      <link>/hardware/hi3516/</link>
      <pubDate>Fri, 11 Oct 2019 15:04:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/hi3516/</guid>
      <description>海思论坛 - Powered by Discuz! Hi3516A开发--烧写/启动模式 - 不积跬步，无以至千里 - CSDN博客 Hi3516A开发--烧写/启动模式 一、启动模式 Hi3516A 支</description>
    </item>
    
    <item>
      <title>linux 内核中的pwm</title>
      <link>/hardware/linux-pwm/</link>
      <pubDate>Fri, 11 Oct 2019 10:02:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/linux-pwm/</guid>
      <description>PWM常用来做电机控制、LED背光亮度调节、开关电源等。 Linux pwm driver with sysfs TI linux pwm user guide: http://processors.wiki.ti.com/index.php/Linux_Core_PWM_User%27s_Guide#eHRPWM Freescale: https://support.bluetechnix.at/wiki/Linux_Software_User_Manual_(i.MX6)#PWM Gateworks: http://trac.gateworks.com/wiki/linux/pwm 对于TI的pwm来说 首先配置内核支持pwm模块，其中e</description>
    </item>
    
    <item>
      <title>rtc wakeup</title>
      <link>/hardware/rk3399/rtc-wakeup/</link>
      <pubDate>Thu, 10 Oct 2019 18:35:41 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/rtc-wakeup/</guid>
      <description>(8条消息)Linux时间系统之RTC时间 - u013686019的专栏 - CSDN博客 rtcwake Linux内核电源管理模块提供了4种不同的休眠模式 mem ,</description>
    </item>
    
    <item>
      <title>rk3399 rtsp转rtmp直播方案</title>
      <link>/hardware/rk3399/rk3399-rtsp-rtmp/</link>
      <pubDate>Fri, 20 Sep 2019 16:37:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/rk3399-rtsp-rtmp/</guid>
      <description>方案1 开源项目 netroby/go-rtmp-server go get -u -v github.com/netroby/go-rtmp-server a. 开启rtmp服务 ~/go/bin/go-rtmp-server -l :8089 -k longlongSecurityKey b. macos 推流测试 ffmpeg -f avfoundation -video_size 1280x720 -framerate 30 -i &amp;quot;0&amp;quot; -vcodec libx264 -preset ultrafast -pixel_format uyvy422 -f flv rtmp://127.0.0.1:1935/live?longlongSecurityKey c. 网页端输入 rtmp-server 地址 127.0.0.1:8089/</description>
    </item>
    
    <item>
      <title>linux gstreamer gst rk3399</title>
      <link>/hardware/rk3399/linux-gstreamer-gst-rk3399/</link>
      <pubDate>Mon, 09 Sep 2019 17:04:37 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/linux-gstreamer-gst-rk3399/</guid>
      <description>译安装支持gstreamer版本的opencv 我下载的是opencv3.4.2的源码。在rk3399上编译安装。 编译之前需要安装依赖的包: apt-get</description>
    </item>
    
    <item>
      <title>hisi_monitor</title>
      <link>/hardware/hisi/hisi_monitor/</link>
      <pubDate>Fri, 30 Aug 2019 21:39:44 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/hisi/hisi_monitor/</guid>
      <description>hai https://github.com/lam2003/hisi_monitor 海思NVR 基于 **hi3516A** SOC开发,可进行rtmp推流、移动侦测、mp4录制。 依赖库: srs_rtmp mp4v2 jsoncpp 编译方法: 已经将交叉编译后的库上传到https://</description>
    </item>
    
    <item>
      <title>Linux电源管理-Linux Regulator Framework代码分析</title>
      <link>/linux/kernel/linux-kernel-regulator/</link>
      <pubDate>Fri, 30 Aug 2019 15:29:55 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/kernel/linux-kernel-regulator/</guid>
      <description>Linux 内核 regulator 机制 Linux电源管理-Linux Regulator Framework代码分析 本文链接：https://blog.csdn.net/longwang</description>
    </item>
    
    <item>
      <title>Use OpenCV with Gstreamer</title>
      <link>/hardware/rk3399/opencv-gstreamer/</link>
      <pubDate>Thu, 29 Aug 2019 15:06:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/opencv-gstreamer/</guid>
      <description>http://blog.iotwrt.com/media/2017/08/23/opencv-gstreamer/</description>
    </item>
    
    <item>
      <title>DTS中video-interfaces接口详解</title>
      <link>/hardware/dts/dts-video-interfaces-port/</link>
      <pubDate>Wed, 28 Aug 2019 18:24:00 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/dts/dts-video-interfaces-port/</guid>
      <description>视频数据管道通常由外部设备组成，例如通过I2C、SPI或UART总线控制的摄像机传感器，以及SoC内部IP块(包括视频DMA引擎和视频数据处</description>
    </item>
    
    <item>
      <title>解读MT7620A上的DTS文件</title>
      <link>/hardware/dts/dts-analysis/</link>
      <pubDate>Wed, 28 Aug 2019 18:14:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/dts/dts-analysis/</guid>
      <description>解读MT7620A上的DTS文件 DTS文件，即Device Tree Source，是某些芯片（在Openwrt的target/linux/中，至少r</description>
    </item>
    
    <item>
      <title>dts pinctl rk3288</title>
      <link>/hardware/dts/dts-pinctl-rk3288/</link>
      <pubDate>Tue, 27 Aug 2019 16:18:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/dts/dts-pinctl-rk3288/</guid>
      <description>wireless-bluetooth { compatible = &amp;quot;bluetooth-platdata&amp;quot;; //wifi-bt-power-toggle; uart_rts_gpios = &amp;lt;&amp;amp;gpio4 GPIO_C3 GPIO_ACTIVE_LOW&amp;gt;; pinctrl-names = &amp;quot;default&amp;quot;,&amp;quot;rts_gpio&amp;quot;; pinctrl-0 = &amp;lt;&amp;amp;uart0_rts&amp;gt;; pinctrl-1 = &amp;lt;&amp;amp;uart0_rts_gpio&amp;gt;; BT,power_gpio = &amp;lt;&amp;amp;gpio4 GPIO_D3 GPIO_ACTIVE_HIGH&amp;gt;; BT,reset_gpio = &amp;lt;&amp;amp;gpio4 GPIO_D5 GPIO_ACTIVE_HIGH&amp;gt;; BT,wake_gpio = &amp;lt;&amp;amp;gpio4 GPIO_D2 GPIO_ACTIVE_HIGH&amp;gt;; BT,wake_host_irq = &amp;lt;&amp;amp;gpio4 GPIO_D7 GPIO_ACTIVE_LOW&amp;gt;; status = &amp;quot;okay&amp;quot;; }; &amp;amp;pinctrl { wireless-bluetooth { uart0_rts_gpio: uart0-rts-gpios { rockchip,pins = &amp;lt;3 11 RK_FUNC_GPIO &amp;amp;pcfg_pull_none&amp;gt;; }; }; };  rfkill-bt.c
static int bluetooth_platdata_parse_dt(struct device *dev, struct rfkill_rk_platform_data *data) { struct device_node *node = dev-&amp;gt;of_node; int gpio; enum of_gpio_flags flags; if (!</description>
    </item>
    
    <item>
      <title>devm_xxx机制</title>
      <link>/linux/kernel/devm_xxx/</link>
      <pubDate>Mon, 26 Aug 2019 21:56:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/kernel/devm_xxx/</guid>
      <description>前言 devm是内核提供的基础机制，用于方便驱动开发者所分配资源的自动回收。参考内核文档devres.txt。总的来说，就是驱动开发者只需要调</description>
    </item>
    
    <item>
      <title>rk3399 gpio interrupt</title>
      <link>/hardware/rk3399/rk3399-gpio-interrupt/</link>
      <pubDate>Mon, 26 Aug 2019 10:29:51 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/rk3399-gpio-interrupt/</guid>
      <description>本文链接：https://blog.csdn.net/jklinux/article/details/78707537 通常是在设备树的设备节</description>
    </item>
    
    <item>
      <title>rk3399 leds gpio</title>
      <link>/hardware/rk3399/rk3399-leds-gpio/</link>
      <pubDate>Mon, 26 Aug 2019 10:23:27 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/rk3399-leds-gpio/</guid>
      <description>在linux内核里已提供了连接到gpio的led设备驱动，只需要通过platform_device或设备提供相应的硬件资源即可. 使用plat</description>
    </item>
    
    <item>
      <title>dts和dtsi分析</title>
      <link>/hardware/dts/dts-mux/</link>
      <pubDate>Mon, 26 Aug 2019 10:03:57 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/dts/dts-mux/</guid>
      <description>此篇源文件arch/arm/boot/dts/imx6sx.dtsi dts和dtsi完成的功能 以下是两段较为常见的dtsi和dts代码 1 uart5: serial@021f4000</description>
    </item>
    
    <item>
      <title>rk3288 isp ov13850</title>
      <link>/hardware/rk3288/rk3288-isp-ov13850/</link>
      <pubDate>Sun, 25 Aug 2019 18:23:00 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-isp-ov13850/</guid>
      <description>How to Enable MIPI CSI Module http://www.t-firefly.com/doc/product/info/id/285.html 硬件接口原理图 http://dev.t-firefly.com/forum.php?mod=viewthread&amp;amp;tid=12798&amp;amp;highlight=ov13850 应用层 https://blog.csdn.net/huang_165/article/details/86130288 camera0: ov13850@10 { rockchip,pd-gpio = &amp;lt;&amp;amp;gpio2 14 GPIO_ACTIVE_LOW&amp;gt;; //pd rockchip,pwr-gpio = &amp;lt;&amp;amp;gpio3 10 GPIO_ACTIVE_HIGH&amp;gt;; // mipi-pwr rockchip,pwr-2nd-gpio = &amp;lt;&amp;amp;gpio7 12 GPIO_ACTIVE_HIGH&amp;gt;; //cif_pwr rockchip,rst-gpio = &amp;lt;&amp;amp;gpio3 8 GPIO_ACTIVE_LOW&amp;gt;; //mipi-rest } camera0: ov13850@10 { rockchip,pd-gpio = &amp;lt;&amp;amp;gpio2 12 GPIO_ACTIVE_LOW&amp;gt;; rockchip,pwr-gpio = &amp;lt;&amp;amp;gpio1 23 GPIO_ACTIVE_HIGH&amp;gt;; rockchip,pwr-2nd-gpio = &amp;lt;&amp;amp;gpio1 22 GPIO_ACTIVE_HIGH&amp;gt;; //cif_pwr rockchip,rst-gpio = &amp;lt;&amp;amp;gpio0</description>
    </item>
    
    <item>
      <title>rk3399_upgrade_tool</title>
      <link>/hardware/rk3399/rk3399_upgrade_tool/</link>
      <pubDate>Wed, 21 Aug 2019 17:12:42 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/rk3399_upgrade_tool/</guid>
      <description>有用的连接： Rockchip官方资料： http://opensource.rock-chips.com/wiki_Main_Page http://opensource.rock-chips.com/wiki_RK3399 http://opensource.rock-chips.com/wiki_Boot_option http://opensource.rock-chips.com/wiki_U-Boot#Download_U-Boot Firefly官方资料： http://wiki.t-firefly.com/index.php/Firefly-RK3399 http://wiki.t-firefly.com/index.php/Firefly-RK3399/Flash_image SDK https://gitlab.com/TeeFirefly/FireNow-Nougat https://gitlab.com/TeeFirefly/FireNow-Marshmallow 1、烧写工具 upgrade_tool 这里用到的主要是upgrade_tool，在按</description>
    </item>
    
    <item>
      <title>rk3399 kernel</title>
      <link>/hardware/rk3399/rk3399-kernel/</link>
      <pubDate>Wed, 21 Aug 2019 14:20:37 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/rk3399-kernel/</guid>
      <description>配置 repo 所要拉取的 manifest cd linux-sdk/.repo/ AIO-3288j ubuntu18.04 ln -fs manifests/rk3288/rk3288_linux_ubuntu_release.xml manifest.xml 离线源码编译 ubuntu 把压缩包放在上一步下载repo工具的目录下 7z x Linux_SDK.7z 更新代码 cp .repo/repo /usr/bin/repo # 安装 repo同步工具 repo sync -c #</description>
    </item>
    
    <item>
      <title>camera</title>
      <link>/hardware/camera/camera/</link>
      <pubDate>Tue, 13 Aug 2019 15:00:53 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/camera/camera/</guid>
      <description>200万H265高清4G插卡无线摄像头模块DIY监控1080模组半成品无外壳 开放平台 http://open.xmeye.net/zh/</description>
    </item>
    
    <item>
      <title>rk3399</title>
      <link>/hardware/rk3399/rk3399/</link>
      <pubDate>Sat, 03 Aug 2019 16:11:02 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3399/rk3399/</guid>
      <description>pwm rtc 导出操作 FriendlyThings for RK3399/zh - FriendlyARM WiKi Rockchip之linux深入学习 http://wiki.t-firefly.com/AIO-3399C/linux_compile_gpt.html etcher https://www.balena.io/etcher brew cask install balenaetcher 下载 https://github.com/balena-io/etcher/releases/download/v1.5.52/balenaEtcher-1.5.52.dmg firefly ubuntu config 配置网络 sudo nmcli conn add type ethernet con-name &amp;quot;eth0&amp;quot; ifname eth0 autoconnect yes ip4 192.168.0.10/24 gw4 192.168.0.2 安装git golang 开</description>
    </item>
    
    <item>
      <title>rk3288和rk3399常见问题</title>
      <link>/hardware/rk3288/intro/</link>
      <pubDate>Fri, 02 Aug 2019 15:02:20 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/intro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>gcc linaro aarch64 linux gnu</title>
      <link>/hardware/gcc-linaro-aarch64-linux-gnu/</link>
      <pubDate>Fri, 02 Aug 2019 14:13:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/gcc-linaro-aarch64-linux-gnu/</guid>
      <description>macos 安装 ARM 交叉编译环境 gcc-linaro-7.4.1-2019.02-i686_aarch64-linux-gnu sudo tar xJf gcc-linaro-7.2.1-2017.11-x86_64_aarch64-linux-gnu.tar.xz -C /usr/local/ export PATH=/usr/local/gcc-linaro-7.4.1-2019.02-i686_aarch64-linux-gnu/bin:$PATH aarch64-linux-gnu-g++ -v GCC 5 和 GCC7 多版本共存 ls /usr/bin/gcc* sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 50 sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 50 sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 50 sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 50 ——————————</description>
    </item>
    
    <item>
      <title>rk3288 gti2801s</title>
      <link>/hardware/rk3288/rk3288-gti2801s/</link>
      <pubDate>Sat, 27 Jul 2019 11:16:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-gti2801s/</guid>
      <description>SDK资料：https://pan.baidu.com/s/1Ih7G1UH74n4OXNCTqTOwbw 提取码:8fqd 模型例程：http</description>
    </item>
    
    <item>
      <title>rk3288 ec20</title>
      <link>/hardware/rk3288/rk3288-ec20/</link>
      <pubDate>Sat, 27 Jul 2019 09:46:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-ec20/</guid>
      <description>适用任何版本linux EC20/EC25通信模块的4G拨号适配， make menuconfig 配置： USB相关： \drivers\usb\serial\option.c [] Device Drivers → [*] USB Support → &amp;lt;*&amp;gt; USB Serial Converter support → [*] USB driver for GSM and CDMA modems PPP相</description>
    </item>
    
    <item>
      <title>dts中gpio resource</title>
      <link>/hardware/dts/dts-gpio-resource/</link>
      <pubDate>Sat, 15 Jun 2019 15:47:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/dts/dts-gpio-resource/</guid>
      <description>gpiolib及gpio操作 在驱动工作时，有可能好几个驱动同时去操作一个gpio，这会造成混乱。所以内核提供了一些方法来管理gpio资源，这</description>
    </item>
    
    <item>
      <title>linux pinctrl</title>
      <link>/hardware/linux-pinctrl/</link>
      <pubDate>Thu, 23 May 2019 10:35:37 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/linux-pinctrl/</guid>
      <description>原文地址 https://blog.csdn.net/u012830148/article/details/80609337 https://blog.csdn.net/qq_21353001/article/details/88751773 linux内核使用pinctrl子系统实现操作gpio输出高低电平的实现 https://blog.csdn.net/u010299133/article/details/88646412s Pinctrl子系统之一了解基础概念: 1.Linux Pinctrl 子系统简介 在</description>
    </item>
    
    <item>
      <title>go hardware</title>
      <link>/hardware/go-hardware/</link>
      <pubDate>Wed, 22 May 2019 10:53:46 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/go-hardware/</guid>
      <description>rakyll/go-hardware: A directory of hardware related libs, tools, and tutorials for Go</description>
    </item>
    
    <item>
      <title>go epoll</title>
      <link>/hardware/rk3288/go-epoll/</link>
      <pubDate>Thu, 16 May 2019 14:52:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-epoll/</guid>
      <description>Search · syscall.EpollEvent</description>
    </item>
    
    <item>
      <title>rk3288 ubuntu 固件管理</title>
      <link>/hardware/rk3288/ubuntu-intro/</link>
      <pubDate>Thu, 16 May 2019 14:52:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/ubuntu-intro/</guid>
      <description>1. 配置ssh sudo vi /etc/ssh/sshd_config &amp;quot;#PermitRootLogin prohibit-password&amp;quot; ==&amp;gt; PermitRootLogin yes passwd 2. 配置网卡 nmcli conn add type ethernet con-name &amp;quot;eth0-static&amp;quot; ifname eth0 autoconnect yes ip4 192.168.0.10/24 gw4 192.168.0.2 nmcli conn mod eth0-static ipv4.dns &amp;quot;223.5.5.5&amp;quot; systemctl daemon-reload &amp;amp;&amp;amp; systemctl restart network-manager 3. 配置wifiAP模式 (可跳过) nmcli con add con-name wifi type wifi</description>
    </item>
    
    <item>
      <title>rk3288 ubuntu 网卡管理</title>
      <link>/hardware/rk3288/ubuntu-nmcli/</link>
      <pubDate>Thu, 16 May 2019 14:52:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/ubuntu-nmcli/</guid>
      <description>NetworkManager设置 nmcli：命令行。这是最常用的工具。 nmtui：在shell终端开启文本图形界面。 Freedesktop applet：如GNO</description>
    </item>
    
    <item>
      <title>go leds</title>
      <link>/hardware/rk3288/go-leds/</link>
      <pubDate>Tue, 14 May 2019 18:06:02 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-leds/</guid>
      <description>AIO-3288J 开发板上有 2 个 LED 灯，如下表所示： LED GPIO ref. GPIO number Blue GPIO8_A1 257 Yellow GPIO8_A2 258 可通过使用 LED 设备子系统或者直接操作 GPIO 控制该 LED。 以设备的方式控制 LED 标准的 Linux 专门为 LED</description>
    </item>
    
    <item>
      <title>go build</title>
      <link>/hardware/rk3288/go-build/</link>
      <pubDate>Tue, 14 May 2019 08:34:09 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-build/</guid>
      <description>本文由 简悦 SimpRead 转码， 原文地址 https://blog.csdn.net/sanallen/article/details/82118952 参考文档 Go 语言官方编译指南 (需翻墙访问) GOOS=linux GOARCH=arm GOARM=6 go build -v GOARM=5: use software floating point; when CPU doesn’t have VFP co-processor GOARM=6: use VFPv1 only; default if cross compiling; usually ARM11 or better cores</description>
    </item>
    
    <item>
      <title>rk3288 gps</title>
      <link>/hardware/rk3288/rk3288-gps/</link>
      <pubDate>Sat, 11 May 2019 11:40:56 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-gps/</guid>
      <description>https://github.com/adrianmo/go-nmea GPS 通过 uart1 与 cpu 进行通讯 ，设备树打开 uart1，配置 gps 使能和复位引脚即可 。（默认GPS打开） /{ misc_control { status = &amp;quot;okay&amp;quot;; compatible = &amp;quot;rockchip&amp;quot;; pinctrl-names = &amp;quot;default&amp;quot;; pinctrl-0 = &amp;lt;&amp;amp;gps_en&amp;gt;, &amp;lt;gps_rst&amp;gt;; gps-en = &amp;lt;&amp;amp;gpio7 RK_PB7 GPIO_ACTIVE_LOW&amp;gt;; gps-rst = &amp;lt;&amp;amp;gpio7 RK_PA3</description>
    </item>
    
    <item>
      <title>rk3288 usart</title>
      <link>/hardware/rk3288/rk3288-usart/</link>
      <pubDate>Sat, 11 May 2019 11:40:56 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-usart/</guid>
      <description>http://wiki.t-firefly.com/zh_CN/AIO-3288J/started.html UART使用 — Firefly Wiki Firefly Ubuntu系统相关资源汇总--更新于10月20日 picocom 小编最近在使用的串口终端工具，非常省事情 安装：sudo apt-get install picocom 省事的</description>
    </item>
    
    <item>
      <title>rk3288 gpio</title>
      <link>/hardware/rk3288/rk3288-gpio/</link>
      <pubDate>Fri, 10 May 2019 11:02:06 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-gpio/</guid>
      <description>linux/gpio.txt 中文文档 write: /sys/class/gpio/export: device or resource busy kidoman/embd Configuration The RK3288 bank/bit notation for GPIOs must be formed as &amp;quot;GPIO_&amp;quot; RK3288 GIPIO 管脚计算公式: 32 x (gpio_bank) + gpio_bit - 8 Group GPIO0 only 24 gpios,So each GPIO Num subtracts 8. gpio_bank : cat /sys/kernel/debug/gpio GPIO0 0-23, platform/pinctrl, gpio0: gpiochip0 GPIO1 24-55, platform/pinctrl, gpio1: gpiochip24 GPIO2 56-87, platform/pinctrl, gpio2: gpiochip56 GPIO3</description>
    </item>
    
    <item>
      <title>rk3288 intro</title>
      <link>/hardware/rk3288/rk3288-intro/</link>
      <pubDate>Fri, 10 May 2019 08:26:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-intro/</guid>
      <description>Kris Fei&#39;s blog https://blog.csdn.net/kris_fei?t=1 RK3288笔记 rk3288 官方资料 1.刷写固件 拿到开发板后第一件事就是连接上HDMI和电源,启动系统. 自带的系统默认是Android,如果我</description>
    </item>
    
    <item>
      <title>rk3288 parameterfile分析</title>
      <link>/hardware/rk3288/rk3288-parameter/</link>
      <pubDate>Fri, 10 May 2019 08:26:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-parameter/</guid>
      <description>Platform: RK3399 OS: Android 6.0 Version: v2016.08 parameter 分析 常见问题 system 分区改为 ext3 后parameter 中 mtd 分区如何定义 系统固件变大backup 分区起始位置和大小变大系统异常 Parameter 最大为 6</description>
    </item>
    
    <item>
      <title>rk3288 ubuntu系统制作</title>
      <link>/hardware/rk3288/rk3288-ubuntu/</link>
      <pubDate>Fri, 10 May 2019 08:26:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-ubuntu/</guid>
      <description>https://blog.csdn.net/w401229755/article/details/53350010 设置启动时的默认 Target 开机进入命令行界面 对应 init3 sudo systemctl set-default multi-user.target 恢复开机进入图形界面 sudo systemctl set-default graphical.target 自动挂载/sdcard vi /etc/fstab /dev/mmcblk0 /sdcard vfat defaults,noatime 0 0 ubuntu 镜像制作 使能串口 ln -s</description>
    </item>
    
    <item>
      <title>rk3288 update</title>
      <link>/hardware/rk3288/rk3288-update/</link>
      <pubDate>Fri, 10 May 2019 08:26:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-update/</guid>
      <description>用到的文件 package-file 生成 uupdate.img update.img 1 Linux 打包工具 Linux 打包工具在 tools/linux/Linux_Pack_Firmware/rockdev 目录下。先修改 package-file 文件将需 要升级的 image 加入打包。注意路径是这里的路径是相对路径。 tools/linux/Linux_Pack_Firmware/rockdev/Image 会链接到根目录下</description>
    </item>
    
    <item>
      <title>go home</title>
      <link>/hardware/rk3288/go-home/</link>
      <pubDate>Thu, 09 May 2019 11:10:13 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-home/</guid>
      <description>智能家居项目 https://github.com/barnybug/gohome 阿里云物联网的golang版sdk https://github.com/billyplus/aliyuniot rk3288 Hardware Tinkerboard, RGB LED Matrix https://github.com/post-l/hw https://github.com/kidoman/embd/issues/30</description>
    </item>
    
    <item>
      <title>input getdevices</title>
      <link>/hardware/rk3288/input-getdevices/</link>
      <pubDate>Wed, 08 May 2019 17:40:07 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/input-getdevices/</guid>
      <description>type procDev struct { name, dev, event string keep bool } func getProcInputs() []procDev { f, err := os.Open(&amp;quot;/proc/bus/input/devices&amp;quot;) if err != nil { log.Fatalln(err) } scanner := bufio.NewScanner(f) var devs []procDev var d procDev for scanner.Scan() { line := scanner.Text() if len(line) == 0 { if d.keep { devs = append(devs, d) } d.keep = false continue } switch line[0] { case &#39;N&#39;: f1 := strings.Split(line, &amp;quot;=&amp;quot;) f2 := strings.</description>
    </item>
    
    <item>
      <title>platform 总线</title>
      <link>/hardware/platform/device/</link>
      <pubDate>Tue, 07 May 2019 11:10:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/platform/device/</guid>
      <description>设备 总线 驱动 相互独立 设备 在注册时 自动寻找驱动,反过来也是 驱动在注册时自动寻找设备 他们所挂载的总线(bus)用来做匹配, probe 函数执行的前提是, 驱</description>
    </item>
    
    <item>
      <title>i2c</title>
      <link>/hardware/rk3288/i2c/</link>
      <pubDate>Mon, 06 May 2019 18:17:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/i2c/</guid>
      <description>(使用Beaglebone Black的I2C（一） - Techfantastic - CSDN博客 linux 3.4 hisi i2c用户空间驱动/dev/i2c-0-文峰聊书斋-ChinaUn</description>
    </item>
    
    <item>
      <title>dts reg address cell</title>
      <link>/hardware/dts/dts-reg-address-cell/</link>
      <pubDate>Mon, 06 May 2019 11:37:51 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/dts/dts-reg-address-cell/</guid>
      <description>#address-cells = ; 基地址、片选号等绝对起始地址所占字长（32位） #size-cells = ; 长度所占字长（32位） #address-cells 和 #size-cells 决定了 reg 数组的长度 譬如 cpus { #address-cells = &amp;lt;1&amp;gt;; #size-cells = &amp;lt;0&amp;gt;; cpu@0 { compatible = &amp;quot;arm,cortex-a9&amp;quot;; reg = &amp;lt;0&amp;gt;;</description>
    </item>
    
    <item>
      <title>dts platform probe</title>
      <link>/hardware/dts-probe/</link>
      <pubDate>Sun, 28 Apr 2019 15:31:17 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/dts-probe/</guid>
      <description>driver使用dts的前提是driver已经是支持platform框架的driver，这样dts才可以发挥作用，因为dts和platfor</description>
    </item>
    
    <item>
      <title>dts status</title>
      <link>/hardware/dts-status/</link>
      <pubDate>Sun, 28 Apr 2019 09:25:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/dts-status/</guid>
      <description>在devicetree节点中通过加status来方便的使能或者disable driver - jason的笔记 - CSDN博客 结论: 默认情况下不设置stat</description>
    </item>
    
    <item>
      <title>go mmap</title>
      <link>/hardware/rk3288/go-mmap/</link>
      <pubDate>Sun, 28 Apr 2019 08:47:46 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-mmap/</guid>
      <description>mmap函数_Linux C 中文函数手册_Linux编程_linux_操作系统__www.iteedu.com mmap是将一个文件或者其它对象</description>
    </item>
    
    <item>
      <title>rk3288 dts i2c4</title>
      <link>/hardware/rk3288/rk3288-dts-i2c4/</link>
      <pubDate>Sat, 27 Apr 2019 17:25:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-dts-i2c4/</guid>
      <description>[RK3288]I2C地址的确定 重要 如何确定I2C设备地址 MPU6050 0x68 const mpu6050Address = 0x68 指南针芯片和加速度、角加速度芯片用到了I2C通信。其中I2C的从器件地</description>
    </item>
    
    <item>
      <title>dts</title>
      <link>/hardware/rk3288/dts/</link>
      <pubDate>Fri, 26 Apr 2019 15:46:21 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/dts/</guid>
      <description>DTS即Device Tree Source 设备树源码, Device Tree是一种描述硬件的数据结构，它起源于 OpenFirmware (OF)。 [dts]Device Tree机制 - aaronGao - 博客园 Device Tree 详解 - 魅族内核团队</description>
    </item>
    
    <item>
      <title>go gpio</title>
      <link>/hardware/go-gpio/</link>
      <pubDate>Fri, 26 Apr 2019 09:03:35 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/go-gpio/</guid>
      <description>Linux下用文件IO的方式操作GPIO（/sys/class/gpio） - 卢小喵的学习笔记 - CSDN博客 Golang笔记–04–GPIO与</description>
    </item>
    
    <item>
      <title>go usart</title>
      <link>/hardware/go-usart/</link>
      <pubDate>Fri, 26 Apr 2019 08:59:54 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/go-usart/</guid>
      <description>https://github.com/andrewloable/treadmill-streetview/
func ReadSerial(s *serial.Port) { buf := make([]byte, 128) n, err := s.Read(buf) if err != nil { fmt.Printf(&amp;quot;read err %s&amp;quot;, err) } fmt.Printf(&amp;quot;Read: %x \n&amp;quot;, buf[:n]) } func WriteSerial(s *serial.Port, b []byte) { _, err := s.Write(b) if err != nil { fmt.Printf(&amp;quot;%s&amp;quot;, err) } fmt.Printf(&amp;quot;Wrote: %x\n&amp;quot;, b) }  package main import ( &amp;quot;encoding/json&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;io/ioutil&amp;quot; &amp;quot;net/http&amp;quot; &amp;quot;os/exec&amp;quot; &amp;quot;runtime&amp;quot; &amp;quot;time&amp;quot; &amp;quot;github.com/gin-gonic/gin&amp;quot; cors &amp;quot;github.com/itsjamie/gin-cors&amp;quot; &amp;quot;github.com/tarm/serial&amp;quot; ) // SerialConfig ... type SerialConfig struct { Name string Baud int } var config SerialConfig var loops int64 // {&amp;quot;Name&amp;quot;:&amp;quot;COM4&amp;quot;,&amp;quot;Baud&amp;quot;:9600} func readConfigFromFile(ps *SerialConfig) { file, err := ioutil.</description>
    </item>
    
    <item>
      <title>go i2c</title>
      <link>/hardware/go-i2c/</link>
      <pubDate>Fri, 26 Apr 2019 08:59:40 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/go-i2c/</guid>
      <description>https://github.com/d2r2/go-i2c 对10位地址操作 https://github.com/golang/exp/blob/master/io/i2c/i2c.go / resolveAddr returns whether the addr is 10-bit masked or not. // It also returns the unmasked address. func resolveAddr(addr int) (unmasked int, tenbit bool) { return addr &amp;amp; (tenbitMask - 1), addr&amp;amp;tenbitMask == tenbitMask } go: AM2320传感器：CRC不匹配，来自传感器的</description>
    </item>
    
    <item>
      <title>freertos semphone</title>
      <link>/hardware/freertos/freertos-semphone/</link>
      <pubDate>Thu, 25 Apr 2019 15:21:46 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/freertos/freertos-semphone/</guid>
      <description>FreeRTOS — 计数信号量，二值信号量** - Liu_Jing - 博客园 FreeRTOS — 计数信号量，二值信号量**</description>
    </item>
    
    <item>
      <title>Linux I-O Scheduler 调度器优化系统性能</title>
      <link>/hardware/kernel/scheduler/</link>
      <pubDate>Sat, 14 Apr 2018 14:35:28 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/kernel/scheduler/</guid>
      <description>本文转自：调整 Linux I/O 调度器优化系统性能 ###背景 查看RocketMQ文档的过程中，提到了通过修改IO调度算法来提高RocketMQ的性能。网上</description>
    </item>
    
    <item>
      <title>linux零拷贝原理</title>
      <link>/hardware/kernel/zero-copy/</link>
      <pubDate>Sat, 14 Apr 2018 11:25:30 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/kernel/zero-copy/</guid>
      <description>linux零拷贝原理 本文翻译自:http://www.linuxjournal.com/article/6345 本文解释了Linux的零拷贝</description>
    </item>
    
    <item>
      <title>Linux 堆栈ebp esp详解</title>
      <link>/hardware/kernel/linux-ebp-esp/</link>
      <pubDate>Wed, 14 Mar 2018 13:18:19 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/kernel/linux-ebp-esp/</guid>
      <description>栈帧%ebp,%esp详解 首先应该明白，栈是从高地址向低地址延伸的。每个函数的每次调用，都有它自己独立的一个栈帧，这个栈帧中维持着所需要的各</description>
    </item>
    
    <item>
      <title>Linux命令 strace</title>
      <link>/hardware/kernel/linux-strace/</link>
      <pubDate>Fri, 19 Jan 2018 16:46:14 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/kernel/linux-strace/</guid>
      <description>strace常用来跟踪进程执行时的系统调用和所接收的信号。 在Linux世界，进程不能直接访问硬件设备，当进程需要访问硬件设备(比如读取磁盘文</description>
    </item>
    
    <item>
      <title>modbus基础</title>
      <link>/hardware/modbus/</link>
      <pubDate>Tue, 29 Mar 2016 21:25:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/modbus/</guid>
      <description>Modbus总结 1.概念 ①Coil和Register Modbus中定义的两种数据类型。Coil是位（bit）变量；Register是整型（W</description>
    </item>
    
    <item>
      <title>汽车CAN总线分析框架CANToolz</title>
      <link>/hardware/cantoolz/</link>
      <pubDate>Tue, 29 Mar 2016 21:25:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/cantoolz/</guid>
      <description>汽车CAN总线分析框架CANToolz CANToolz 是一个分析控制局域网络CAN(Controller Area Network) 和设备的框架。该工具基于不同的模块组装在一起，</description>
    </item>
    
    <item>
      <title>gdb使用笔记</title>
      <link>/hardware/kernel/gdb-notes/</link>
      <pubDate>Tue, 12 Jan 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/kernel/gdb-notes/</guid>
      <description>gdb的基本使用 用gdb调试程序要确保调试的程序带有调试信息，这要求在链接程序的时候加上&amp;quot;-G&amp;quot;的参数。用gdb exec</description>
    </item>
    
    <item>
      <title>STM32_定时器</title>
      <link>/hardware/stm32-%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
      <pubDate>Wed, 09 Dec 2015 11:00:19 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      <description>最近做项目，用到定时器，索性重新学习一下，以前只是用于简单的pwm生成和中断处理，对定时器根本就没有进行深入研究，今天借此机会，重新学习一下</description>
    </item>
    
    <item>
      <title>STM32_GPIO模式</title>
      <link>/hardware/stm32-gpio%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 04 Dec 2015 10:54:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-gpio%E6%A8%A1%E5%BC%8F/</guid>
      <description>所有的开漏输出都需要接上拉电阻。 ## 1、普通推挽输出（GPIO_Mode_Out_PP）: 使用场合：一般用在0V和3.3V的场合。线路经过两个</description>
    </item>
    
    <item>
      <title>STM32_TIM定时器</title>
      <link>/hardware/stm32-tim%E5%AE%9A%E6%97%B6%E5%99%A8/</link>
      <pubDate>Thu, 03 Dec 2015 14:44:28 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-tim%E5%AE%9A%E6%97%B6%E5%99%A8/</guid>
      <description>名词解释： 1.单脉冲模式 One Pulse mode TIM_SelectOnePulseMode(TIM2, TIM_OPMode_Single)//设置TIM2在单脉冲模式，且是单一的脉冲，在下一个更新事件停止 关于始</description>
    </item>
    
    <item>
      <title>STM32_NVIC中断响应</title>
      <link>/hardware/stm32-nvic%E4%B8%AD%E6%96%AD%E5%93%8D%E5%BA%94/</link>
      <pubDate>Thu, 03 Dec 2015 14:18:57 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32-nvic%E4%B8%AD%E6%96%AD%E5%93%8D%E5%BA%94/</guid>
      <description>STM32中断优先级彻底讲解 - 凡人的博客 - CSDN博客 NVIC，中文名嵌套中断向量控制器，是Cortex-M3系列控制器内部独有集成单元，与</description>
    </item>
    
    <item>
      <title>STM32中断</title>
      <link>/hardware/stm32%E4%B8%AD%E6%96%AD/</link>
      <pubDate>Wed, 02 Dec 2015 14:39:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/stm32%E4%B8%AD%E6%96%AD/</guid>
      <description>stmcube太强大了 0x00 外部中配置EXIT stm32中断边沿是可配置的 既可以配置为上升沿触发，也可配置为下降沿触发，还可以同时触发</description>
    </item>
    
  </channel>
</rss>