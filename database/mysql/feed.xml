<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>时光小栈</title>
    <link>/database/mysql/</link>
    <description>Recent content on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 22 Apr 2019 19:00:49 +0800</lastBuildDate>
    
	<atom:link href="/database/mysql/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mysql常用分区方式partition</title>
      <link>/database/mysql/mysql-partition/</link>
      <pubDate>Mon, 22 Apr 2019 19:00:49 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-partition/</guid>
      <description>MySQL 常用分区方式 Range 分区 范围分区，每个分区包含那些分区表达式的值位于一个给定的连续区间内的行。这些区间要连续且不能相互重叠，使用 VALUES LESS THAN 操作符来进</description>
    </item>
    
    <item>
      <title>mysql merge</title>
      <link>/database/mysql/mysql-merge/</link>
      <pubDate>Wed, 17 Apr 2019 15:35:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-merge/</guid>
      <description>#!/bin/sh # # SCRIPT:	mysqlmerge.sh # AUTHOR:	dreamingfish123@gmail.com # DATE:	2014-02-17 # REV:	1.0.T # # PURPOSE:	Merge Bugzilla databases set -e # config, please modify to match your system env. # ============ ORIGIN=/media/bugzilla WORKSPACE=/media/bugzilla # ============ MYSQL_HOST=localhost MYSQL_PORT=3306 MYSQL_USER=root MYSQL_PASS=root MYSQL_MAX_ALLOWED_PACKET=1000000000 # ============ # === Init params.. DATE=`date +%Y%m%d` DAY=`date +%a` SRCPATH=$ORIGIN/$DAY TARPATH=$WORKSPACE/$DATE LOGFILE=$WORKSPACE/bugzilla_merge.log # === MYSQL_CONNPARAM=&amp;quot;-h$MYSQL_HOST -P$MYSQL_PORT -u$MYSQL_USER -p$MYSQL_PASS --max-allowed-packet=$MYSQL_MAX_ALLOWED_PACKET&amp;quot; TAR_DBNAME=mergetest TABLES1=&amp;quot;products versions bugs bug_see_also bugs_fulltext attach_data attachments cc components longdescs&amp;quot; TABLES2=&amp;quot;profiles rep_platform op_sys&amp;quot; echo &amp;quot;===========&amp;quot;	&amp;gt;&amp;gt; $LOGFILE echo &amp;quot;&amp;quot;	&amp;gt;&amp;gt; $LOGFILE echo &amp;quot;[*] Init params.</description>
    </item>
    
    <item>
      <title>mysql io write</title>
      <link>/database/mysql/mysql-io-write/</link>
      <pubDate>Wed, 20 Mar 2019 09:32:31 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-io-write/</guid>
      <description>Cpu的Iowait time过高 - 十月鱼的博客（本博客不再更新，作者迁移至：http://wiki.51centos.com） - CSDN博客</description>
    </item>
    
    <item>
      <title>mysql memory</title>
      <link>/database/mysql/mysql-memory/</link>
      <pubDate>Wed, 20 Mar 2019 08:48:52 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-memory/</guid>
      <description>MySQL Memory Calculator 记一次Mysql占用内存过高的优化过程 - 克隆大菠萝的后庭 - CSDN博客 1. 内存清理 free -m total used free shared buff/cache available Mem: 15886 5687 155 832 10043 9094 Swap: 0 0 0 total 系统可支配使用</description>
    </item>
    
    <item>
      <title>mysql monitor</title>
      <link>/database/mysql/mysql-monitor/</link>
      <pubDate>Mon, 28 Jan 2019 08:49:10 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-monitor/</guid>
      <description>MySQL 监控指标 监控 对于数据库，通常可以主动监控以下四个与性能及资源利用率相关的指标： 查询吞吐量 查询执行性能 连接情况 缓冲池使用情况 1. 吞吐量 在 MySQL 中有</description>
    </item>
    
    <item>
      <title>mysql 实现闪回功能 flashback binlog rollback</title>
      <link>/database/mysql/mysql-flashback-binlog-rollback/</link>
      <pubDate>Mon, 14 Jan 2019 15:17:47 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-flashback-binlog-rollback/</guid>
      <description>https://github.com/GoDannyLai/binlog_rollback 简介 binlog_rollback通过解释mysql/mariadb binlog/relaylog实现以下三大功能: 1）flashback</description>
    </item>
    
    <item>
      <title>mysql binlog</title>
      <link>/database/mysql/mysql-binlog/</link>
      <pubDate>Fri, 04 Jan 2019 15:54:57 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-binlog/</guid>
      <description>2892931976/binlog_inspector: mysql binlog parser, flash back, rollback. mysql binlog回滚/闪回，前滚， 分析各表DML情况， 找出长事务与大事务 GoDannyLai/binlog_rollback: mysql binlog rollback mysql 有个 binlog 的功能，会记录所有的用户的操作，可以依靠</description>
    </item>
    
    <item>
      <title>mysql install</title>
      <link>/database/mysql/mysql-install/</link>
      <pubDate>Fri, 04 Jan 2019 15:35:54 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-install/</guid>
      <description>#用压缩包安装 根据自己的操作系统下载对应的32位或64位的压缩包。按如下步骤操作： 第一步： 解压缩 将压缩包解压到C:\Program Files</description>
    </item>
    
    <item>
      <title>mysql statment join</title>
      <link>/database/mysql/mysql-statment-join/</link>
      <pubDate>Tue, 11 Dec 2018 13:46:09 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-statment-join/</guid>
      <description>关键字: on 数据库在通过连接两张或多张表来返回记录时，都会生成一张中间的&amp;quot;临时表&amp;quot;，然后再将这张临时表返回给用户。 多表级联</description>
    </item>
    
    <item>
      <title>mysql SQL 中With as 的用法</title>
      <link>/database/mysql/mysql-with/</link>
      <pubDate>Sat, 10 Nov 2018 12:48:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-with/</guid>
      <description>With alias_name as (select1), -- as和select中的括号都不能省略 alias_name2 as (select2), -- 后面的没有with，逗号分割，同一个主查询同级别地方，with子查询只能定义一次 alias_namen as (select</description>
    </item>
    
    <item>
      <title>MySQL日志管理</title>
      <link>/database/mysql/mysql-log/</link>
      <pubDate>Mon, 02 Jul 2018 09:45:53 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-log/</guid>
      <description>MySQL日志管理 - 人云思云 - SegmentFault 思否 MySQL 服务器上一共有六种日志：错误日志，查询日志，慢查询日志，二进制日志，事务日志，中继日志。 一 错误日志 错误</description>
    </item>
    
    <item>
      <title>Mysqlslap 压力测试</title>
      <link>/database/mysql/mysqlslap%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Thu, 24 May 2018 17:39:02 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysqlslap%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</guid>
      <description>mysqlslap --defaults-file=/data0/mysql/3306/my.cnf --concurrency=50,100,200 --iterations=1 --number-int-cols=4 --number-char-cols=35 --auto-generate-sql --auto-generate-sql-add-autoincrement --auto-generate-sql-load-type=mixed --engine=myisam,innodb --number-of-queries=200 --debug-info -uroot -p -S /var/lib/mysql/mysql.sock --concurrency代表并发数量，多个可以用逗号隔开，当然你也可以用自己的分隔符隔开，这个时候要用到-</description>
    </item>
    
    <item>
      <title>Mysql Grant权限管理</title>
      <link>/database/mysql/mysql-sql-grant/</link>
      <pubDate>Sat, 28 Apr 2018 16:00:25 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-grant/</guid>
      <description>删除用户 drop user root@&#39;%&#39;; 创建数据库 CREATE DATABASE IF NOT EXISTStpcmsDEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci CREATE DATABASE IF NOT EXISTSguoanDEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci docker exec -i mariadb mysql -uroot -pXXXX -e &amp;quot;CREATE DATABASE IF NOT EXISTS ytjxc DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci&amp;quot; docker exec -i mariadb mysql -uroot -pXXXX -e &amp;quot;CREATE DATABASE IF NOT EXISTS ytjxc DEFAULT CHARACTER SET utf8</description>
    </item>
    
    <item>
      <title>Mysql 编码问题</title>
      <link>/database/mysql/mysql-character/</link>
      <pubDate>Sat, 21 Apr 2018 10:05:08 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-character/</guid>
      <description>mysql 编码问题 如何识别乱码的本来想要表达的文字 要从乱码字符中反解出原来的正确文字需要对各个字符集编码规则有较为深刻的掌握。但是原理很简单，这里用</description>
    </item>
    
    <item>
      <title>Mysql Basic</title>
      <link>/database/mysql/mysql-sql/</link>
      <pubDate>Sat, 21 Apr 2018 09:44:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql/</guid>
      <description>go实现的mysql管理工具 kill -s TERM /bin/pidof mysqld nohup mysqld &amp;amp; Mysql 导出数据csv解决乱码. 导出时直接设置字符集格式： mysql&amp;gt; select * from mobile_order_region where school_id=6921 into outfile &#39;/tmp/6921.csv&#39; CHARACTER SET gbk FIELDS TERMINATED BY &#39;,&#39; OPTIONALLY ENCLOSED BY &#39;&amp;quot;&#39; LINES</description>
    </item>
    
    <item>
      <title>Mysql 实现无限级分类</title>
      <link>/database/mysql/mysql_closuretable/</link>
      <pubDate>Sat, 21 Apr 2018 09:44:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql_closuretable/</guid>
      <description>在数据库中存储一棵树，实现无限级分类 ClosureTable https://segmentfault.com/a/1190000014284076 我也是从别的地方找来的，分析后发现挺不错的，特来分享。 无法发图只能简单处理： id name pid path 1 新闻 0 0 2 中国</description>
    </item>
    
    <item>
      <title>优化MySQL的21个建议</title>
      <link>/database/mysql/mysql-config-top10/</link>
      <pubDate>Mon, 16 Apr 2018 10:07:40 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-config-top10/</guid>
      <description>优化MySQL的21个建议 By 吴 炳锡 MySQL优化, 优化案例 3 Comments 作者：吴炳锡 来源：http://www.mysqlsupport.cn/ 联系方</description>
    </item>
    
    <item>
      <title>测试MySQL死锁</title>
      <link>/database/mysql/mysql-deadlock/</link>
      <pubDate>Tue, 03 Apr 2018 16:57:00 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-deadlock/</guid>
      <description>解除正在死锁的状态有两种方法： 第一种： 1.查询是否锁表 show OPEN TABLES where In_use &amp;gt; 0; 2.查询进程（如果您有SUPER权限，您可以看到所有线程。否则，您只能看</description>
    </item>
    
    <item>
      <title>CentOS 6 MariaDB Cluster</title>
      <link>/database/mysql/mysql-cluster-galera-nginx/</link>
      <pubDate>Mon, 26 Feb 2018 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cluster-galera-nginx/</guid>
      <description>可将cluster 同步方式设置成为 wsrep_sst_method=xtrabackup #所有节点都要更改 xtrabackup 安装 FROM http://allcmd.com/post/id/198 INSTALL MARIADB 192.168.80.111 node1 db1 192.168.80.110 node2 db2 192.168.80.101 node3 db3 all node 因为官方源连接不稳定,最好使用迅雷下载下来,放到每</description>
    </item>
    
    <item>
      <title>MySQL性能分析</title>
      <link>/database/mysql/mysql-tool-mytop%E7%9B%91%E6%8E%A7-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 26 Jan 2018 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-tool-mytop%E7%9B%91%E6%8E%A7-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</guid>
      <description>ps-top - a top-like program for MySQL Install: go get -u github.com/sjmudd/ps-top/cmd/ps-top go get -u github.com/sjmudd/ps-top/cmd/ps-stats mytop mytop -h 10.114.0.10 -upmm -ppercona2018 -s 1 mytop 是一个类似 Linux 下的 top 命令风格的 MySQL 监控工具，可以监控当前的连接用户和正在执行的命令 mytop 的结果信息</description>
    </item>
    
    <item>
      <title>Mysql多列索引经典案例</title>
      <link>/database/mysql/mysql-index-multi-question/</link>
      <pubDate>Tue, 23 Jan 2018 09:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-index-multi-question/</guid>
      <description>一个经典的多列索引案例，如题： 假设某个表有一个联合索引（c1,c2,c3,c4）以下——只能使用该联合索引的 c1,c2,c3 部分 A where c1=x and c2=x and c4&amp;gt;x and c3=x B where c1=x and</description>
    </item>
    
    <item>
      <title>MySQL 疑难 SQL</title>
      <link>/database/mysql/-mysql-%E7%96%91%E9%9A%BE-sql/</link>
      <pubDate>Wed, 07 Dec 2016 19:57:05 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/-mysql-%E7%96%91%E9%9A%BE-sql/</guid>
      <description>content {:toc} 指定IP和端口 mysql -uroot -p -h192.168.3.146 -P3306 时间自动更新 ALTER TABLE `tb_user` CHANGE `modified_time` `modified_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP 补充自增主键 alter table `表格名` add column `列名` int not null auto_increment primary key comment &#39;主键&#39; first; 分组排序取</description>
    </item>
    
    <item>
      <title>Linux之MariaDB基础详解</title>
      <link>/database/mysql/mysql/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql/</guid>
      <description>MySQL Memory Calculator内存占用计算器 Linux之MariaDB基础详解 MariaDB中文手册 远程登录 MySQL / MariaDB数据库配置教程 Mys</description>
    </item>
    
    <item>
      <title>Linux之MariaDB集群</title>
      <link>/database/mysql/mysql-cluster-galera/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cluster-galera/</guid>
      <description>通过上面的一系列测试，最后总结一下： 在生产环境下应该避免使用大事务，不建议在高并发写入场景下使用Galera Cluster架构，会导致集群限</description>
    </item>
    
    <item>
      <title>MariaDB-federated</title>
      <link>/database/mysql/mysql-federated/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-federated/</guid>
      <description>开启 federated 方式 安装插件 mysql&amp;gt; install plugin federated soname &#39;ha_federated.so&#39;; mysql&amp;gt; show engines; 启动 FEDERATED 存储引擎，修改 / etc/my.cnf 参数， 在 [mysqld] 下面添加：federated，重启 mysql ``` [mysqld] federated # federated=1 ``` 在服务器 A [真实数据存</description>
    </item>
    
    <item>
      <title>MySQL 中 KEY vs PRIMARY KEY vs UNIQUE KEY vs INDEX 的区别</title>
      <link>/database/mysql/mysql-index-primary-key/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-index-primary-key/</guid>
      <description>Mysql索引概念： 说说Mysql索引，看到一个很少比如：索引就好比一本书的目录，它会让你更快的找到内容，显然目录（索引）并不是越多越好，假</description>
    </item>
    
    <item>
      <title>MySQL 优化索引</title>
      <link>/database/mysql/mysql-optimization-index/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-optimization-index/</guid>
      <description>mysql 性能优化 - 慢查询分析、优化索引和配置 美团 MySQL 索引原理及慢查询优化 Mysql 反应慢，CPU 占用高的解决办法总结 千万级记录的 Discuz 论坛导致 MySQL CPU 100% 的优化笔记 type</description>
    </item>
    
    <item>
      <title>MySQL 性能排查思路</title>
      <link>/database/mysql/mysql-optimization-performance/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-optimization-performance/</guid>
      <description>除了服务器硬件的性能瓶颈，对于 MySQL 系统本身，我们可以使用工具来优化数据库的性能，通常有三种：使用索引，使用 EXPLAIN 分析查询以及调整 MySQL 的内部配置。 mysql 性</description>
    </item>
    
    <item>
      <title>MySQL 数据库修复</title>
      <link>/database/mysql/mysql-repair/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-repair/</guid>
      <description>7种修复MySQL数据库的方法，当简单的重启对数据库不起作用，或者有表崩溃时。 简单的MySQL重启： /usr/local/mysql/bin/mysqladmin -uUSERNAME -pPASSWORD shutdown /usr/local/mysql/bin/mysqld_safe &amp;amp; 1、MyISAM表崩溃 MyS</description>
    </item>
    
    <item>
      <title>MySQL5.7杀手级新特性：GTID原理与实战</title>
      <link>/database/mysql/mysql-cluster-gtid/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cluster-gtid/</guid>
      <description>MySQL5.7杀手级新特性：GTID原理与实战 | Focus on MySQL,Focus on Focus</description>
    </item>
    
    <item>
      <title>MySQL运维及开发规范</title>
      <link>/database/mysql/mysql%E8%BF%90%E7%BB%B4%E5%8F%8A%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql%E8%BF%90%E7%BB%B4%E5%8F%8A%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</guid>
      <description>MySQL运维及开发规范 一. 基础规范 约定 (1) 使用INNODB存储引擎 (2) 表字符集使用UTF8 (3) 所有表都需要添加注释 (4) 尽量不使用触发器、函数、存储</description>
    </item>
    
    <item>
      <title>msyql中子查询IN，EXISTS，ANY，ALL，SOME，UNION关键字介绍</title>
      <link>/database/mysql/mysql-sql-select/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-select/</guid>
      <description>msyql中子查询IN，EXISTS，ANY，ALL，SOME，UNION介绍 ANY关键字 假设any内部的查询语句返回的结果个数是三个，如:</description>
    </item>
    
    <item>
      <title>my.cnf详解</title>
      <link>/database/mysql/mysql-config-my.cnf/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-config-my.cnf/</guid>
      <description>[client] default-character-set = utf8 [mysqld] datadir = /docker/mysql # MASTER [server] server_id=1 log_bin=master-binlog binlog_format = ROW log-bin-trust-function-creators=1 max_binlog_size = 256M expire_logs_days = 7 # innodb_flush_log_at_trx_comit = 1 # sync_binlog = 0 binlog-ignore-db = test binlog-ignore-db = information_schema binlog-ignore-db = performance_schema # slave [server] #read_only=ON log-slave-updates = ON slave-skip-errors = ALL slave-skip-errors = 1007,1008,1053,1062,1213,1158,1159 relay_log_recovery=ON replicate-ignore-db = information_schema replicate-ignore-db = performance_schema [mysqld] user = mysql lower_case_table_names = 1 default_storage_engine = InnoDB</description>
    </item>
    
    <item>
      <title>mysql 主从、主主复制</title>
      <link>/database/mysql/mysql-cluster-replication/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cluster-replication/</guid>
      <description>slave端配置 1.中继日志是连接mastert和slave的信息，它是复制的核心，I/O线程将来自master的事件存储到中继日志中，中继</description>
    </item>
    
    <item>
      <title>mysql 命令行你知多少</title>
      <link>/database/mysql/mysql-cmd/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-cmd/</guid>
      <description>mysql 命令行你知多少 张映 发表于 2010-10-19 分类目录： mysql 标签：mysql, 实例, 手册 mysql -u root -p 等这些常用的参数外，你知道多少？来测试一下吧 一，mysql命令行</description>
    </item>
    
    <item>
      <title>mysql 查询当天、本周，本月，上一个月的数据</title>
      <link>/database/mysql/mysql-sql-datetime/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-datetime/</guid>
      <description>format格式说明： %M 月名字(January～December) %W 星期名字(Sunday～Saturday) %D 有英语前缀的月份的日期(1s</description>
    </item>
    
    <item>
      <title>mysqldump</title>
      <link>/database/mysql/mysqldump/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysqldump/</guid>
      <description>在线导入 i1 -&amp;gt; l4 mysqldump -h 10.114.0.7 -ulzkp -p&#39;yqhtfjzm&#39; shizhi | mysql -h10.114.0.14 -P3306 -ulzkp -pyqhtfjzm lzkp ## mysqldump -uroot -pxxxx --add-drop-table --hex-blob --skip-comments maindatabasename &amp;gt; main.sql mysqldump.sh ```sh #!/usr/bin/env bash #USERNAME=&amp;quot; -u backup &amp;quot; # see $HOME/.my.cnf BACKUP=/docker/backup/ HOST=&amp;quot;&amp;quot; USER=&amp;quot;-uroot&amp;quot; PASSWORD=&amp;quot;-ptoor&amp;quot; if [ -z &amp;quot;$1&amp;quot; ];then HOST=&amp;quot;&amp;quot; else HOST=&amp;quot;-h $1&amp;quot; fi if [ -z &amp;quot;$1&amp;quot; ] ;then databases=`/usr/bin/mysql $HOST $USER $PASSWORD --execute=&#39;show databases&#39; --skip-column-names --batch |</description>
    </item>
    
    <item>
      <title>mysql参数max_allowed_packet提高批量插入性能</title>
      <link>/database/mysql/mysql-config-max_allowed_packet/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-config-max_allowed_packet/</guid>
      <description>MySQL根据配置文件会限制Server接受的数据包大小。有时候大的插入和更新会受 max_allowed_packet 参数限制，导致大数据写入或者更新失败。 set global max_allowed_packet = 1024*1024*1024 1G 查看目</description>
    </item>
    
    <item>
      <title>mysql的查询、子查询及连接查询</title>
      <link>/database/mysql/mysql-sql-select-groupby/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-select-groupby/</guid>
      <description>unix_timestamp 按小时统计数量 mysql&amp;gt; select from_unixtime(addtime,&#39;%Y-%m-%d %H&#39;) as date,count() from table group by from_unixtime(addtime,&#39;%Y-%m-%d %H&#39;); +---------------+----------+ | date | count() | +---------------+----------+ | 2016-03-30 19 | 409 | | 2016-03-30 20 | 161 | +---------------+----------+ 如何理解理解group by和聚合函数 http://www.tuicool.com/articles/yamUn2I group by 之后其他列会存在多</description>
    </item>
    
    <item>
      <title>mysql配置文件my.cnf详解</title>
      <link>/database/mysql/mysql-config-my.cnf%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-config-my.cnf%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</guid>
      <description>mysql5.6版本以上，取消了参数log-slow-queries，更改为slow-query-log-file，切记！！ 还需要加上 slow_query_log = on</description>
    </item>
    
    <item>
      <title>percona 性能分析</title>
      <link>/database/mysql/mysql-tool-percona/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-tool-percona/</guid>
      <description>[](https://www.cnblogs.com/zishengY/p/6852280.html) apt-get install percona-toolkit yum install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm yum list | grep percona-toolkit yum install percona-toolkit 最新版 https://www.percona.com/downloads/percona-toolkit/LATEST/ pt-query-digest --help http://www.percona.com/doc/percona-toolkit/2.1/pt-query-digest.html pt-query-digest /var/log/mysql/slow.log &amp;gt; slow.txt pt-query-digest --processlist h=localhost --print --no-report CREATE DATABASE percona; use percona; wget https://nodeload.github.com/kormoc/Query-Digest-UI/zip/master unzip master pt-query-digest使用方法介绍 直接分析慢查询文件</description>
    </item>
    
    <item>
      <title>sql 约束（constraints） on update cascade 和 on delete cascade 作用区别？</title>
      <link>/database/mysql/mysql-constraints/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-constraints/</guid>
      <description>sql 约束（constraints） 在 sql 中，我们有如下约束： not null - 指示某列不能存储 null 值。 unique - 保证某列的每行必须有唯一的值。 primary key - not null 和 unique 的结合。</description>
    </item>
    
    <item>
      <title>01 MySQL 高级DBA职业规划</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/01-mysql-%E9%AB%98%E7%BA%A7dba%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/01-mysql-%E9%AB%98%E7%BA%A7dba%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/</guid>
      <description>&lt;h2 id=&#34;什么是mvcc-有什么作用&#34;&gt;什么是MVCC？有什么作用？&lt;/h2&gt;

&lt;p&gt;MVCC是Multiversion Concurrency Control的缩写，中文的意思是多版本并发控制。&lt;br /&gt;
目前多数DB都采用了这一技术，比如Oracle，PostgreSQL等，但各自的实现机制不尽相同，MVCC没有一个统一的实现标准。&lt;br /&gt;
MVCC能有效降低锁的开销，虽然不同数据库实现MVCC的机制有所有同，但大都实现了非阻塞的读操作，写操作也只锁定必要的行。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>01 MySQL优化方法论</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/01-mysql%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E8%AE%BA/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/01-mysql%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E8%AE%BA/</guid>
      <description>MySQL优化方法的关键是？ MySQL参数优化，innodb_buffer_pool_size/innodb_flush_log_at_tr</description>
    </item>
    
    <item>
      <title>02 MySQL数据库性能衡量</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/02-mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%A7%E8%83%BD%E8%A1%A1%E9%87%8F/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/02-mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%A7%E8%83%BD%E8%A1%A1%E9%87%8F/</guid>
      <description>测试服务器（或虚拟机）的QPS峰值 利用sysbench压测工具模拟SELECT操作 # 已有test库的话先drop掉 drop database test; create database test; # prepar</description>
    </item>
    
    <item>
      <title>02 MySQL标准化、自动化部署</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/02-mysql%E6%A0%87%E5%87%86%E5%8C%96%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/02-mysql%E6%A0%87%E5%87%86%E5%8C%96%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</guid>
      <description>&lt;h2 id=&#34;为什么数据目录和日志目录需要分开&#34;&gt;为什么数据目录和日志目录需要分开?&lt;/h2&gt;

&lt;p&gt;这里的分开，我理解是将MySQL的数据目录和日志目录分别放到不同类型的磁盘中。&lt;br /&gt;
假设生产环境中服务器上有两种类型的磁盘，分别是SSD和SAS，SSD比SAS的响应时间要快（SSD响应时间约0.1毫秒，SAS的响应时间约10毫秒），为了更好的利用磁盘，一般会把活跃的数据放到SSD上，冷数据放到SAS磁盘上。&lt;br /&gt;
数据目录下的数据一般是随机读写的热数据，放到SSD盘中会有较高的响应速度；&lt;br /&gt;
日志目录下的日志是顺序读写的冷数据，放到SAS盘中满足写日志高吞吐量的需求。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>03 MySQL服务器优化</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/03-mysql%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/03-mysql%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%98%E5%8C%96/</guid>
      <description>如何配置一个进程只跑在单个CPU上？ CPU性能调优方法之一：把进程或线程绑定在单个CPU上，这可以增加进程的CPU缓存速度，提高它的内存I/</description>
    </item>
    
    <item>
      <title>03 深入MySQL体系结构</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/03-%E6%B7%B1%E5%85%A5mysql%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/03-%E6%B7%B1%E5%85%A5mysql%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</guid>
      <description>1. thread pool的原理是什么？ 线程池的原理很简单，类似于操作系统中的缓冲区的概念，它的流程如下：先启动若干数量的线程，并让这些线程都处于睡眠状态</description>
    </item>
    
    <item>
      <title>04 揭密MySQL databock and binlog的格式</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/04-%E6%8F%AD%E5%AF%86mysql-databock-and-binlog%E7%9A%84%E6%A0%BC%E5%BC%8F/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/04-%E6%8F%AD%E5%AF%86mysql-databock-and-binlog%E7%9A%84%E6%A0%BC%E5%BC%8F/</guid>
      <description>&lt;h2 id=&#34;1-为什么创建一个innodb表只分配了96k而不是1m&#34;&gt;1. 为什么创建一个InnoDB表只分配了96K而不是1M？&lt;/h2&gt;

&lt;p&gt;Mysql中&lt;code&gt;extent&lt;/code&gt;(区)中是64个连续的&lt;code&gt;page&lt;/code&gt;(页)，是分配空间的最小单位，标准大小是1M。 但在用户启用了参数&lt;code&gt;innodb_file_per_table=on&lt;/code&gt;后，创建一个Innodb表时，初始分配的大小却是为96K。这是因为在每个段开始时，先用32个页大小的碎片页(fragment page)来存放数据，在使用完这些页之后才是64个连续页的申请。这样做的目的是，对于一些小表，或者是undo这类的段，可以在开始时申请较少的空间，节省磁盘容量的开销。 下面通过示例来显示InnoDB存储引擎对于区的申请方式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>05 MySQL DBA日常操作</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/05-mysql-dba%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/05-mysql-dba%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;h2 id=&#34;使用mysqld-mutil-start命令启动多实例3306-3307-使用mysqld-multi-report命令显示结果&#34;&gt;使用mysqld_mutil start命令启动多实例3306、3307，使用mysqld_multi report命令显示结果。&lt;/h2&gt;

&lt;h3 id=&#34;规划多实例目录&#34;&gt;规划多实例目录&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;mkdir -p /u01/mysql             # 程序目录
mkdir -p /u01/conf              # 配置文件
mkdir -p /u01/data/3306
mkdir -p /u01/data/3307
mkdir -p /u01/log/3306/iblog
mkdir -p /u01/log/3307/iblog
mkdir -p /u01/log/3306/binlog
mkdir -p /u01/log/3307/binlog
mkdir -p /u01/run/3306
mkdir -p /u01/run/3307
mkdir -p /u01/tmp/3306
mkdir -p /u01/tmp/3307

chown -R mysql:mysql /u01
chmod -R 755 /u01
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>05 MySQL核心参数优化</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/05-mysql%E6%A0%B8%E5%BF%83%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/05-mysql%E6%A0%B8%E5%BF%83%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/</guid>
      <description>back_log参数的作用 指定MySQL可能的TCP/IP的连接数量（一个TCP/IP连接占256k），默认是50。 当MySQL主线程在很短</description>
    </item>
    
    <item>
      <title>06 MySQL设计与开发最佳实践</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/06-mysql%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/06-mysql%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>表结构设计的核心思想是什么？ 表及表字段只增不减，即不删除表，不删除字段，只做增加。 使用innodb存储引擎，支持事务，MVCC，行级锁，更好</description>
    </item>
    
    <item>
      <title>06 深入浅出MySQL备份与恢复</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/06-%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAmysql%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/06-%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAmysql%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</guid>
      <description>使用mydumper工具全库备份 mydumper是针对mysql数据库备份的一个轻量级第三方的开源工具，备份方式采用逻辑备份。 mydumpe</description>
    </item>
    
    <item>
      <title>07 MySQL索引设计</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/07-mysql%E7%B4%A2%E5%BC%95%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/07-mysql%E7%B4%A2%E5%BC%95%E8%AE%BE%E8%AE%A1/</guid>
      <description>B树与B+树的区别？ B树 所有关键字在整颗树中出现，任何一个关键字出现且只出现在一个结点中 搜索在非叶子结点也可以命中 叶子节点间没有链表 B+树 所</description>
    </item>
    
    <item>
      <title>07 MySQL锁机制与事务机制实现</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/07-mysql%E9%94%81%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/07-mysql%E9%94%81%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0/</guid>
      <description>MySQL参数autocommit生产环境设1还是0？为什么？ MySQL参数autocommit生产环境设成0，即不自动提交。 设置成不自动提</description>
    </item>
    
    <item>
      <title>08 MySQL监控系统之Zabbix</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/08-mysql%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%B9%8Bzabbix/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/08-mysql%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%B9%8Bzabbix/</guid>
      <description>部署zabbix监控 简介 zabbix（音同 zbix）是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案。 zabb</description>
    </item>
    
    <item>
      <title>08 SQL EXPLAIN解析</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/08-sql-explain%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/08-sql-explain%E8%A7%A3%E6%9E%90/</guid>
      <description>什么是归并排序？ 如果需要排序的数据超过了 sort_buffer_size 的大小，说明无法在内存中完成排序，就需要写到临时文件中。若排序中产生了临时文件，需要利用归并排序算</description>
    </item>
    
    <item>
      <title>09 MySQL优化器算法解析</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/09-mysql%E4%BC%98%E5%8C%96%E5%99%A8%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/09-mysql%E4%BC%98%E5%8C%96%E5%99%A8%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90/</guid>
      <description>MySQL优化器 目标 给定一个SQL，查找SQL最优（局部最优）的执行路径，使得用户能够更快的得到SQL的执行结果。 指标 代价模型：RBO(基于</description>
    </item>
    
    <item>
      <title>09 MySQL性能优化的关键点</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/09-mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E5%85%B3%E9%94%AE%E7%82%B9/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/09-mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E5%85%B3%E9%94%AE%E7%82%B9/</guid>
      <description>服务器参数调优，有哪些关键点？ 优化Linux内核参数，如关闭SWAP，调优网络参数、文件限制等 是否关闭NUMA 多网卡是否绑定 磁盘调度算法的选</description>
    </item>
    
    <item>
      <title>10 MySQL写出高效SQL</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/10-mysql%E5%86%99%E5%87%BA%E9%AB%98%E6%95%88sql/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/10-mysql%E5%86%99%E5%87%BA%E9%AB%98%E6%95%88sql/</guid>
      <description>MySQL设计标准 数据库命名规范、统一，如vip_xxxx 表一旦设计好，字段只允许增加，不允许减少(drop column) 统一使用INNODB存储引擎，</description>
    </item>
    
    <item>
      <title>10 深入理解MySQL主从复制</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/10-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/10-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <description>如何解决主从复制延迟的问题？ 加大主从库之间网络带宽 使用SSD盘 使用缓存服务器Redis/memcached 如何判断主从复制是否同步？ # 在从库</description>
    </item>
    
    <item>
      <title>11 MySQL锁优化分析</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/11-mysql%E9%94%81%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/11-mysql%E9%94%81%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90/</guid>
      <description>不同索引加锁顺序的问题，模拟重现死锁 走索引的SQL语句，会涉及两把锁，在特定场景下就会产生交差锁等待 测试表结构及相关语句 mysql&amp;gt; show create table employees\G; *************************** 1. row *************************** Table:</description>
    </item>
    
    <item>
      <title>11 构建高可用MySQL系统</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/11-%E6%9E%84%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8mysql%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/11-%E6%9E%84%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8mysql%E7%B3%BB%E7%BB%9F/</guid>
      <description>MHA部署 主机名/IP规划 主机名 IP地址 用途 mymha 10.245.231.201 Master mydb1 10.245.231.202 Slave mydb2 10.245.231.203 MHA manager 10.245.231.204 VIP虚拟IP 系统基本配置 cat /etc/issue racle Linux Server release 6.8 Kernel \r on an \m service iptables stop chkconfig iptables off chkconfig ip6tables off chkconfig bluetooth off</description>
    </item>
    
    <item>
      <title>12 MySQL性能优化的最佳20&#43;条经验</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/12-mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E6%9C%80%E4%BD%B320&#43;%E6%9D%A1%E7%BB%8F%E9%AA%8C/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/12-mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E6%9C%80%E4%BD%B320&#43;%E6%9D%A1%E7%BB%8F%E9%AA%8C/</guid>
      <description>本章有部分内容与《MySQL性能优化最佳实践 - 10 MySQL写出高效SQL》互为补充。 从程序员的角度优化 数据库的操作越来越成为整个应的的性能瓶</description>
    </item>
    
    <item>
      <title>12 MySQL构架设计与容量规划</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/12-mysql%E6%9E%84%E6%9E%B6%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%B9%E9%87%8F%E8%A7%84%E5%88%92/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/12-mysql%E6%9E%84%E6%9E%B6%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%B9%E9%87%8F%E8%A7%84%E5%88%92/</guid>
      <description>用sysbench压测MySQL，通过orzdba监控工具分析机器的容量 编译安装sysbench # 安装依赖包（在上节中的mha机器上安装） yum</description>
    </item>
    
    <item>
      <title>13 深入分析Online DDL原理</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/13-%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90online-ddl%E5%8E%9F%E7%90%86/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/13-%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90online-ddl%E5%8E%9F%E7%90%86/</guid>
      <description>用oak对表sbtest1做添加字段和增加索引的Online DDL 用sysbench工具准备测试环境 # 创建数据库 mysql&amp;gt; create database lyj; # 用sysbench工具</description>
    </item>
    
    <item>
      <title>14 运维MySQL过程中线上故障分析与排查</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/14-%E8%BF%90%E7%BB%B4mysql%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%BA%BF%E4%B8%8A%E6%95%85%E9%9A%9C%E5%88%86%E6%9E%90%E4%B8%8E%E6%8E%92%E6%9F%A5/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/14-%E8%BF%90%E7%BB%B4mysql%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%BA%BF%E4%B8%8A%E6%95%85%E9%9A%9C%E5%88%86%E6%9E%90%E4%B8%8E%E6%8E%92%E6%9F%A5/</guid>
      <description>MySQL常见故障 数据库连接数爆满 大事务导致数据库挂死 MySQL 主库crash 大规模行锁竞争 线上执行update报错 主从库不一致,复制中止 重现故障5</description>
    </item>
    
    <item>
      <title>15 MySQL源码初探</title>
      <link>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/15-mysql%E6%BA%90%E7%A0%81%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-dba%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/15-mysql%E6%BA%90%E7%A0%81%E5%88%9D%E6%8E%A2/</guid>
      <description>通过gdb工具分析mysqld进程启动的过程 gdb --args /u01/mysql/bin/mysqld #-------------------------------------------------------------------------------- GNU gdb (GDB) Red Hat Enterprise Linux (7.2-90.el6) Copyright (C) 2010 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt; This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted</description>
    </item>
    
    <item>
      <title>MySQL性能优化最佳实践 - 04 MySQL优化之Linux系统层面调优</title>
      <link>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/04-mysql%E4%BC%98%E5%8C%96%E4%B9%8Blinux%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2%E8%B0%83%E4%BC%98/</link>
      <pubDate>Tue, 28 Jan 2014 13:42:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/04-mysql%E4%BC%98%E5%8C%96%E4%B9%8Blinux%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2%E8%B0%83%E4%BC%98/</guid>
      <description>MySQL中出现存SWAP,主要会是哪些原因？ 没设置内核参数sysctl.conf中的vm.swappiness=0 ``` perl 在CentOS 6.4</description>
    </item>
    
    <item>
      <title>100个MySQL的调节和优化的提示</title>
      <link>/database/mysql/100%E4%B8%AAmysql%E7%9A%84%E8%B0%83%E8%8A%82%E5%92%8C%E4%BC%98%E5%8C%96%E7%9A%84%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/100%E4%B8%AAmysql%E7%9A%84%E8%B0%83%E8%8A%82%E5%92%8C%E4%BC%98%E5%8C%96%E7%9A%84%E6%8F%90%E7%A4%BA/</guid>
      <description>MySQL是一个功能强大的开源数据库。随着越来越多的数据库驱动的应用程序，人们一直在推动MySQL发展到它的极限。这里是101条调节和优化M</description>
    </item>
    
    <item>
      <title>Mycat 管理命令</title>
      <link>/database/mysql/-mycat-%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/-mycat-%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</guid>
      <description>前言 Mycat 是一款开源的数据库分库分表中间件 可以通过 Mysql 命令行，登录 9066 端口执行 SQL 的方式来进行管理 事实上目前的管理命令集更多是用来进行查看和分析，里面</description>
    </item>
    
    <item>
      <title>mysql 中 的数据类型</title>
      <link>/database/mysql/mysql-sql-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/database/mysql/mysql-sql-type/</guid>
      <description>MySQL数字类型int与tinyint、float与decimal如何选择 了解并熟悉 mysql 中的数据类型，对建表和数据库优化都非常重要。 mysql 实现了</description>
    </item>
    
  </channel>
</rss>