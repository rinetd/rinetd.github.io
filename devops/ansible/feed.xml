<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>时光小栈</title>
    <link>/devops/ansible/</link>
    <description>Recent content on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 10 Dec 2018 10:50:58 +0800</lastBuildDate>
    
	<atom:link href="/devops/ansible/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ansible role</title>
      <link>/devops%5Cansible%5Cansible-role/</link>
      <pubDate>Mon, 10 Dec 2018 10:50:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops%5Cansible%5Cansible-role/</guid>
      <description>https://github.com/bottlelee
ansible-elk-deploy
ansible-mysql-cluster
ansible-rabbitmq-cluster
https://github.com/brianshumate
ansible-vault
ansible-nomad
ansible-consul
ansible-hubot
https://github.com/apolloclark
ansible-role-filebeat</description>
    </item>
    
    <item>
      <title>ansible elasticsearch</title>
      <link>/devops%5Cansible%5Cansible-elasticsearch/</link>
      <pubDate>Mon, 10 Dec 2018 09:36:05 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops%5Cansible%5Cansible-elasticsearch/</guid>
      <description>--- # =========================================================================== # Do basic setup on all hosts # =========================================================================== - hosts: all become: true gather_facts: false tasks: - name: &amp;quot;SSH should be available.&amp;quot; become: false delegate_to: localhost wait_for: port: 22 host: &#39;{{ ansible_host }}&#39; search_regex: &amp;quot;OpenSSH&amp;quot; delay: 1 timeout: 300 - name: &amp;quot;The ansible facts should be gathered for later.&amp;quot; setup: - name: &amp;quot;Our servers should be known by name.&amp;quot; lineinfile: dest: /etc/hosts line: &#39;{{ hostvars[item].ansible_host }} {{item}}&#39; with_items: &#39;{{ groups[&amp;quot;all&amp;quot;] }}&#39; - name: &amp;quot;A &#39;ping&#39; via DNS name should be possible.</description>
    </item>
    
    <item>
      <title>Ansible playbook 函数 loopup()</title>
      <link>/devops/ansible/ansible-playbooks-lookup/</link>
      <pubDate>Mon, 15 Oct 2018 16:45:47 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-playbooks-lookup/</guid>
      <description>在playbooks中可以使用一个名为lookup()的函数，该函数用于ansible从外部资源访问数据，根据第一个参数的不同，该函数具有不</description>
    </item>
    
    <item>
      <title>Ansible playbook 条件处理</title>
      <link>/devops/ansible/ansible-playbooks-condition/</link>
      <pubDate>Mon, 15 Oct 2018 16:45:47 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-playbooks-condition/</guid>
      <description>节讲如何控制playbook的执行流，记得前面说过playbook和模板文件中可以使用jinja2语法么，这节就会大量用到了。 首先，要讲下s</description>
    </item>
    
    <item>
      <title>Ansible Galaxy使用详解</title>
      <link>/devops/ansible/ansible-galaxy/</link>
      <pubDate>Sat, 15 Sep 2018 11:33:46 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-galaxy/</guid>
      <description>1. 登录认证 ansible-galaxy login ansible-galaxy login --github-token=&amp;quot;&amp;quot; 2. 创建 roles ansible-galaxy init ansible-role-name 3. 导入ansible-galaxy import命令要求您首先使用login命令进行身份验证。 一旦经过身份验</description>
    </item>
    
    <item>
      <title>Ansible 文本修改 Lineinfile</title>
      <link>/devops/ansible/ansible-%E6%96%87%E6%9C%AC%E4%BF%AE%E6%94%B9-lineinfile/</link>
      <pubDate>Mon, 25 Jun 2018 14:43:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-%E6%96%87%E6%9C%AC%E4%BF%AE%E6%94%B9-lineinfile/</guid>
      <description>## credit: http://fabian-affolter.ch/blog/the-lineinfile-module-of-ansible/ --- - hosts: alpine_install user: root tasks: # - name: create a complete empty file # command: /usr/bin/touch /test/test.conf # 创建新文件 - name: create a new file with lineinfile lineinfile: dest=/test/test.conf regexp=&#39;^&#39; line=&#39;&#39; state=present create=True # 添加新行 - name: add a string to the new file lineinfile: dest=/test/test.conf regexp=&#39;^&#39; line=&#39;Hello, World!&#39; state=present # 添加多行 - name: add</description>
    </item>
    
    <item>
      <title>Ansible 文本修改 Lineinfile</title>
      <link>/devops/ansible/ansible-module-lineinfile/</link>
      <pubDate>Mon, 25 Jun 2018 14:43:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-module-lineinfile/</guid>
      <description>## credit: http://fabian-affolter.ch/blog/the-lineinfile-module-of-ansible/ --- - hosts: alpine_install user: root tasks: # - name: create a complete empty file # command: /usr/bin/touch /test/test.conf - name: create a new file with lineinfile lineinfile: dest=/test/test.conf regexp=&#39;^&#39; line=&#39;&#39; state=present create=True - name: add a string to the new file lineinfile: dest=/test/test.conf regexp=&#39;^&#39; line=&#39;Hello, World!&#39; state=present - name: add a multiline string to the file and delete the string from before # Be aware, with</description>
    </item>
    
    <item>
      <title>Ansible 优化</title>
      <link>/devops/ansible/ansible-profile/</link>
      <pubDate>Mon, 12 Mar 2018 17:38:31 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-profile/</guid>
      <description>Ansible 优化 Ansible 优化 开启 SSH 长连接 开启 Pipelining 开启 Accekerate 模式 设置 Facts 缓存 开启 SSH 长连接 Ansible 是使用 SSH 和远端主机进行通信，Ansible 对 SSH 的依赖性非常强，SSH 5.6+ 版本可</description>
    </item>
    
    <item>
      <title>Ansible-gather_facts-配置</title>
      <link>/devops/ansible/ansible-facts/</link>
      <pubDate>Mon, 12 Mar 2018 17:19:31 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-facts/</guid>
      <description>过滤指定的fact ansible localhost -m setup -a &#39;filter=ansible_eth*’ 自定义fact 对 facts 设置优化 ansible playbook 默认第一个 task 是 Gathering Facts 收集各主机的 facts 信息，以</description>
    </item>
    
    <item>
      <title>Ansible Register</title>
      <link>/devops/ansible/ansible-module-register/</link>
      <pubDate>Mon, 12 Mar 2018 17:09:02 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-module-register/</guid>
      <description>ansible register 基础使用讲解 Register doc # 注册变量 result，根据 result 结果判断是否已经生成过 etcd 证书 # result|failed 说明没有生成过证书，下一步生成证书 # result|succeeded 说明已经有 etcd 证书，使</description>
    </item>
    
    <item>
      <title>Ansible Register</title>
      <link>/devops/ansible/ansible-vars-register/</link>
      <pubDate>Mon, 12 Mar 2018 17:09:02 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-vars-register/</guid>
      <description>ansible register 基础使用讲解 Register doc # 注册变量 result，根据 result 结果判断是否已经生成过 etcd 证书 # result|failed 说明没有生成过证书，下一步生成证书 # result|succeeded 说明已经有 etcd 证书，使</description>
    </item>
    
    <item>
      <title>Ansible Module Wait_for</title>
      <link>/devops/ansible/ansible-module-debug/</link>
      <pubDate>Mon, 12 Mar 2018 17:00:17 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-module-debug/</guid>
      <description>wait_for 用于等待指定的时间（默认是 300 秒）。在不指定任何选项的时候，这个模块什么都不做。 该模块可以用于等待端口可用。比如，调用 java 应用服务器的启动脚本</description>
    </item>
    
    <item>
      <title>Ansible Module Wait_for</title>
      <link>/devops/ansible/ansible-module-wait_for/</link>
      <pubDate>Mon, 12 Mar 2018 17:00:17 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-module-wait_for/</guid>
      <description>- name: Check if systemd exists stat: path=/etc/systemd/system register: systemd_check - name: Install nsqlookupd systemd service template: src: nsqlookupd.service.j2 dest: /etc/systemd/system/nsqlookupd.service when: systemd_check.stat.exists == true notify: - reload daemon - restart nsqlookupd wait_for 用于等待指定的时间（默认是 300 秒）。在不指定任何选项的时候，这个模块什么都不</description>
    </item>
    
    <item>
      <title>Ansible Include</title>
      <link>/devops/ansible/ansible-include/</link>
      <pubDate>Mon, 12 Mar 2018 13:59:15 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-include/</guid>
      <description>PlayBook: 执行： ansible-playbook playbook.yml -f 10 ansible-playbook playbook.yml --list-hosts Facts: ansible all -m setup Playbook vi playbook.yml - include: rabbitmq/playbook.yml - include: mysql/playbook.yml - include: keystone/playbook.yml - include: glance/playbook.yml - include: nova/playbook.yml - include: heat/playbook.yml Task Include: tasks: - include: task2.yml - include: wordpress.yml vars: wp_user: timmy ssh_keys: \- keys/one.txt \- keys/two.txt Handlers Include: handlers: \- include: handlers/handlers.yml Roles: webservers.yml fooservers.yml roles/ common/ files/ templates/ tasks/ handlers/ vars/</description>
    </item>
    
    <item>
      <title>Ansible 变量 Vars</title>
      <link>/devops/ansible/ansible-%E5%8F%98%E9%87%8F-vars/</link>
      <pubDate>Mon, 12 Mar 2018 11:07:42 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-%E5%8F%98%E9%87%8F-vars/</guid>
      <description>ansible 变量的引用 如何定义在 template 中引用的 items 变量 {% if nomad_options -%} options = { {% if nomad_raw_exec_enabled %} &amp;quot;driver.raw_exec.enable&amp;quot; = &amp;quot;1&amp;quot; {% endif %} {% for key, value in nomad_options.items() %} &amp;quot;{{ key }}&amp;quot; = &amp;quot;{{ value }}&amp;quot; {% endfor -%} } {% endif %} 方式1： 直接在 playbook 中定义变量</description>
    </item>
    
    <item>
      <title>Ansible 变量 Vars</title>
      <link>/devops/ansible/ansible-vars-define/</link>
      <pubDate>Mon, 12 Mar 2018 11:07:42 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-vars-define/</guid>
      <description>ansible 变量的引用 Ansible 变量 系统自动化让重复的工作变得更加容易，但是每个系统还是有一些细微的差别，变量就是如何处理系统之间的不同之处。这里将会列出变量</description>
    </item>
    
    <item>
      <title>使用 Ansible Playbook 管理 docker mysql</title>
      <link>/devops/ansible/ansible-module-docker-mysql/</link>
      <pubDate>Mon, 15 Jan 2018 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-module-docker-mysql/</guid>
      <description>- hosts: localhost tags: - mysql gather_facts: false tasks: # create a mysql container using the official mysql image - name: start database server docker: image: mysql name: mysql env: - MYSQL_ROOT_PASSWORD={{MYSQL_ROOT_PASSWORD}} # mysql takes a few seconds to start up. the next two tasks ask docker for # the ip address of the mysql container and then wait for the mysql port to # become available. - name: get</description>
    </item>
    
    <item>
      <title>使用 Ansible 管理 MySQL 复制</title>
      <link>/devops/ansible/ansible-module-mysql/</link>
      <pubDate>Mon, 15 Jan 2018 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-module-mysql/</guid>
      <description>Ansible 是一个配置管理和应用部署工具，功能类似于目前业界的配置管理工具 Chef,Puppet,Saltstack。Ansible 是通过 Python 语言开发。</description>
    </item>
    
    <item>
      <title>使用 Ansible 管理 MySQL 复制</title>
      <link>/devops/ansible/ansible-mysql/</link>
      <pubDate>Mon, 15 Jan 2018 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-mysql/</guid>
      <description>Ansible 是一个配置管理和应用部署工具，功能类似于目前业界的配置管理工具 Chef,Puppet,Saltstack。Ansible 是通过 Python 语言开发。</description>
    </item>
    
    <item>
      <title>Linux 命令 Ansible</title>
      <link>/devops/ansible/ansible/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible/</guid>
      <description>资料 Ansible快速入门:技术原理与实战 Ansible 中文权威指南 Ansible 简书专题文章 Ansible 入门 ** ansible 模块 ** Install sudo pip install ansible Centos sudo yum install ansible Ubuntu $ sudo apt-get install software-properties-common $ sudo apt-add-repository ppa:ansible/ansible $ sudo apt-get update $ sudo apt-get</description>
    </item>
    
    <item>
      <title>Linux 命令 Ansible-playbook</title>
      <link>/devops/ansible/ansible-playbook/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-playbook/</guid>
      <description>使用 ansible-playbook -i inventory.ini xxx.yml -k -K -i 指定主机 -e 设置运行变量 -k 执行之后需要输入 ssh 连接用户的密码，如果做了中控机到所有节点的互信，则不需要此参数 -K 执行之后需要输入</description>
    </item>
    
    <item>
      <title>Linux命令 Ansible组件</title>
      <link>/devops/ansible/ansible-plugins/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/ansible/ansible-plugins/</guid>
      <description>Tower替代软件 docker run -d --name=semaphore -p 80:3000 -v /docker/ansible/semaphore:/data playniuniu/ansible-semaphore #!/bin/sh SEMAPHORE_DB_HOST=&amp;quot;127.0.0.1&amp;quot; SEMAPHORE_DB_PORT=&amp;quot;3306&amp;quot; SEMAPHORE_DB_USER=&amp;quot;root&amp;quot; SEMAPHORE_DB_PASS=&amp;quot;root&amp;quot; SEMAPHORE_DB=&amp;quot;semaphore&amp;quot; SEMAPHORE_PLAYBOOK_PATH=&amp;quot;/data/&amp;quot; SEMAPHORE_ADMIN=&amp;quot;root&amp;quot; SEMAPHORE_ADMIN_EMAIL=&amp;quot;root@example.com&amp;quot; SEMAPHORE_ADMIN_NAME=&amp;quot;root&amp;quot; SEMAPHORE_ADMIN_PASSWORD=&amp;quot;root&amp;quot; some_host ansible_ssh_port=2222 ansible_ssh_user=manager pam_limits ansible all -m shell -a &amp;quot;ulimit -HSn 65535&amp;quot; ansible all -m pam_limits -a &amp;quot;domain=* limit_type=- limit_item=nofile value=65536&amp;quot; ansible all -m pam_limits -a &amp;quot;domain=* limit_type=hard limit_item=nofile value=65536&amp;quot; 时间同步chrony ansible-galaxy</description>
    </item>
    
  </channel>
</rss>