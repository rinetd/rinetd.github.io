<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS on 时光小栈</title>
    <link>/tags/css/</link>
    <description>Recent content in CSS on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 08 Dec 2018 11:19:50 +0800</lastBuildDate>
    
	<atom:link href="/tags/css/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>css 利用visibility属性来让元素消失</title>
      <link>/frontend/css/css-visable/</link>
      <pubDate>Sat, 08 Dec 2018 11:19:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-visable/</guid>
      <description>一个小的技巧：隐藏元素并消失 如果我们想隐藏一个元素，并实现过渡的效果。我们可能会用jQuery的fadeOut(), 也可以用css3的的op</description>
    </item>
    
    <item>
      <title>详解 CSS 七种三栏布局技巧</title>
      <link>/frontend/css/css-layout-3col/</link>
      <pubDate>Wed, 21 Mar 2018 13:16:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-layout-3col/</guid>
      <description>三栏布局，顾名思义就是两边固定，中间自适应。三栏布局在开发十分常见，那么什么是三栏布局？比如我打开某东的首页： 映入眼帘的就是一个常见的三栏布</description>
    </item>
    
    <item>
      <title>Css Position定位属性</title>
      <link>/frontend/css/css-position/</link>
      <pubDate>Wed, 21 Mar 2018 11:03:33 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-position/</guid>
      <description>Z-index z-index深入理解 子元素的z-index值只在父元素范围内有效 z-index只对具有定位的元素有效 规则: background/border z-index =-1 为负值 空属性 block元</description>
    </item>
    
    <item>
      <title>深入理解CSS浮动</title>
      <link>/frontend/css/css-float/</link>
      <pubDate>Wed, 21 Mar 2018 10:16:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-float/</guid>
      <description>深入理解CSS浮动</description>
    </item>
    
    <item>
      <title>Github 的 CSS 风格指南</title>
      <link>/frontend/scss/scss-styletype/</link>
      <pubDate>Mon, 19 Mar 2018 11:14:52 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/scss/scss-styletype/</guid>
      <description>Github 的 CSS 风格指南 这个CSS风格指南是在GitHub内部用于应用程序的指南。我们鼓励您建立一个适合你自己团队的风格指南。在你阅读这个之前，你需要</description>
    </item>
    
    <item>
      <title>Sass Mixin Extend</title>
      <link>/frontend/scss/sass-mixin-extend/</link>
      <pubDate>Sat, 17 Mar 2018 14:50:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/scss/sass-mixin-extend/</guid>
      <description>当我们提及预编译的时候，我经常会被问到的一个问题是Mixins 还是 @extend ? 关于这个话题我经常直言不讳，而且鉴于以下的这几条原因，我坚定的认为你应</description>
    </item>
    
    <item>
      <title>解决Sass媒体查询的重复问题</title>
      <link>/frontend/scss/sass-media-mixin/</link>
      <pubDate>Sat, 17 Mar 2018 14:48:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/scss/sass-media-mixin/</guid>
      <description>在Sass中有很多方法可以解决媒体查询这个问题，但是其中一些方法存在相同的问题。一开始我会还原这个问题，然后提供我的解决方案，最后列出这个方</description>
    </item>
    
    <item>
      <title>动画展示 Flexbox 布局</title>
      <link>/frontend/css/layout/css-flexbox/</link>
      <pubDate>Sat, 17 Mar 2018 11:06:35 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/layout/css-flexbox/</guid>
      <description>Flexbox Cheatsheet Cheatsheet 玩游戏玩转FlexBox布局 Flexbox 布局将我们从CSS的邪恶（如垂直对齐）中拯救了出来。 很好，Flexbox 确实实现了这个目标。 但掌握新的弹</description>
    </item>
    
    <item>
      <title>玩转 grid 布局</title>
      <link>/frontend/css/layout/css-grid/</link>
      <pubDate>Sat, 17 Mar 2018 11:06:35 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/layout/css-grid/</guid>
      <description>边玩游戏边学 Grid 布局</description>
    </item>
    
    <item>
      <title>移动端适配</title>
      <link>/frontend/html/html-mobile/</link>
      <pubDate>Tue, 08 Nov 2016 16:47:11 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/html-mobile/</guid>
      <description>HTML5 元素 ## 对 HTML 的设置 &amp;lt;!DOCTYPE html&amp;gt; 设置正确的浏览器渲染模式 &amp;lt;html lang=&amp;quot;zh-cmn-Hans&amp;quot;&amp;gt; 设置页面内容的语言为 简体中文； &amp;lt;html lang=&amp;quot;zh-cmn-Hant&amp;quot;&amp;gt; 为繁体中文； &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; 为英文 &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; 设置编码格式为 UTF-8 &amp;lt;meta name=&amp;quot;format-detection&amp;quot; content=&amp;quot;telephone=no&amp;quot; /&amp;gt; 当该 HTML</description>
    </item>
    
    <item>
      <title>CSS中的BFC</title>
      <link>/frontend/css/css%E4%B8%AD%E7%9A%84bfc/</link>
      <pubDate>Wed, 07 Sep 2016 18:20:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css%E4%B8%AD%E7%9A%84bfc/</guid>
      <description>&lt;h3 id=&#34;bfc-是什么&#34;&gt;BFC 是什么？&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BFC&lt;/code&gt; (&lt;code&gt;Block Formatting Contexts&lt;/code&gt;) 即块级格式化上下文，从样式上看，它与普通的容器没有什么区别，但是从功能上，&lt;code&gt;BFC&lt;/code&gt; 可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 &lt;code&gt;BFC&lt;/code&gt; 具有普通容器没有的一些特性，例如可以包含浮动元素，使到它可以包含浮动元素，从而防止出现高度塌陷的问题&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>CSS系统学习笔记回顾</title>
      <link>/frontend/html/div-css%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9E%E9%A1%BE/</link>
      <pubDate>Tue, 06 Sep 2016 18:24:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/html/div-css%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9E%E9%A1%BE/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tags-css&#34;&gt;tags: [css]&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-html&#34;&gt;第一部分 HTML&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92%E5%92%8C%E5%89%8D%E6%99%AF&#34;&gt;#### 第一章 职业规划和前景&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%BA%8C%E7%AB%A0-html%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84&#34;&gt;#### 第二章 html基本结构&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%89%E7%AB%A0-html%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE&#34;&gt;第三章 html基本标签&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%9B%9B%E7%AB%A0-img%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE%E4%B8%8E%E8%B7%AF%E5%BE%84&#34;&gt;#### 第四章 img图片标签与路径&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%B8%89%E7%A7%8D%E5%88%97%E8%A1%A8%E7%9A%84%E8%AE%B2%E8%A7%A3&#34;&gt;#### 第五章 三种列表的讲解&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%85%AD%E7%AB%A0-form%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E4%B8%8A&#34;&gt;#### 第六章 Form表单元素(上)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%83%E7%AB%A0-%E8%A1%A8%E5%8D%95%E5%92%8C%E8%A1%A8%E6%A0%BC%E4%B8%8B&#34;&gt;#### 第七章 表单和表格(下)&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-css&#34;&gt;第二部分 CSS&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%85%AB%E7%AB%A0-css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86&#34;&gt;#### 第八章 css基础知识&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B9%9D%E7%AB%A0-css%E9%80%89%E6%8B%A9%E5%99%A8%E4%B8%8A&#34;&gt;第九章 css选择器(上)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E7%AB%A0-css%E9%80%89%E6%8B%A9%E5%99%A8%E4%B8%8B&#34;&gt;#### 第十章 css选择器(下)&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0-%E8%83%8C%E6%99%AF%E5%B1%9E%E6%80%A7&#34;&gt;#### 第十一章 背景属性&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0-%E6%96%87%E5%AD%97%E6%96%87%E6%9C%AC%E5%B1%9E%E6%80%A7&#34;&gt;#### 第十二章 文字文本属性&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B&#34;&gt;#### 第十三章 盒子模型&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E5%9B%9B%E7%AB%A0-%E5%9D%97%E5%85%83%E7%B4%A0%E8%A1%8C%E5%85%83%E7%B4%A0%E4%B8%8E%E6%BA%A2%E5%87%BA&#34;&gt;#### 第十四章 块元素、行元素与溢出&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%BA%94%E7%AB%A0-%E5%AE%9A%E4%BD%8D&#34;&gt;#### 第十五章 定位&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E5%85%AD%E7%AB%A0-%E6%A1%86%E6%9E%B6&#34;&gt;#### 第十六章 框架&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E5%8D%81%E4%B8%83%E7%AB%A0-css%E9%AB%98%E7%BA%A7%E5%B1%9E%E6%80%A7&#34;&gt;#### 第十七章 css高级属性&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86-%E9%99%84%E5%BD%95&#34;&gt;第三部分 附录&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%B8%80-div%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83&#34;&gt;附录一 DIV命名规范&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%BA%8C-css%E7%B2%BE%E7%81%B5&#34;&gt;附录二 CSS精灵&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%B8%89-%E4%B8%80%E4%BA%9Btips%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88&#34;&gt;#### 附录三 一些tips解决方案&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%A1%B5%E9%9D%A2%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5&#34;&gt;##### 页面优化实践&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%86%99divcss-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%AF%86&#34;&gt;##### 写DIV+CSS 的一些常识&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5&#34;&gt;##### 常用代码片段&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93&#34;&gt;##### 一些总结&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5&#34;&gt;##### 一些概念&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%B9%E6%A1%88%E8%8D%9F%E8%90%83%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB&#34;&gt;##### 方案荟萃扩展阅读&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E5%9B%9B-%E9%83%A8%E5%88%86%E5%B7%A5%E5%85%B7%E8%B5%84%E6%BA%90&#34;&gt;#### 附录四 部分工具资源&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%BA%94-%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83&#34;&gt;#### 附录五 编码规范&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E5%85%AD-%E8%BF%9B%E9%98%B6%E5%AD%A6%E4%B9%A0&#34;&gt;#### 附录六 进阶学习&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E4%B8%83-%E5%85%B6%E4%BB%96%E8%B5%84%E6%BA%90&#34;&gt;#### 附录七 其他资源&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%99%84%E5%BD%95%E5%85%AB-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;#### 附录八 常见问题&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;#%E5%85%B6%E4%BB%96&#34;&gt;#### 其他&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;第一部分-html&#34;&gt;第一部分 HTML&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;第一章-职业规划和前景&#34;&gt;第一章 职业规划和前景&lt;/h4&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;职业方向规划定位：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt;前端开发工程师&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt;网站架构师&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;自己创业&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;转岗管理或其他&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>CSS块级元素和行内元素</title>
      <link>/frontend/css/css%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</link>
      <pubDate>Wed, 16 Mar 2016 16:24:08 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</guid>
      <description>&lt;p&gt;&lt;code&gt;HTML&lt;/code&gt;中的元素可分为两种类型：块级元素和行级元素。这些元素的类型是通过文档类型定义（DTD）来指明。块级元素：显示在一块内，会自动换行，元素会从上到下垂直排列，各自占一行，如&lt;code&gt;p&lt;/code&gt;,&lt;code&gt;ul&lt;/code&gt;,&lt;code&gt;form&lt;/code&gt;,&lt;code&gt;div&lt;/code&gt;等标签元素。行内元素：元素在一行内水平排列，高度由元素的内容决定，&lt;code&gt;height&lt;/code&gt;属性不起作用，如span,input等元素。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS 测试</title>
      <link>/post/reship/css-test/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/post/reship/css-test/</guid>
      <description>预备知识 grunt PhantomJS CasperJS 我们要谈的不是TDD，而是一种CSS测试的形式，叫做Visual Regression Testing，使得我们可以从视觉上比较网站正确的版本(ba</description>
    </item>
    
    <item>
      <title>当内容超出容器宽度时做何处理? text-overflow</title>
      <link>/frontend/css/09-css-text-overflow/</link>
      <pubDate>Mon, 09 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/09-css-text-overflow/</guid>
      <description>text-overflow 的作用: text-overflow 用来声明：当内容超出容器宽度时做何处理。 text-overflow 语法: text-overflow: [ clip | ellipsis | &amp;lt;string&amp;gt; ] 简单的说明：text-overflow的默认值为clip，即当内</description>
    </item>
    
    <item>
      <title>第八天，谈谈【旋转和翻转】</title>
      <link>/frontend/css/08-css-rotate-and-scale/</link>
      <pubDate>Sun, 08 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/08-css-rotate-and-scale/</guid>
      <description>在切图过程中，经常会碰到一些小图标，比如各种方向的箭头等。这时我们就可以利用旋转和翻转，来减少切图工作量，同时也能减小图片体积。 我们有下面的</description>
    </item>
    
    <item>
      <title>第七天，谈谈【shrink-to-fit】</title>
      <link>/frontend/css/07-css-shrink-to-fit/</link>
      <pubDate>Sat, 07 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/07-css-shrink-to-fit/</guid>
      <description>什么是 shrink-to-fit shrink-to-fit指的是块级元素只占据内容所需要的宽度。Shrink-To-Fit，字面意思就是收缩包围。 为什么需要shri</description>
    </item>
    
    <item>
      <title>行级块元素 display:inline-block</title>
      <link>/frontend/css/css-display-inline-block/</link>
      <pubDate>Fri, 06 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/css-display-inline-block/</guid>
      <description>对一个html元素应用display:inline-block会产生怎样的效果？ 官方文档是这样说的： inline-block This value causes an element to generate an inline-level block container. The inside of an inline-block is formatted as</description>
    </item>
    
    <item>
      <title>第二天，谈谈【line-height】</title>
      <link>/frontend/css/02-css-lineheight/</link>
      <pubDate>Mon, 02 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/02-css-lineheight/</guid>
      <description>先来看MDN上的总结： On block level elements, the line-height CSS property specifies the minimal height of line boxes within the element. On non-replaced inline elements, line-height specifies the height that is used in the calculation of the line box height. On replaced inline elements, like buttons or other input element, line-height has no effect.[1] 也就是说： 在*b</description>
    </item>
    
    <item>
      <title>第一天，谈谈【透明】</title>
      <link>/frontend/css/01-css-opacity/</link>
      <pubDate>Sun, 01 Dec 2013 00:00:00 +0000</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/frontend/css/01-css-opacity/</guid>
      <description>提到透明，大家首先会想到opacity。先来看测试用例一： .case{ /*省略无关样式*/ background-color: red; opacity: 0.5; } 在支持opacity的浏览器里效果如下： opaci</description>
    </item>
    
  </channel>
</rss>