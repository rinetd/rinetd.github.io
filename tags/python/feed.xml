<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 时光小栈</title>
    <link>/tags/python/</link>
    <description>Recent content in python on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 06 Nov 2019 11:05:22 +0800</lastBuildDate>
    
	<atom:link href="/tags/python/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python os split</title>
      <link>/language/python/python-os-split/</link>
      <pubDate>Wed, 06 Nov 2019 11:05:22 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-os-split/</guid>
      <description># -*- coding:utf-8 -*- &amp;quot;&amp;quot;&amp;quot; @author:lei &amp;quot;&amp;quot;&amp;quot; import os #os.path.join() 将分离的部分合成一个整体 filename=os.path.join(&#39;/home/ubuntu/python_coding&#39;,&#39;split_func&#39;) print filename #输出为：/home/ubuntu/python_coding/split_func #os</description>
    </item>
    
    <item>
      <title>python bytes string</title>
      <link>/language/python/python-bytes-string/</link>
      <pubDate>Fri, 01 Nov 2019 18:32:21 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-bytes-string/</guid>
      <description>1、bytes主要是给在计算机看的，string主要是给人看的 2、中间有个桥梁就是编码规则，现在大趋势是utf8 3、bytes对象是二进制，</description>
    </item>
    
    <item>
      <title>谈谈python2,3中的str、unicode</title>
      <link>/language/python/python-string/</link>
      <pubDate>Thu, 31 Oct 2019 21:02:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-string/</guid>
      <description>谈谈python2,3中的str、unicode - 简书 本文首先对Unicode与UTF-8的区别做一个解释，如果已了解，可跳过该部分。然后会</description>
    </item>
    
    <item>
      <title>python xml</title>
      <link>/language/python/python-xml/</link>
      <pubDate>Thu, 31 Oct 2019 20:34:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-xml/</guid>
      <description>ET读取xml try: import xml.etree.cElementTree as ET C实现速度快一点的xml.etree.cElementTree except ImportError: import xml.etree.ElementTree as ET import xml.etree.ElementTree as ET----------导入xml模</description>
    </item>
    
    <item>
      <title>python super</title>
      <link>/language/python/python-super/</link>
      <pubDate>Mon, 30 Sep 2019 17:25:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-super/</guid>
      <description>Python super 详解</description>
    </item>
    
    <item>
      <title>python defaultdict</title>
      <link>/language/python/python-defaultdict/</link>
      <pubDate>Mon, 30 Sep 2019 17:08:19 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-defaultdict/</guid>
      <description>理解 Python 语言中的 defaultdict - 团子的小窝</description>
    </item>
    
    <item>
      <title>python loadimage</title>
      <link>/language/python/python-loadimage/</link>
      <pubDate>Sat, 21 Sep 2019 15:22:49 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-loadimage/</guid>
      <description>#定义图片数据集加载函数load_image def load_image(data_dir): labels = [] images = [] for d in directories: label_dir = os.path.join(data_dir, d) file_names = [os.path.join(label_dir, f) for f in os.listdir(label_dir) if f.endswith(&#39;.ppm&#39;)] for f in file_names: # 以指定的尺寸读取图像数据 image_data = image.load_img(f, target_size=(config.img_rows, config.img_cols))</description>
    </item>
    
    <item>
      <title>python str rbuf</title>
      <link>/language/python/python-str-rbuf/</link>
      <pubDate>Wed, 18 Sep 2019 14:40:33 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-str-rbuf/</guid>
      <description>r/R: 非转义的原始字符串 与普通字符相比，其他相对特殊的字符，其中可能包含转义字符，即那些，反斜杠加上对应字母，表示对应的特殊含义的，比如最常见的</description>
    </item>
    
    <item>
      <title>python class</title>
      <link>/language/python/python-class/</link>
      <pubDate>Wed, 18 Sep 2019 09:20:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-class/</guid>
      <description>正确理解Python中的 @staticmethod@classmethod方法 - 知乎</description>
    </item>
    
    <item>
      <title>python scrapy img</title>
      <link>/language/python/python-scrapy-img/</link>
      <pubDate>Mon, 16 Sep 2019 10:52:11 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-scrapy-img/</guid>
      <description>#coding=utf-8 import requests from bs4 import BeautifulSoup import os import time url=&amp;quot;https://www.tooopen.com/search/logo.aspx?cate=0&amp;amp;type=0&amp;amp;sort=1&amp;amp;level=0&amp;amp;color=0&amp;amp;copyright=0&amp;amp;page=1&amp;quot; ref=&amp;quot;https://www.tooopen.com/search/logo.aspx&amp;quot; #http请求头 referer = { &#39;User-Agent&#39;: &#39;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)&#39;, &#39;Referer&#39;: ref } #此请求头破解盗链 #保存地址 path = &#39;./data/&#39; #记录文件 data = &#39;./dl/.data&#39; #读取保存记录 def get_log(file): page</description>
    </item>
    
    <item>
      <title>python cuda</title>
      <link>/language/python/python-cuda/</link>
      <pubDate>Thu, 12 Sep 2019 08:36:05 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-cuda/</guid>
      <description>conda的安装与使用（2019-6-28更新） - 简书 清华大学开源软件镜像站 | Tsinghua... Anaconda 配置镜像 conda config --show 查看配置项 配置镜像(安装一次，镜像也只配置一</description>
    </item>
    
    <item>
      <title>python package module</title>
      <link>/language/python/python-package-module/</link>
      <pubDate>Sat, 23 Mar 2019 09:18:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-package-module/</guid>
      <description>Python模块导入与包构建最佳实践 - 简书</description>
    </item>
    
    <item>
      <title>python pytest</title>
      <link>/language/python/python-pytest/</link>
      <pubDate>Fri, 01 Mar 2019 07:14:04 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-pytest/</guid>
      <description>本文由 简悦 SimpRead 转码， 原文地址 https://www.jianshu.com/p/b825addb4e16 Pytest 学习笔记 记录下 pytest 官方文档的阅读笔记，以便后续参考使用。非完整版，个人理解为主，难免有误，望理解。 安装与快速使用</description>
    </item>
    
    <item>
      <title>python None</title>
      <link>/language/python/python-none/</link>
      <pubDate>Mon, 21 Jan 2019 14:07:41 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-none/</guid>
      <description>Python中对变量是否为None的判断 - 满月青灰 - 博客园 Python中对变量是否为None的判断 三种主要的写法有： 第一种：if X is None; 第二种</description>
    </item>
    
    <item>
      <title>py string nlp</title>
      <link>/language/python/py-string-nlp/</link>
      <pubDate>Thu, 27 Dec 2018 11:08:15 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/py-string-nlp/</guid>
      <description>https://github.com/fighting41love/funNLP 最近需要从文本中抽取结构化信息，用到了很多github上的包，遂整理了一下，后续会不断更新。 很多包非常有趣，值得收藏，满足大家的收集癖！ 如</description>
    </item>
    
    <item>
      <title>py string similary</title>
      <link>/language/python/py-string-similary/</link>
      <pubDate>Thu, 27 Dec 2018 10:56:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/py-string-similary/</guid>
      <description>自然语言处理中句子相似度计算的几种方法 luozhouyang/python-string-similarity: 最近因为工作需要，使用Python实现了常用的字符串相似度算法，一共超过十种。列举如下： Levenshtein NormalizedLevenshtein WeightedLevenshtein DamerauLevenshtein OptimalStringAlignment Jarowinkler</description>
    </item>
    
    <item>
      <title>pandas</title>
      <link>/language/python/pandas/</link>
      <pubDate>Sat, 17 Nov 2018 14:39:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/pandas/</guid>
      <description>NumPy 与深度学习 pandas删除行删除列，增加行增加列 - GUXH - 博客园 df1 = pd.DataFrame(np.ones((3,4))*0, columns=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]) #concat纵向合并 res = pd.concat([df1, df2, df3], axis=0) 安装与导入 通过pip进行安装: pip install pandas</description>
    </item>
    
    <item>
      <title>二叉树遍历</title>
      <link>/language/python/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</link>
      <pubDate>Sat, 17 Nov 2018 11:53:48 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</guid>
      <description>二叉树是一种非常重要的数据结构，很多其它数据结构都是基于二叉树的基础演变而来的。对于二叉树，有深度遍历和广度遍历， 深度遍历有前序、中序以及后</description>
    </item>
    
    <item>
      <title>Python3 从文件读取操作</title>
      <link>/language/python/py3-readfile/</link>
      <pubDate>Fri, 09 Mar 2018 18:08:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/py3-readfile/</guid>
      <description>转Python3从文件中读取数据 Python3有三种从文件中读取数据的方法： read() 读取整个文件内容；占用内存多 readline() 每次读取并返回一行数据；读取速度</description>
    </item>
    
    <item>
      <title>Python标准库 urllib2 的使用</title>
      <link>/language/python/python-urlib2/</link>
      <pubDate>Fri, 09 Mar 2018 18:08:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-urlib2/</guid>
      <description>1、Proxy 的设置 urllib2 默认会使用环境变量 http_proxy 来设置 HTTP Proxy。 如果想在程序中明确控制 Proxy，而不受环境变量的影响，可以使用下面的方式 import urllib2</description>
    </item>
    
    <item>
      <title>Python默认模块 os 和 shutil 实用函数</title>
      <link>/language/python/python-os-shutil.1/</link>
      <pubDate>Fri, 09 Mar 2018 18:08:18 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-os-shutil.1/</guid>
      <description>os.sep 可以取代操作系统特定的路径分隔符。windows下为 &#39;\&#39; os.name 字符串指示你正在使用的平台。比如对于Windows，它是&#39;nt&#39;，而对于Linux</description>
    </item>
    
    <item>
      <title>Python 资源大全中文版</title>
      <link>/language/awesome/awesome-python-cn/</link>
      <pubDate>Tue, 29 Mar 2016 20:57:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/awesome/awesome-python-cn/</guid>
      <description>Python 资源大全中文版 我想很多程序员应该记得 GitHub 上有一个 Awesome - XXX 系列的资源整理。awesome-python 是 vinta 发起维护的 Python 资源列表，内容包括：Web</description>
    </item>
    
    <item>
      <title>python</title>
      <link>/language/python/python-coding/</link>
      <pubDate>Thu, 24 Mar 2016 14:55:34 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-coding/</guid>
      <description>用pyenv和virtualenv搭建单机多版本python虚拟开发环境 sudo apt-get install python python-pip 设置python编码 Python编码介绍——encode和</description>
    </item>
    
    <item>
      <title>python</title>
      <link>/language/python/python/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python/</guid>
      <description>Book python3-cookbook 3.0.0 文档 利用 Python 进行数据分析 · 第 2 版 雨敲窗Python python开发大全、系列文章、精品教程 - 全栈工程师开发手册（原创） - CSDN博客 Py</description>
    </item>
    
    <item>
      <title>python 编码</title>
      <link>/language/python/python-encode-decode/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-encode-decode/</guid>
      <description>u = u&amp;quot;中文&amp;quot; u u&#39;\u4e2d\u6587&#39; s = &amp;quot;中文&amp;quot; s &#39;\xe4\xb8\xad\xe6\x96\x87&#39; s.decode(&amp;quot;utf8&amp;quot;) u&#39;\u4e2d\u6587&#39; u.encode(&amp;quot;gbk&amp;quot;) &#39;\xd6\xd0\xce\xc4&#39; s.encode(&amp;quot;gbk&amp;quot;) Traceback (most recent call last): File &amp;quot;&amp;quot;, line 1, in UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe4 in position 0: ordinal not in range(128) u.decode(&amp;quot;utf8&amp;quot;) Traceback (most recent</description>
    </item>
    
    <item>
      <title>python中，我们使用decode()和encode()来进行解码和编码</title>
      <link>/language/python/python-encode/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/python-encode/</guid>
      <description>总结： 1.为了处理英文字符，产生了ASCII码。 2.为了处理中文字符，产生了GB2312。 3.为了处理各国字符，产生了Unicode。 4.为</description>
    </item>
    
  </channel>
</rss>