<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>curd on 时光小栈</title>
    <link>/tags/curd/</link>
    <description>Recent content in curd on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 04 Oct 2016 04:15:26 +0800</lastBuildDate>
    
	<atom:link href="/tags/curd/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go语言 sql增删改查</title>
      <link>/language/golang/db/sql-demo/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/golang/db/sql-demo/</guid>
      <description>获取所有列 rows, err := db.Query(&amp;quot;SELECT * FROM Players&amp;quot;) defer rows.Close() if err != nil { fmt.Println(err, &amp;quot;ruh roh&amp;quot;) } for rows.Next() { columns, err := rows.Columns() if err != nil { fmt.Print(err) break } for _, c := range columns { fmt.Println(rows.Scan(&amp;amp;c)) } } package main import ( &amp;quot;database/sql&amp;quot; &amp;quot;fmt&amp;quot; _ &amp;quot;github.com/go-sql-driver/mysql&amp;quot; ) func main() { insert() } func insert() { db, err := sql.Open(&amp;quot;mysql&amp;quot;, &amp;quot;root:000000@/test?charset=utf8&amp;quot;)</description>
    </item>
    
    <item>
      <title>Go语言 sql增删改查</title>
      <link>/language/golang/db/sql-query/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/golang/db/sql-query/</guid>
      <description>I.数据库查询 query(prepare, args) query() 我们了解了数据库连接与连接池。拿到了连接当然就是为了跟数据库交互。对于数据库交互，无怪乎两类操作，读和写。其中怎么读，怎</description>
    </item>
    
    <item>
      <title>golang查询MySQL中datetime字段问题</title>
      <link>/language/golang/db/go-mysql-datetime/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/golang/db/go-mysql-datetime/</guid>
      <description>https://studygolang.com/articles/04318 以前一直用 int 存储 unix 时间字段，这次和其他组交互时出现在时间问题。长话短说，这和 Python 查询 MySQL 一样，对于 datetime 默认会使用 UTC 时间，但是国内是东八区，也就是</description>
    </item>
    
  </channel>
</rss>