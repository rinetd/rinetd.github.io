<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on 时光小栈</title>
    <link>/tags/nginx/</link>
    <description>Recent content in nginx on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 20 Feb 2019 20:54:19 +0800</lastBuildDate>
    
	<atom:link href="/tags/nginx/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>nginx c10m</title>
      <link>/linux/nginx/nginx-c10m/</link>
      <pubDate>Wed, 20 Feb 2019 20:54:19 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-c10m/</guid>
      <description>原文地址 http://www.ipcpu.com/2018/06/nginx-high-connection/ 高并发状态下 nginx 的配置 (20 万并发).md 一、概述 最近业务量比较大，nginx 出现了十六七万将近二十万并发（ESTABLISH 连接数）的</description>
    </item>
    
    <item>
      <title>nginx log_format</title>
      <link>/linux/nginx/nginx-log_format/</link>
      <pubDate>Sun, 27 Jan 2019 10:26:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-log_format/</guid>
      <description>nginx日志分析命令 统计IP访问量 awk &#39;{print $1}&#39; access.log | sort -n | uniq | wc -l 查看某一时间段的IP访问量(4-5点) grep &amp;quot;07/Apr/2017:0[4-5]&amp;quot; access.log | awk &#39;{print $1}&#39; | sort | uniq -c| sort -nr | wc -l 查看访问</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx</title>
      <link>/linux/nginx/nginx-server_name/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-server_name/</guid>
      <description>Server names nginx 的 server names - 简书 目录： 通配符主机名 正则表达式主机名 混杂主机名 对主机名的优化 兼容性 nginx 的 server names 由 server_name 指令定义，server name 是 nginx 用于选择以哪个 server 区</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx</title>
      <link>/linux/nginx/nginx-status/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-status/</guid>
      <description>location /status { // 查看nginx当前的状态情况,需要模块 “--with-http_stub_status_module”支持 stub_status on; access_log /usr/local/nginx/logs/status.log; auth_basic &amp;quot;NginxStatus&amp;quot;; } #设定查看N</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx</title>
      <link>/linux/nginx/nginx/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx/</guid>
      <description>Nginx怎样部署SSL证书 nginx运维与架构 nginx服务器安装及配置文件详解 Nginx 配置文件详解 Nginx RTMP 模块 nginx-rtmp-module 指令详解 使用Nginx+FFMPE</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx basicauth</title>
      <link>/linux/nginx/nginx-basicauth-htpasswd/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-basicauth-htpasswd/</guid>
      <description>生成htpasswd密码 openssl passwd printf &amp;quot;hr:$(openssl passwd -crypt bpbqc)\n&amp;quot; &amp;gt;&amp;gt;htpasswd printf &amp;quot;elastic:$(openssl passwd -crypt changeme)\n&amp;quot; &amp;gt;htpasswd_elastic cat /etc/nginx/htpasswd ttlsa:xyJkVhXGAZ8tM htpasswd 生成 htpasswd -c -d pass_file username password #-c 表示生成文件，-d 是以 crypt 加密。 htpasswd -b /etc/nginx/htpasswd hyc 123456 #去掉-c选项，添加第</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx internal</title>
      <link>/linux/nginx/nginx-internal/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-internal/</guid>
      <description>nginx 上这个功能叫做 X-Accel-Redirect 。 假设下载文件的路径在 /path/to/files，比如有 /path/to/files/test1.txt 可以在 nginx 里配置 location /down { internal; alias /path/to/files/; } internal 选项是这个路径只能在 nginx 内部访问。</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx proxy</title>
      <link>/linux/nginx/nginx-proxy/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-proxy/</guid>
      <description>【译】Ngnix实现一个缓存和缩略处理的反向代理服务器 - QueenKing - SegmentFault Linux 运维 » Nginx 代理 配置详解 proxy_rediect 用于修改[nginx代理服务器] 发给-&amp;gt;[浏览器</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx proxy</title>
      <link>/linux/nginx/nginx-proxy%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-proxy%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/</guid>
      <description>location / { # 包含关键词 &#39;计算机&#39; 重定向至 /test rewrite ^.*计算机.*$ /test last; # 通用透明代理 proxy_pass $scheme://$host$request_uri; proxy_set_header Host $http_host; proxy_buffers 256 4k; proxy_max_temp_file_size 0k; }</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx proxy cache</title>
      <link>/linux/nginx/nginx-proxy-buffer/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-proxy-buffer/</guid>
      <description>【译】Ngnix实现一个缓存和缩略处理的反向代理服务器 - QueenKing - SegmentFault Linux 运维 » Nginx 代理 配置详解 2 Proxy Buffer详解 proxy buffer启用以后，nginx服</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx proxy cache</title>
      <link>/linux/nginx/nginx-proxy-cache/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-proxy-cache/</guid>
      <description>【译】Ngnix实现一个缓存和缩略处理的反向代理服务器 - QueenKing - SegmentFault Linux 运维 » Nginx 代理 配置详解 3.Proxy Cache配置详解 Proxy Cache机制依赖于Proxy Bu</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx return</title>
      <link>/linux/nginx/nginx-return/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-return/</guid>
      <description>server { server_name foo.com; return 301 http://$server_name$request_uri; } server { listen 80; server_name nowamagic.net www.nowamagic.net; if ($host != &#39;www.nowamagic.net&#39; ) { rewrite ^/(.*)$ http://www.nowamagic.net/$1 permanent; rewrite ^(.*) http://www.nowamagic.net$1 permanent; } } return 301 /upgrade; nginx 升级页面 location /upgrade { add_header Content-Type &#39;text/html; charset=utf-8&#39;; return 200 &amp;quot;系统正在更新,请稍等10分钟后重</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx rewrite</title>
      <link>/linux/nginx/nginx-rewrite/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-rewrite/</guid>
      <description>ngx_http_rewrite_module 模块用来使用正则表达式（PCRE）改变请求的URI，返回重定向，并有条件地选择配置。 指令执行顺序 首先顺序执行server块中的rewrit</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx sso</title>
      <link>/linux/nginx/nginx-auth_request-sso/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-auth_request-sso/</guid>
      <description>https://github.com/bnfinet/lasso go https://github.com/clems4ever/authelia nodejs https://heipei.github.io/2015/09/23/nginx-sso-Simple-offline-SSO-for-nginx/ # This is the vserver for the service that you want to protect. server { server_name secret.domain.dev; listen 8080; # It has one /auth URI which is the endpoint that protected # resources have to query. The /auth endpoint does not need the # request_body, but it obviously needs the IP, Host and # original URI for the request. location = /auth { internal; proxy_pass</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx try_files</title>
      <link>/linux/nginx/nginx-try_files/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-try_files/</guid>
      <description>try_files $uri/index.html $uri.html $uri @app; location @app { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_redirect off; proxy_pass http://unicorn; proxy_buffer_size 16k; proxy_busy_buffers_size 16k; } error_page 500 502 503 504 /500.html; Nginx的try_files指令使用实例 IT运维 编辑：优云小编 2016-05-01 459 次围观 0 blob.png Ng</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx 文件上传</title>
      <link>/linux/nginx/nginx-upload/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-upload/</guid>
      <description>使用Nginx Upload Module实现上传文件功能 - 降龙 | 记录生活与工作的点滴，分享旅行与技术的乐趣。</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx列出目录 autoindex</title>
      <link>/linux/nginx/nginx-proxy_pass%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%97%B6cookie%E4%B8%A2%E5%A4%B1%E7%9A%84%E9%97%AE%E9%A2%98-/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-proxy_pass%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%97%B6cookie%E4%B8%A2%E5%A4%B1%E7%9A%84%E9%97%AE%E9%A2%98-/</guid>
      <description>X-Forwarded-For: 203.0.113.195, 70.41.3.18, 150.172.238.178 location / { proxy_pass http://192.168.1.12:11080/v1/; proxy_cookie_path /v1/ /; #关键 proxy_set_header Host $host; proxy_set_header Remote_Addr $remote_addr; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } location / { proxy_pass http://127.0.0.1:8090/sso; proxy_cookie_path /sso/ /; proxy_cookie_path /sso /; } 如果只是host、端口转换，则cookie不会丢失。例如： location</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx列出目录 autoindex</title>
      <link>/linux/nginx/nginx-%E5%88%97%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-%E5%88%97%E7%9B%AE%E5%BD%95/</guid>
      <description>列出目录 autoindex Nginx默认是不允许列出整个目录的。如需此功能，打开nginx.conf文件，在location，server 或 http段中加入</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx列出目录 autoindex</title>
      <link>/linux/nginx/nginx-%E8%BF%94%E5%9B%9E%E7%9B%AE%E6%A0%87ip/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-%E8%BF%94%E5%9B%9E%E7%9B%AE%E6%A0%87ip/</guid>
      <description>location /ip { # 默认是文件格式 add_header Content-Type &#39;text/html; charset=utf-8&#39;; set $realip $remote_addr; if ($http_x_forwarded_for ~ &amp;quot;^(\d+\.\d+\.\d+\.\d+)&amp;quot;) { set $realip $1; } add_header Content-Type &#39;text/html; charset=utf-8&#39;; return 200 &amp;quot;$realip&amp;quot;; } #获取用户真实IP，并赋值给变量$clientRealIP map $http_x_forwarded_for $clientRealIp { &amp;quot;&amp;quot; $remote_addr;</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx列出目录 autoindex</title>
      <link>/linux/nginx/nginx-%E9%85%8D%E7%BD%AE.json%E6%96%87%E4%BB%B6%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-%E9%85%8D%E7%BD%AE.json%E6%96%87%E4%BB%B6%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%B8%8B%E8%BD%BD/</guid>
      <description>配置： conf/mime.types text/plain txt; =&amp;gt; text/plain txt json;</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx反向代理 Google</title>
      <link>/linux/nginx/nginx%E5%8F%8D%E4%BB%A3google/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx%E5%8F%8D%E4%BB%A3google/</guid>
      <description>分享一下我的 Nginx 反向代理 Google 以及草榴等的参数配置 - V2EX 1、这里监听了80和443端口，用了ssl加密，高大上。ssl证书是免费的，startssl</description>
    </item>
    
    <item>
      <title>Linux命令 Nginx反向代理 Google</title>
      <link>/linux/nginx/nginx%E8%AE%BE%E7%BD%AE%E9%A6%96%E9%A1%B5%E8%B7%B3%E8%BD%AC/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx%E8%AE%BE%E7%BD%AE%E9%A6%96%E9%A1%B5%E8%B7%B3%E8%BD%AC/</guid>
      <description>&amp;lt;html&amp;gt; &amp;lt;meta http-equiv=&amp;quot;refresh&amp;quot; content=&amp;quot;0;url=http://www.baidu.com/&amp;quot;&amp;gt; &amp;lt;/html&amp;gt; location /wmb { if ( $request_uri = &amp;quot;/wmb/&amp;quot; ) { rewrite &amp;quot;/wmb/&amp;quot; /wmb/weibo.html break; } proxy_redirect off; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://10.29.164.2:9008; }</description>
    </item>
    
    <item>
      <title>Linux命令 apache2</title>
      <link>/linux/nginx/apache2/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/apache2/</guid>
      <description>a2dissite yun.kljiyou.com.conf a2ensite yun.kljiyou.com.conf useradd -d /alidata1/web/yun.kljiyou.com/ -s /usr/sbin/nologin yunkljiyou service apache2 reload ipconfig /flushdns</description>
    </item>
    
    <item>
      <title>Nginx 根据访问终端跳转页面</title>
      <link>/linux/nginx/nginx-ua/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-ua/</guid>
      <description>关闭蜘蛛 server { if ($http_user_agent ~* &amp;quot;qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot&amp;quot;) { return 403; } } Nginx 根据访问终端跳转页面 server { server_name pytool.com; listen 80; access_log off; location / { if ($http_user_agent ~ &amp;quot;((MIDP)|(WAP)|(UP.Browser)|(Smartphone)|(Obigo)|(Mobile)|(AU.Browser)|(wxd.Mms)|(WxdB.Browser)|(CLDC)|(UP.Link)|(KM.Browser)|(UCWEB)|(SEMC-Browser)|(Mini)|(Symbian)|(Palm)|(Nokia)|(Panasonic)|(MOT)|(SonyEricsson)|(NEC)|(Alcatel)|(Ericsson)|(BENQ)|(BenQ)|(Amoisonic)|(Amoi)|(Capitel)|(PHILIPS)|(SAMSUNG)|(Lenovo)|(Mitsu)|(Motorola)|(SHARP)|(WAPPER)|(LG)|(EG900)|(CECT)|(Compal)|(kejian)|(Bird)|(BIRD)|(G900/V1.0)|(Arima)|(CTL)|(TDG)|(Daxian)|(DAXIAN)|(DBTEL)|(Eastcom)|(EASTCOM)|(PANTECH)|(Dopod)|(Haier)|(HAIER)|(KONKA)|(KEJIAN)|(LENOVO)|(Soutec)|(SOUTEC)|(SAGEM)|(SEC)|(SED)|(EMOL)|(INNO55)|(ZTE)|(iPhone)|(Android)|(Windows CE)|(Wget)|(Java)|(curl)|(Opera))&amp;quot;){ rewrite ^/(.*)$ http://221.180.20.228:8081/wap/$1 ; } if ( $http_user_agent ~ ^$ ) { rewrite ^/(.*)$ http://221.180.20.228:8081/wap/$1 ; } proxy_pass http://221.180.20.228:8080; } }</description>
    </item>
    
    <item>
      <title>Nginx替换文本内容sub_filter</title>
      <link>/linux/nginx/nginx-sub_filter%E6%9B%BF%E6%8D%A2%E5%86%85%E5%AE%B9/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx-sub_filter%E6%9B%BF%E6%8D%A2%E5%86%85%E5%AE%B9/</guid>
      <description>首先是示例： location / { sub_filter &#39;&#39;; sub_filter_once on; sub_filter_types text/html; } 解释： sub_filter 一行代码前面是需要替换的内容，后面单引号内是替换成的内容。 sub_filter_once 意思是只查找并替换一次。on是开启此功能</description>
    </item>
    
    <item>
      <title>Nginx配置性能优化</title>
      <link>/linux/nginx/nginx%E9%85%8D%E7%BD%AE%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx%E9%85%8D%E7%BD%AE%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
      <description>大多数的Nginx安装指南告诉你如下基础知识——通过apt-get安装，修改这里或那里的几行配置，好了，你已经有了一个Web服务器了。而且，</description>
    </item>
    
    <item>
      <title>nginx 支持apk ipa 禁止重命名为zip文件</title>
      <link>/linux/nginx/nginx%E6%94%AF%E6%8C%81apk-ipa-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx%E6%94%AF%E6%8C%81apk-ipa-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</guid>
      <description>.apk 和 .ipa分别是android应用和ios应用的扩展名。 如果在浏览器下载这些文件为后缀的文件时，会自动重命名为zip文件。 当然可以下载后手</description>
    </item>
    
    <item>
      <title>利用nginx泛域名解析配置二级域名和多域名</title>
      <link>/linux/nginx/nginx%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 26 Feb 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/linux/nginx/nginx%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</guid>
      <description>三级域名解析 比如 我有2个三级域名的表达式 *.a.sss.com *.b.sss.com 想转发到我实际程序的一个地址 http://www.sss.com/xxx/xxx.do?doma</description>
    </item>
    
  </channel>
</rss>