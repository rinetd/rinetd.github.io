<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on 时光小栈</title>
    <link>/tags/docker/</link>
    <description>Recent content in docker on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 11 May 2019 08:35:13 +0800</lastBuildDate>
    
	<atom:link href="/tags/docker/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>phpmyadmin</title>
      <link>/devops/docker/phpmyadmin/</link>
      <pubDate>Sat, 11 May 2019 08:35:13 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/phpmyadmin/</guid>
      <description>拉取镜像 搜索镜像 $ docker search phpmyadmin NAME DESCRIPTION STARS OFFICIAL AUTOMATED phpmyadmin/phpmyadmin A web interface for MySQL and MariaDB. 441 [OK] nazarpc/phpmyadmin phpMyAdmin as Docker container, based on o... 56 [OK] ...... 没有官方的镜像, 那就默认打星最多的 (默认标签:latest) $ docker</description>
    </item>
    
    <item>
      <title>docker network</title>
      <link>/devops/docker/docker-network/</link>
      <pubDate>Mon, 11 Feb 2019 16:37:20 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-network/</guid>
      <description>容器访问控制 · Docker —— 从入门到实践 容器访问控制 容器的访问控制，主要通过 Linux 上的 iptables 防火墙来进行管理和实现。iptables 是 Linux 上默认的防火墙软件，</description>
    </item>
    
    <item>
      <title>docker ssh</title>
      <link>/devops/docker/docker-ssh/</link>
      <pubDate>Tue, 22 Jan 2019 21:38:48 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-ssh/</guid>
      <description>结论: iptables 规则出了问题. 修改iptables规则即可 求教个阿里云专有网络 ssh -v 无法连接的问题: 实验环境:用的是阿里云的主机 ,网络为专有网络 问题描</description>
    </item>
    
    <item>
      <title>docker的安全机制capability</title>
      <link>/devops/docker/docker-capability/</link>
      <pubDate>Thu, 13 Dec 2018 13:33:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-capability/</guid>
      <description>Seccomp security profiles for Docker Docker作为最重视安全的容器技术之一，在很多方面都提供了强安全性的默认配置，其中包括：容器root用户的 Capability 能力限制、Secco</description>
    </item>
    
    <item>
      <title>Docker Swarm 集群管理工具 swirl</title>
      <link>/devops/docker/docker-swarm-swirl/</link>
      <pubDate>Thu, 15 Mar 2018 11:26:10 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-swarm-swirl/</guid>
      <description>SWIRL Swirl 是一个 Docker 管理工具，专注于 Swarm 集群。 Features Swarm 各组件管理，包括服务、网络、任务等 镜像与容器管理 Compose 管理与部署 服务状态监控（基于 Prometheus）</description>
    </item>
    
    <item>
      <title>Go Signal 优雅的关闭 docker</title>
      <link>/language/golang/go-signal/</link>
      <pubDate>Mon, 12 Mar 2018 09:01:43 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/golang/go-signal/</guid>
      <description>Linux Signal及Golang中的信号处理 - CSDN博客 最近把 Docker 官方的 Docker Reference 文档又读了一遍，发现有些细节深究起来，还是有很多可挖的。针对写 Doc</description>
    </item>
    
    <item>
      <title>Docker 资源限制之 CPU</title>
      <link>/devops/docker/docker-limit-cpu/</link>
      <pubDate>Mon, 12 Mar 2018 08:57:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-limit-cpu/</guid>
      <description>Docker 资源限制之内存 Docker 资源限制之 CPU Docker 资源限制之 IO 一、压测工具 同上文 Docker 资源限制之内存 使用 stress 测试。 二、CPU 测试 Runtime constraints on resources 目前 Docker 支持 CPU 资源限制选项 -c, --cpu-shares=0</description>
    </item>
    
    <item>
      <title>Docker 资源限制之 MEM</title>
      <link>/devops/docker/docker-limit-mem/</link>
      <pubDate>Mon, 12 Mar 2018 08:57:12 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-limit-mem/</guid>
      <description>Docker 资源限制之内存 Docker 资源限制之 CPU Docker 资源限制之 IO 一、压测工具 stress 通过如下 Dockerfile 构建简单的测试镜像 ➜ cat Dockerfile FROM ubuntu:latest RUN apt-get update &amp;amp;&amp;amp; \ apt-get install stress ➜ docker build -t ubuntu-stress:latest . 二、内存测试 Runtime constraints</description>
    </item>
    
    <item>
      <title>Prometheus exporter</title>
      <link>/post/prometheus/exporter/</link>
      <pubDate>Wed, 03 Jan 2018 17:17:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/post/prometheus/exporter/</guid>
      <description>git@github.com:roman-vynar/pmm.docker.git mysqld Exporter MySQL privileges: GRANT REPLICATION CLIENT, PROCESS, SUPER, SELECT ON . TO &#39;pmm&#39;@&#39;10.%&#39; IDENTIFIED BY &#39;percona2018&#39;; GRANT SELECT, UPDATE, DELETE, DROP ON performance_schema.* TO &#39;pmm&#39;@&#39;10.%&#39;; mysqld-exporter： docker rm -f db-exporter || true docker run -d --name db-exporter -p 9104:9104 -e DATA_SOURCE_NAME=&amp;quot;pmm:percona2018@(10.114.0.10:3306)/test&amp;quot; prom/mysqld-exporter go get github.com/prometheus/mysqld_exporter export DATA_SOURCE_NAME=&#39;login:password@(hostname:port)/&#39; mysqld_exporter Node Exporter 节点监</description>
    </item>
    
    <item>
      <title>Prometheus exporter</title>
      <link>/post/prometheus/exporter/</link>
      <pubDate>Wed, 03 Jan 2018 17:17:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/post/prometheus/exporter/</guid>
      <description>git@github.com:roman-vynar/pmm.docker.git mysqld Exporter MySQL privileges: GRANT REPLICATION CLIENT, PROCESS, SUPER, SELECT ON . TO &#39;pmm&#39;@&#39;%&#39; IDENTIFIED BY &#39;percona2018&#39;; GRANT SELECT, UPDATE, DELETE, DROP ON performance_schema.* TO &#39;pmm&#39;@&#39;%&#39; IDENTIFIED BY &#39;percona2018&#39;; mysqld-exporter： docker rm -f db-exporter || true docker run -d --restart=always --name db-exporter-10 -p 9104:9104 -e DATA_SOURCE_NAME=&amp;quot;pmm:percona2018@(10.114.0.10:3306)/&amp;quot; prom/mysqld-exporter go get github.com/prometheus/mysqld_exporter export DATA_SOURCE_NAME=&#39;login:password@(hostname:port)/&#39; mysqld_exporter Node</description>
    </item>
    
    <item>
      <title>Prometheus 可视化 grafana</title>
      <link>/post/prometheus/grafana/</link>
      <pubDate>Wed, 03 Jan 2018 17:17:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/post/prometheus/grafana/</guid>
      <description>使用Prometheus和Grafana定制监控报表 - Jason_hu的个人空间 - 开源中国 Grafana 的一些使用技巧 - 掘金 Install http://docs.grafana.org/installation/docker/ chown -R 472:472 /docker/grafana docker run --restart=always -d --name=grafana -p 3000:3000 -v</description>
    </item>
    
    <item>
      <title>Prometheus 详解</title>
      <link>/post/prometheus/prometheus/</link>
      <pubDate>Wed, 03 Jan 2018 17:17:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/post/prometheus/prometheus/</guid>
      <description>title: Prometheus以及如果实现跨环境监控 date: 2017-05-13 23:28:14 categories: Prometheus tags: [DevOps, Monitor, Prometheus] --- 笔者创建的一个实验性的项目项目prometheus-pusher用于实现垮网</description>
    </item>
    
    <item>
      <title>Prometheus 详解</title>
      <link>/post/prometheus/prometheus/</link>
      <pubDate>Wed, 03 Jan 2018 17:17:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/post/prometheus/prometheus/</guid>
      <description>git@github.com:roman-vynar/pmm.docker.git prometheus中文文档 Metrics类型 - prometheus-book PromQL操作符 采用prometheus取代传统的zabbix监控方案,虽不完善,但麻</description>
    </item>
    
    <item>
      <title>Prometheus数据查询DSL语言PromQL</title>
      <link>/post/prometheus/promql/</link>
      <pubDate>Wed, 03 Jan 2018 17:17:45 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/post/prometheus/promql/</guid>
      <description>PromQL内置函数 - prometheus-book 第2章 探索PromQL PromQL (Prometheus Query Language) 是 Prometheus 自己开发的数据查询 DSL 语言，语言表现力非常丰富，内置函数很多，在日常数据可视化以及r</description>
    </item>
    
    <item>
      <title>Docker基础-常用技巧</title>
      <link>/devops/docker/docker/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker/</guid>
      <description>docker 操作命令详解 Docker —— 从入门到实践 Docker 知识库 Docker 中文指南 Docker中文网站： 一小时Docker教程 Docker学习笔记之一，搭建一个JAVA To</description>
    </item>
    
    <item>
      <title>Linux命令 Docker</title>
      <link>/devops/docker/docker-network-bridge/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-network-bridge/</guid>
      <description>Docker：添加自定义网桥 Docker服务进程在启动的时候会生成一个名为docker0的网桥，容器默认都会挂载到该网桥下，但是我们可以通过</description>
    </item>
    
    <item>
      <title>Linux命令 Docker machine</title>
      <link>/devops/docker/docker-machine/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-machine/</guid>
      <description>Install docker-machine sudo curl -C - -Lk --socks5 127.0.0.1:1080 https://github.com/docker/machine/releases/download/v0.11.0/docker-machine-`uname -s-uname -m` -o /usr/local/bin/docker-machine sudo curl -C - -Lkx 127.0.0.1:8087 https://github.com/docker/machine/releases/download/v0.11.0/docker-machine-uname -s-uname -m-o /usr/local/bin/docker-machine &amp;amp;&amp;amp; \ sudo chmod +x /usr/local/bin/docker-machine ExecStart=/usr/bin/dockerd -D -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --storage-driver aufs --tls=true --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=generic swarm集群 --generic-engine-port: Port to use for Docker Daemon (Note: This flag will not work with boot2docker).</description>
    </item>
    
    <item>
      <title>Linux命令 Docker volume</title>
      <link>/devops/docker/docker-volume/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-volume/</guid>
      <description>Use Docker Engine plugins - Docker List of Docker Volume Drivers | Emerging Technology Deep Dive Volume Driver Supported Remote Storage Type Source Flocker OpenZFS, EMC Scaleio, NetApp ONTP, etc ClusterHQ Ceph RBD Ceph RBD Yahoo AcalephStorage VolPlugin EMC Rexray EMC Scaleio, XtremIO, AWS EBS, OpenStack Cinder EMC Convoy VFS, NFS Rancher Lab Glusterfs Glusterfs Docker NFS NFS Docker Azure File Service Azure File Service Microsoft iSCSI iSCSI Phoenix-io, Blockbridge</description>
    </item>
    
    <item>
      <title>Linux命令 Dockerfile</title>
      <link>/devops/docker/dockerfile/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/dockerfile/</guid>
      <description>http://www.cnblogs.com/52fhy/p/5638571.html dockerfile 剖析 ENV ENV 的就是给docker来设置变量的. 基本格式为: ENV name=jimmy age=18 修改环境变量 ENV PATH=$PATH:/user/bin 而通过 ENV 我们就可以完美的告诉docker 从这里开始,你就不能</description>
    </item>
    
    <item>
      <title>Linux命令 alpie</title>
      <link>/devops/docker/alpine/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/alpine/</guid>
      <description>ENV TIMEZONE Asia/Shanghai RUN ln -snf /usr/share/zoneinfo/$TIMEZONE /etc/localtime RUN echo $TIMEZONE &amp;gt; /etc/timezone RUN sed -i &#39;$a * soft nproc 65536 \ * hard nproc 65536 \ * soft nofile 65536 \ * hard nofile 65536 \ &#39; \ /etc/security/limits.conf #RUN sed -i &#39;$a # fs.file-max = 767246 # fs.aio-max-nr = 1048576 # &#39; /etc/sysctl.conf RUN sed -i &#39;$a ulimit -s 4096 \ ulimit -m 15728640 \ &#39; /etc/profile</description>
    </item>
    
    <item>
      <title>Linux命令 docker-compose</title>
      <link>/devops/docker/docker-compose/</link>
      <pubDate>Sat, 05 Mar 2016 15:30:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/docker/docker-compose/</guid>
      <description>官方参考文档 Compose file version 3 reference - Docker Documentation https://github.com/docker/compose/releases Docker Compose文件详解 V2 [](https://yq.aliyun.com/articles/69444) 1. Install docker-compose by pip apt-get install python-pip python-dev sudo pip install --upgrade pip pip install -U docker-compose 2. Install docker-compose by curl uname -s &amp;gt;&amp;gt; linux uname -m &amp;gt;&amp;gt; x86_64 curl -Lkx 127.0.0.1:8087 https://github.com/docker/compose/releases/download/1.12.0/docker-compose-`uname -s-uname -m`|sudo tee /usr/local/bin/docker-compose sudo curl</description>
    </item>
    
  </channel>
</rss>