<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>drone on 时光小栈</title>
    <link>/tags/drone/</link>
    <description>Recent content in drone on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 27 Mar 2018 17:25:09 +0800</lastBuildDate>
    
	<atom:link href="/tags/drone/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Drone 源码分析</title>
      <link>/devops/drone/drone-src-analyse/</link>
      <pubDate>Tue, 27 Mar 2018 17:25:09 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-src-analyse/</guid>
      <description>安装运行 Install go 1.9 or later Install dependencies go get -u github.com/drone/drone-ui/dist go get -u golang.org/x/net/context go get -u golang.org/x/net/context/ctxhttp go get -u github.com/golang/protobuf/proto go get -u github.com/golang/protobuf/protoc-gen-go Install binaries to $GOPATH/bin go install github.com/drone/drone/cmd/drone-agent go install github.com/drone/drone/cmd/drone-server 相关介绍 建议先仔细阅读官方文档http://readme.</description>
    </item>
    
    <item>
      <title>drone源码-gin-context实现多数据库系统</title>
      <link>/devops/drone/drone-src-gin-context/</link>
      <pubDate>Tue, 27 Mar 2018 17:25:09 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-src-gin-context/</guid>
      <description>多数据库 和 多remote是如何实现的？ drone-server启动时通过数据库配置参数 进行初始化数据库 --driver value database driver (default: &amp;quot;sqlite3&amp;quot;) [$DRONE_DATABASE_DRIVER, $DATAB ASE_DRIVER] --datasource value database driver configuration string (default: &amp;quot;drone.sqlite&amp;quot;) [$DRO NE_DATABASE_DATASOURCE,</description>
    </item>
    
    <item>
      <title>drone源码-事件触发通知的方式</title>
      <link>/devops/drone/drone-src-posthook/</link>
      <pubDate>Tue, 27 Mar 2018 17:25:09 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-src-posthook/</guid>
      <description>https://gogs.io/docs/features/webhook.html https://developer.github.com/v3/activity/events/types/#pushevent branch := strings.TrimPrefix( strings.TrimPrefix( hook.RefChanges[0].RefID, &amp;quot;refs/heads/&amp;quot;, ), &amp;quot;refs/tags/&amp;quot;, ) // Tag returns current tag for push event hook payload // This function returns empty string for any other events func (h *HookPayload) Tag() string { return strings.TrimPrefix(h.Ref, &amp;quot;refs/tags/&amp;quot;) } // Branch returns current branch for push event hook payload // This function returns empty string for any other events func (h *HookPayload) Branch() string { return strings.TrimPrefix(h.Ref, &amp;quot;refs/heads/&amp;quot;)</description>
    </item>
    
    <item>
      <title>drone源码-用户登录</title>
      <link>/devops/drone/drone-src-login/</link>
      <pubDate>Tue, 27 Mar 2018 17:25:09 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-src-login/</guid>
      <description>drone并未使用普通的session管理机制，而是使用jwt机制，并使用cookie传输，如下 user_sess=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjEuNDg5MDUxNjc5ZSswOSwidGV4dCI6InFqdyIsInR5cGUiOiJzZXNzIn0.SD1uwHk_E7yT-74sVXHwrLPKmonbwRtQTzT8cNPrupg _crsf=MTQ4NzkyMTYzOHxEdi1CQkFFQ180SUFBUkFCRUFBQU12LUNBQUVHYzNSeWFXNW5EQW9BQ0dOemNtWlRZV3gwQm5OMGNtbHVad3dTQUJCS2IzSk5lbVEwWlRaV05XdHdUalZrfHeLaVDFFSGOkLA19-4Y6G5gYkzJatkOn8oNnHj4eb6q; cli运行依赖的参数包括 DRONE_SERVER=http://${drone-server} ，server</description>
    </item>
    
    <item>
      <title>drone</title>
      <link>/devops/drone/drone/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone/</guid>
      <description>Drone 安装 # docker run -d --restart=always --name=drone-server-8 -p 8080:8000 -p 9000:9000 -e DRONE_VOLUME=/data:/data -e DRONE_HOST=http://drone.hangruan.cn -e DRONE_SECRET=changemypass -e DRONE_OPEN=true -e DRONE_ADMIN=root,rinetd -e DRONE_GOGS=true -e DRONE_GOGS_URL=&amp;quot;http://git.hangruan.cn&amp;quot; -v /docker/drone:/var/lib/drone drone/drone:0.8.1 # docker run -d --restart=always --name=drone-agent-8 --link drone-server-8:drone-server -e DRONE_SERVER=drone-server:9000 -e DRONE_SECRET=changemypass -e DRONE_DEBUG=true -v /var/run/docker.sock:/var/run/docker.sock drone/agent:0.8.1 # docker run -d --restart=always --name=drone-agent-8 -e DRONE_SERVER=10.30.216.58:9000 -e DRONE_SECRET=changemypass -e DRONE_DEBUG=true -v /var/run/docker.sock:/var/run/docker.sock drone/agent 常见问题处理 一.</description>
    </item>
    
    <item>
      <title>drone</title>
      <link>/devops/drone/drone%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%8F%92%E4%BB%B6/</guid>
      <description>go get github.com/UKHomeOffice/drone-trigger
drone repo ls
drone-trigger -r bianban/lybb</description>
    </item>
    
    <item>
      <title>drone</title>
      <link>/devops/drone/drone-variables/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-variables/</guid>
      <description>DRONE 变量在 github.com/cncd/pipeline/pipeline/frontend/metadata.go 中定义 params := map[string]string{ &amp;quot;CI&amp;quot;: &amp;quot;drone&amp;quot;, &amp;quot;DRONE&amp;quot;: &amp;quot;true&amp;quot;, &amp;quot;DRONE_ARCH&amp;quot;: &amp;quot;linux/amd64&amp;quot;, &amp;quot;DRONE_REPO&amp;quot;: m.Repo.Name, &amp;quot;DRONE_REPO_SCM&amp;quot;: &amp;quot;git&amp;quot;, &amp;quot;DRONE_REPO_OWNER&amp;quot;: owner, &amp;quot;DRONE_REPO_NAME&amp;quot;: name, &amp;quot;DRONE_REPO_LINK&amp;quot;: m.Repo.Link, &amp;quot;DRONE_REPO_BRANCH&amp;quot;: m.Curr.Commit.Branch, &amp;quot;DRONE_REPO_PRIVATE&amp;quot;: fmt.Sprintf(&amp;quot;%v&amp;quot;, m.Repo.Private), &amp;quot;DRONE_REPO_TRUSTED&amp;quot;: &amp;quot;false&amp;quot;, // TODO should this be added? &amp;quot;DRONE_REMOTE_URL&amp;quot;: m.Repo.Remote, &amp;quot;DRONE_COMMIT_SHA&amp;quot;: m.Curr.Commit.Sha, &amp;quot;DRONE_COMMIT_REF&amp;quot;: m.Curr.Commit.Ref, &amp;quot;DRONE_COMMIT_REFSPEC&amp;quot;: m.Curr.Commit.Refspec, &amp;quot;DRONE_COMMIT_BRANCH&amp;quot;: m.Curr.Commit.Branch, &amp;quot;DRONE_COMMIT_LINK&amp;quot;: m.Curr.Link, &amp;quot;DRONE_COMMIT_MESSAGE&amp;quot;: m.Curr.Commit.Message, &amp;quot;DRONE_COMMIT_AUTHOR&amp;quot;: m.Curr.Commit.Author.Name, &amp;quot;DRONE_COMMIT_AUTHOR_EMAIL&amp;quot;: m.Curr.Commit.Author.Email, &amp;quot;DRONE_COMMIT_AUTHOR_AVATAR&amp;quot;: m.Curr.Commit.Author.Avatar, &amp;quot;DRONE_BUILD_NUMBER&amp;quot;: fmt.Sprintf(&amp;quot;%d&amp;quot;, m.Curr.Number), &amp;quot;DRONE_PARENT_BUILD_NUMBER&amp;quot;: fmt.Sprintf(&amp;quot;%d&amp;quot;, m.Curr.Parent), &amp;quot;DRONE_BUILD_EVENT&amp;quot;: m.Curr.Event, &amp;quot;DRONE_BUILD_LINK&amp;quot;: fmt.Sprintf(&amp;quot;%s/%s/%d&amp;quot;,</description>
    </item>
    
    <item>
      <title>drone-android</title>
      <link>/devops/drone/drone-plugin-android%E6%94%AF%E6%8C%81/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-plugin-android%E6%94%AF%E6%8C%81/</guid>
      <description>william0wang/drone-android</description>
    </item>
    
    <item>
      <title>drone_java</title>
      <link>/devops/drone/drone-plugin-maven/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-plugin-maven/</guid>
      <description>matrix: include: - WORK_DIR: work SSH_HOST: b1.linyicn.com SSH_PORT: 22 DB_HOST: 123.56.199.52 DB_PORT: 3306 DB_DATABASE: notes DB_USER: notes DB_PASSWORD: yourpassword HTTP_PORT: 10000 TARGET_DIR: /docker/tomcat/webapps/ workspace: base: /go path: src/${DRONE_REPO_LINK:6} clone: git: image: plugins/git volumes: - /docker/src:/go/src pipeline: maven: image: maven group: ${DRONE_BRANCH} volumes: - /root/.m2:/root/.m2 - /docker/src:/go/src commands: - mvn clean package -P${DRONE_BRANCH} rsync: image: drillster/drone-rsync volumes: - /docker/src:/go/src hosts: ${SSH_HOST} port: ${SSH_PORT} user: root # key: ${PLUGIN_KEY} source: target/${DRONE_REPO_NAME}/ #</description>
    </item>
    
    <item>
      <title>drone在serices中访问文件</title>
      <link>/devops/drone/drone-pipeline-files/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-pipeline-files/</guid>
      <description>How to access files from services 在drone 执行构建的时候 会创建Service containers. 有时候我们需要这些services容器 可以访问我们源文件repository 中的</description>
    </item>
    
    <item>
      <title>drone支持PHP</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81php/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81php/</guid>
      <description>ETNA Alternance</description>
    </item>
    
    <item>
      <title>drone支持PHP</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81ssh/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81ssh/</guid>
      <description>加密变量设置3种方式 PASSWORD 123456 # 变量设置 SSH_KEY ${cat /path/to/.ssh/id_rsa} # 命令返回值 SSH_KEY @/path/to/.ssh/id_rsa # 文件内容 原理： 将script中的每个语句通过 &amp;amp;&amp;amp; 拼接为一条语句 多个子项之间用 &amp;amp;&amp;amp; 连接 每</description>
    </item>
    
    <item>
      <title>drone支持Rsync</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81rsync/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81rsync/</guid>
      <description>Drone plugin for deploying code using rsync Use the Rsync plugin to synchronize files to remote hosts, and execute arbitrary commands on those hosts. Config The following parameters are used to configure the plugin: user - user to log in as on the remote machines, defaults to root PLUGIN_USER RSYNC_USER key - private SSH key for the remote machines hosts - hostnames or ip-addresses of the remote machines port -</description>
    </item>
    
    <item>
      <title>drone支持ansible</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81ansible/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81ansible/</guid>
      <description>https://github.com/William-Yeh/docker-ansible.git rics3n/drone-ansible: Drone plugin for deploying with ansible rics3n/drone-ansible</description>
    </item>
    
    <item>
      <title>drone支持ansible</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81email/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81email/</guid>
      <description>https://github.com/Drillster/drone-email</description>
    </item>
    
    <item>
      <title>drone支持docker</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81docker/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81docker/</guid>
      <description>Docker | Plugins | Drone drone-plugins/drone-docker: Drone plugin for publishing Docker images</description>
    </item>
    
    <item>
      <title>drone支持gitter</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81gitter/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81gitter/</guid>
      <description>https://webhooks.gitter.im/e/f8c369697302929c7807 pipeline: gitter: image: plugins/gitter webhook: https://webhooks.gitter.im/e/f8c369697302929c7807 GITTER_WEBHOOK</description>
    </item>
    
    <item>
      <title>drone支持webhook</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81webhook/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81webhook/</guid>
      <description>https://github.com/drone-plugins/drone-webhook notify: webhook: debug: true method: POST auth: username: $$TOWER_USER password: $$TOWER_PASS urls: - http://tower.example.com/api/v1/job_templates/44/launch/ - http://tower.example.com/api/v1/job_templates/45/launch/ content_type: application/json template: &#39;{&amp;quot;name&amp;quot;: &amp;quot;project.deploy&amp;quot;,&amp;quot;extra_vars&amp;quot;: &amp;quot;{\&amp;quot;env\&amp;quot;: \&amp;quot;dev\&amp;quot;,\&amp;quot;git_branch\&amp;quot;: \&amp;quot;{{ build.branch }}\&amp;quot;,\&amp;quot;hipchat_token\&amp;quot;: \&amp;quot;$$HIPCHAT_TOKEN\&amp;quot;}&amp;quot;}&#39; https://github.com/zyclonite/drone-webhook pipeline: notify: image: zyclonite/drone-webhook webhook: https://your.domain.com/drone/hook token: bearer token for authentication skip_verify: false|true when: status: [ success, failure ]</description>
    </item>
    
    <item>
      <title>drone支持缓存</title>
      <link>/devops/drone/drone%E6%94%AF%E6%8C%81%E7%BC%93%E5%AD%98/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E6%94%AF%E6%8C%81%E7%BC%93%E5%AD%98/</guid>
      <description>Volume Cache | Plugins | Drone https://stackoverflow.com/questions/41412481/whether-drone-io-support-reusing-docker-container-for-build matrix: include: - REPO_URL: &amp;quot;git.yimengapp.com&amp;quot; LOCAL_VOLUME: &amp;quot;/var/www/yimeng&amp;quot; # pipeline: clone: image: plugins/git volumes: - ${LOCAL_VOLUME}/master:/drone/src/${REPO_URL}/${DRONE_REPO} when: branch: master clone: image: plugins/git volumes: - ${LOCAL_VOLUME}/release:/drone/src/${REPO_URL}/${DRONE_REPO} when: branch: release clone: image: plugins/git volumes: - ${LOCAL_VOLUME}/develop:/drone/src/${REPO_URL}/${DRONE_REPO} when: branch: [ dev, develop ] busybox: image: busybox volumes: - ${LOCAL_VOLUME}/:${LOCAL_VOLUME} commands: - if [ ${DRONE_BRANCH} == master ]; then chown -R 33:33 ${LOCAL_VOLUME}/master ; fi - if [</description>
    </item>
    
    <item>
      <title>drone自定义clone</title>
      <link>/devops/drone/drone%E8%87%AA%E5%AE%9A%E4%B9%89clone/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone%E8%87%AA%E5%AE%9A%E4%B9%89clone/</guid>
      <description>http://readme.drone.io/questions/how-to-customize-the-clone-stage/ http://readme.drone.io/0.5/usage/customize-clone/ https://github.com/drone-plugins/drone-git/blob/master/DOCS.md matrix: include: - REPO_URL: &amp;quot;git.yimengapp.com&amp;quot; LOCAL_VOLUME: &amp;quot;/var/www/yimeng&amp;quot; pipeline: clone: image: plugins/git volumes: - ${LOCAL_VOLUME}/master:/drone/src/${REPO_URL}/${DRONE_REPO} when: branch: master clone: image: plugins/git volumes: - ${LOCAL_VOLUME}/release:/drone/src/${REPO_URL}/${DRONE_REPO} when: branch: release clone: image: plugins/git volumes: - ${LOCAL_VOLUME}/develop:/drone/src/${REPO_URL}/${DRONE_REPO} when: branch: [ dev, develop ] busybox: image: busybox volumes: - ${LOCAL_VOLUME}/:${LOCAL_VOLUME} commands: - if [ ${DRONE_BRANCH} == master ]; then chown -R 33:33 ${LOCAL_VOLUME}/master ; fi - if [ ${DRONE_BRANCH} == release ]; then</description>
    </item>
    
    <item>
      <title>构建在Docker之上的开源持续集成平台(CI)：Drone</title>
      <link>/devops/drone/webfront/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/webfront/</guid>
      <description>https://github.com/nieweidong/fetool Drone 是一个构建在Docker之上的开源持续集成平台(CI)。Drone 提供了一组预建的Docker映像，支持12+种语言和几乎所有主要的数据</description>
    </item>
    
    <item>
      <title>深入理解dronefile</title>
      <link>/devops/drone/drone-dronefile/</link>
      <pubDate>Tue, 04 Oct 2016 04:15:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/drone/drone-dronefile/</guid>
      <description>深入理解dronefile 对于每个.drone.yml来说，pipeline的每个步骤经过drone解析后就对应一个dockerfile文件</description>
    </item>
    
  </channel>
</rss>