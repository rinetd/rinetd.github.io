<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>decode on 时光小栈</title>
    <link>/tags/decode/</link>
    <description>Recent content in decode on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 15 Mar 2018 17:35:07 +0800</lastBuildDate>
    
	<atom:link href="/tags/decode/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang Url Encode Decode</title>
      <link>/language/golang/go-net-url-encode-decode/</link>
      <pubDate>Thu, 15 Mar 2018 17:35:07 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/golang/go-net-url-encode-decode/</guid>
      <description>golang中使用url encoding遇到的小坑 https://stackoverflow.com/questions/13820280/encode-decode-urls Example: Turns &amp;quot;My String&amp;quot; to &amp;quot;My%20String&amp;quot; package urlencode import &amp;quot;net/url&amp;quot; // UrlEncoded encodes a string like Javascript&#39;s encodeURIComponent() func UrlEncoded(str string) (string, error) { u, err := url.Parse(str) if err != nil { return &amp;quot;&amp;quot;, err } return u.String(), nil } Go语</description>
    </item>
    
  </channel>
</rss>