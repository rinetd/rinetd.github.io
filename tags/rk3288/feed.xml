<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rk3288 on 时光小栈</title>
    <link>/tags/rk3288/</link>
    <description>Recent content in rk3288 on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 25 Aug 2019 18:23:00 +0800</lastBuildDate>
    
	<atom:link href="/tags/rk3288/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>rk3288 isp ov13850</title>
      <link>/hardware/rk3288/rk3288-isp-ov13850/</link>
      <pubDate>Sun, 25 Aug 2019 18:23:00 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-isp-ov13850/</guid>
      <description>How to Enable MIPI CSI Module http://www.t-firefly.com/doc/product/info/id/285.html 硬件接口原理图 http://dev.t-firefly.com/forum.php?mod=viewthread&amp;amp;tid=12798&amp;amp;highlight=ov13850 应用层 https://blog.csdn.net/huang_165/article/details/86130288 camera0: ov13850@10 { rockchip,pd-gpio = &amp;lt;&amp;amp;gpio2 14 GPIO_ACTIVE_LOW&amp;gt;; //pd rockchip,pwr-gpio = &amp;lt;&amp;amp;gpio3 10 GPIO_ACTIVE_HIGH&amp;gt;; // mipi-pwr rockchip,pwr-2nd-gpio = &amp;lt;&amp;amp;gpio7 12 GPIO_ACTIVE_HIGH&amp;gt;; //cif_pwr rockchip,rst-gpio = &amp;lt;&amp;amp;gpio3 8 GPIO_ACTIVE_LOW&amp;gt;; //mipi-rest } camera0: ov13850@10 { rockchip,pd-gpio = &amp;lt;&amp;amp;gpio2 12 GPIO_ACTIVE_LOW&amp;gt;; rockchip,pwr-gpio = &amp;lt;&amp;amp;gpio1 23 GPIO_ACTIVE_HIGH&amp;gt;; rockchip,pwr-2nd-gpio = &amp;lt;&amp;amp;gpio1 22 GPIO_ACTIVE_HIGH&amp;gt;; //cif_pwr rockchip,rst-gpio = &amp;lt;&amp;amp;gpio0</description>
    </item>
    
    <item>
      <title>rk3288和rk3399常见问题</title>
      <link>/hardware/rk3288/intro/</link>
      <pubDate>Fri, 02 Aug 2019 15:02:20 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/intro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>rk3288 gti2801s</title>
      <link>/hardware/rk3288/rk3288-gti2801s/</link>
      <pubDate>Sat, 27 Jul 2019 11:16:39 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-gti2801s/</guid>
      <description>SDK资料：https://pan.baidu.com/s/1Ih7G1UH74n4OXNCTqTOwbw 提取码:8fqd 模型例程：http</description>
    </item>
    
    <item>
      <title>rk3288 ec20</title>
      <link>/hardware/rk3288/rk3288-ec20/</link>
      <pubDate>Sat, 27 Jul 2019 09:46:01 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-ec20/</guid>
      <description>适用任何版本linux EC20/EC25通信模块的4G拨号适配， make menuconfig 配置： USB相关： \drivers\usb\serial\option.c [] Device Drivers → [*] USB Support → &amp;lt;*&amp;gt; USB Serial Converter support → [*] USB driver for GSM and CDMA modems PPP相</description>
    </item>
    
    <item>
      <title>go epoll</title>
      <link>/hardware/rk3288/go-epoll/</link>
      <pubDate>Thu, 16 May 2019 14:52:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-epoll/</guid>
      <description>Search · syscall.EpollEvent</description>
    </item>
    
    <item>
      <title>rk3288 ubuntu 固件管理</title>
      <link>/hardware/rk3288/ubuntu-intro/</link>
      <pubDate>Thu, 16 May 2019 14:52:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/ubuntu-intro/</guid>
      <description>1. 配置ssh sudo vi /etc/ssh/sshd_config &amp;quot;#PermitRootLogin prohibit-password&amp;quot; ==&amp;gt; PermitRootLogin yes passwd 2. 配置网卡 nmcli conn add type ethernet con-name &amp;quot;eth0-static&amp;quot; ifname eth0 autoconnect yes ip4 192.168.0.10/24 gw4 192.168.0.2 nmcli conn mod eth0-static ipv4.dns &amp;quot;223.5.5.5&amp;quot; systemctl daemon-reload &amp;amp;&amp;amp; systemctl restart network-manager 3. 配置wifiAP模式 (可跳过) nmcli con add con-name wifi type wifi</description>
    </item>
    
    <item>
      <title>rk3288 ubuntu 网卡管理</title>
      <link>/hardware/rk3288/ubuntu-nmcli/</link>
      <pubDate>Thu, 16 May 2019 14:52:59 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/ubuntu-nmcli/</guid>
      <description>NetworkManager设置 nmcli：命令行。这是最常用的工具。 nmtui：在shell终端开启文本图形界面。 Freedesktop applet：如GNO</description>
    </item>
    
    <item>
      <title>go leds</title>
      <link>/hardware/rk3288/go-leds/</link>
      <pubDate>Tue, 14 May 2019 18:06:02 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-leds/</guid>
      <description>AIO-3288J 开发板上有 2 个 LED 灯，如下表所示： LED GPIO ref. GPIO number Blue GPIO8_A1 257 Yellow GPIO8_A2 258 可通过使用 LED 设备子系统或者直接操作 GPIO 控制该 LED。 以设备的方式控制 LED 标准的 Linux 专门为 LED</description>
    </item>
    
    <item>
      <title>go build</title>
      <link>/hardware/rk3288/go-build/</link>
      <pubDate>Tue, 14 May 2019 08:34:09 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-build/</guid>
      <description>本文由 简悦 SimpRead 转码， 原文地址 https://blog.csdn.net/sanallen/article/details/82118952 参考文档 Go 语言官方编译指南 (需翻墙访问) GOOS=linux GOARCH=arm GOARM=6 go build -v GOARM=5: use software floating point; when CPU doesn’t have VFP co-processor GOARM=6: use VFPv1 only; default if cross compiling; usually ARM11 or better cores</description>
    </item>
    
    <item>
      <title>rk3288 gps</title>
      <link>/hardware/rk3288/rk3288-gps/</link>
      <pubDate>Sat, 11 May 2019 11:40:56 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-gps/</guid>
      <description>https://github.com/adrianmo/go-nmea GPS 通过 uart1 与 cpu 进行通讯 ，设备树打开 uart1，配置 gps 使能和复位引脚即可 。（默认GPS打开） /{ misc_control { status = &amp;quot;okay&amp;quot;; compatible = &amp;quot;rockchip&amp;quot;; pinctrl-names = &amp;quot;default&amp;quot;; pinctrl-0 = &amp;lt;&amp;amp;gps_en&amp;gt;, &amp;lt;gps_rst&amp;gt;; gps-en = &amp;lt;&amp;amp;gpio7 RK_PB7 GPIO_ACTIVE_LOW&amp;gt;; gps-rst = &amp;lt;&amp;amp;gpio7 RK_PA3</description>
    </item>
    
    <item>
      <title>rk3288 usart</title>
      <link>/hardware/rk3288/rk3288-usart/</link>
      <pubDate>Sat, 11 May 2019 11:40:56 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-usart/</guid>
      <description>http://wiki.t-firefly.com/zh_CN/AIO-3288J/started.html UART使用 — Firefly Wiki Firefly Ubuntu系统相关资源汇总--更新于10月20日 picocom 小编最近在使用的串口终端工具，非常省事情 安装：sudo apt-get install picocom 省事的</description>
    </item>
    
    <item>
      <title>rk3288 gpio</title>
      <link>/hardware/rk3288/rk3288-gpio/</link>
      <pubDate>Fri, 10 May 2019 11:02:06 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-gpio/</guid>
      <description>linux/gpio.txt 中文文档 write: /sys/class/gpio/export: device or resource busy kidoman/embd Configuration The RK3288 bank/bit notation for GPIOs must be formed as &amp;quot;GPIO_&amp;quot; RK3288 GIPIO 管脚计算公式: 32 x (gpio_bank) + gpio_bit - 8 Group GPIO0 only 24 gpios,So each GPIO Num subtracts 8. gpio_bank : cat /sys/kernel/debug/gpio GPIO0 0-23, platform/pinctrl, gpio0: gpiochip0 GPIO1 24-55, platform/pinctrl, gpio1: gpiochip24 GPIO2 56-87, platform/pinctrl, gpio2: gpiochip56 GPIO3</description>
    </item>
    
    <item>
      <title>rk3288 intro</title>
      <link>/hardware/rk3288/rk3288-intro/</link>
      <pubDate>Fri, 10 May 2019 08:26:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-intro/</guid>
      <description>Kris Fei&#39;s blog https://blog.csdn.net/kris_fei?t=1 RK3288笔记 rk3288 官方资料 1.刷写固件 拿到开发板后第一件事就是连接上HDMI和电源,启动系统. 自带的系统默认是Android,如果我</description>
    </item>
    
    <item>
      <title>rk3288 parameterfile分析</title>
      <link>/hardware/rk3288/rk3288-parameter/</link>
      <pubDate>Fri, 10 May 2019 08:26:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-parameter/</guid>
      <description>Platform: RK3399 OS: Android 6.0 Version: v2016.08 parameter 分析 常见问题 system 分区改为 ext3 后parameter 中 mtd 分区如何定义 系统固件变大backup 分区起始位置和大小变大系统异常 Parameter 最大为 6</description>
    </item>
    
    <item>
      <title>rk3288 ubuntu系统制作</title>
      <link>/hardware/rk3288/rk3288-ubuntu/</link>
      <pubDate>Fri, 10 May 2019 08:26:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-ubuntu/</guid>
      <description>https://blog.csdn.net/w401229755/article/details/53350010 设置启动时的默认 Target 开机进入命令行界面 对应 init3 sudo systemctl set-default multi-user.target 恢复开机进入图形界面 sudo systemctl set-default graphical.target 自动挂载/sdcard vi /etc/fstab /dev/mmcblk0 /sdcard vfat defaults,noatime 0 0 ubuntu 镜像制作 使能串口 ln -s</description>
    </item>
    
    <item>
      <title>rk3288 update</title>
      <link>/hardware/rk3288/rk3288-update/</link>
      <pubDate>Fri, 10 May 2019 08:26:16 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-update/</guid>
      <description>用到的文件 package-file 生成 uupdate.img update.img 1 Linux 打包工具 Linux 打包工具在 tools/linux/Linux_Pack_Firmware/rockdev 目录下。先修改 package-file 文件将需 要升级的 image 加入打包。注意路径是这里的路径是相对路径。 tools/linux/Linux_Pack_Firmware/rockdev/Image 会链接到根目录下</description>
    </item>
    
    <item>
      <title>go home</title>
      <link>/hardware/rk3288/go-home/</link>
      <pubDate>Thu, 09 May 2019 11:10:13 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-home/</guid>
      <description>智能家居项目 https://github.com/barnybug/gohome 阿里云物联网的golang版sdk https://github.com/billyplus/aliyuniot rk3288 Hardware Tinkerboard, RGB LED Matrix https://github.com/post-l/hw https://github.com/kidoman/embd/issues/30</description>
    </item>
    
    <item>
      <title>input getdevices</title>
      <link>/hardware/rk3288/input-getdevices/</link>
      <pubDate>Wed, 08 May 2019 17:40:07 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/input-getdevices/</guid>
      <description>type procDev struct { name, dev, event string keep bool } func getProcInputs() []procDev { f, err := os.Open(&amp;quot;/proc/bus/input/devices&amp;quot;) if err != nil { log.Fatalln(err) } scanner := bufio.NewScanner(f) var devs []procDev var d procDev for scanner.Scan() { line := scanner.Text() if len(line) == 0 { if d.keep { devs = append(devs, d) } d.keep = false continue } switch line[0] { case &#39;N&#39;: f1 := strings.Split(line, &amp;quot;=&amp;quot;) f2 := strings.</description>
    </item>
    
    <item>
      <title>i2c</title>
      <link>/hardware/rk3288/i2c/</link>
      <pubDate>Mon, 06 May 2019 18:17:26 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/i2c/</guid>
      <description>(使用Beaglebone Black的I2C（一） - Techfantastic - CSDN博客 linux 3.4 hisi i2c用户空间驱动/dev/i2c-0-文峰聊书斋-ChinaUn</description>
    </item>
    
    <item>
      <title>go mmap</title>
      <link>/hardware/rk3288/go-mmap/</link>
      <pubDate>Sun, 28 Apr 2019 08:47:46 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/go-mmap/</guid>
      <description>mmap函数_Linux C 中文函数手册_Linux编程_linux_操作系统__www.iteedu.com mmap是将一个文件或者其它对象</description>
    </item>
    
    <item>
      <title>rk3288 dts i2c4</title>
      <link>/hardware/rk3288/rk3288-dts-i2c4/</link>
      <pubDate>Sat, 27 Apr 2019 17:25:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/rk3288-dts-i2c4/</guid>
      <description>[RK3288]I2C地址的确定 重要 如何确定I2C设备地址 MPU6050 0x68 const mpu6050Address = 0x68 指南针芯片和加速度、角加速度芯片用到了I2C通信。其中I2C的从器件地</description>
    </item>
    
    <item>
      <title>dts</title>
      <link>/hardware/rk3288/dts/</link>
      <pubDate>Fri, 26 Apr 2019 15:46:21 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/hardware/rk3288/dts/</guid>
      <description>DTS即Device Tree Source 设备树源码, Device Tree是一种描述硬件的数据结构，它起源于 OpenFirmware (OF)。 [dts]Device Tree机制 - aaronGao - 博客园 Device Tree 详解 - 魅族内核团队</description>
    </item>
    
  </channel>
</rss>