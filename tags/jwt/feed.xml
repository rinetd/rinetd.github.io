<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jwt on 时光小栈</title>
    <link>/tags/jwt/</link>
    <description>Recent content in jwt on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 14 Mar 2018 14:14:00 +0800</lastBuildDate>
    
	<atom:link href="/tags/jwt/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JWT 参考文档</title>
      <link>/devops/oauth2/jwt-awesome/</link>
      <pubDate>Wed, 14 Mar 2018 14:14:00 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/oauth2/jwt-awesome/</guid>
      <description>JWT(Json Web Token) 登入換取 Access Token 請求 Header 夾帶 Authorization: JWT jwt 可以解決跨伺服器認證問題？每台伺服器只要用同樣的密鑰就可以校驗令牌，不需要從已創建的會話資料中認證你的登陸</description>
    </item>
    
    <item>
      <title>对比常用的认证机制Basic OAuth JWT</title>
      <link>/devops/oauth2/jwt/</link>
      <pubDate>Wed, 14 Mar 2018 14:14:00 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/oauth2/jwt/</guid>
      <description>理解jwt 几种常用的认证机制 HUGOMORE42 HTTP Basic Auth HTTP Basic Auth 在HTTP中，基本认证是一种用来允许Web浏览器或其他客户端程序在请求时提供用户名和口令形式的身份</description>
    </item>
    
    <item>
      <title>通过Golang深入理解JWT[JSON Web Token]</title>
      <link>/devops/oauth2/jwt-golang/</link>
      <pubDate>Wed, 14 Mar 2018 14:14:00 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/devops/oauth2/jwt-golang/</guid>
      <description>JWT是什么？ JWT是JSON Web Token的缩写，即JSON Web令牌。 JWT规范中对其所作的描述是： JSON Web令牌（JWT）是一种紧凑的、U</description>
    </item>
    
  </channel>
</rss>