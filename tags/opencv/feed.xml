<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>opencv on 时光小栈</title>
    <link>/tags/opencv/</link>
    <description>Recent content in opencv on 时光小栈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <managingEditor>rinetd@163.com (rinetd)</managingEditor>
    <webMaster>rinetd@163.com (rinetd)</webMaster>
    <copyright>Copyright (c) 2017. All rights reserved. (版权所有) &lt;a href=&#39;http://www.miitbeian.gov.cn/&#39;&gt;鲁ICP备17074587号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 05 Nov 2019 17:38:22 +0800</lastBuildDate>
    
	<atom:link href="/tags/opencv/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>opencv traffic sign detection</title>
      <link>/language/python/opencv/opencv-traffic-sign-detection/</link>
      <pubDate>Tue, 05 Nov 2019 17:38:22 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-traffic-sign-detection/</guid>
      <description>一次不太成功的项目实战：HOG特征+SVM实现交通标志的检测 - Meringue&#39;s Blog - CSDN博客 本文主要讲如何通过HOG特征和SVM分类器实现部分交通标志的</description>
    </item>
    
    <item>
      <title>opencv imgproc</title>
      <link>/language/python/opencv/opencv-imgproc/</link>
      <pubDate>Fri, 27 Sep 2019 18:00:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-imgproc/</guid>
      <description>[](#目录 &amp;quot;目录&amp;quot;)目录 平滑图像 / 模糊 腐蚀和膨胀 形态变化 ：开运算 、闭运算 、形态梯度、 顶帽 、黑帽 Hit-or-Miss 击中击不中 图像金字塔 二</description>
    </item>
    
    <item>
      <title>opencv Threshold</title>
      <link>/language/python/opencv/opencv-threshold/</link>
      <pubDate>Fri, 27 Sep 2019 16:51:50 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-threshold/</guid>
      <description>OpenCV阈值操作(Threshold，AdaptiveThreshold) - 疯狂的LittleBee的博客 - CSDN博客 def threshold(src, thresh, maxval, type, dst=None) th</description>
    </item>
    
    <item>
      <title>opencv inpaint</title>
      <link>/language/python/opencv/opencv-inpaint/</link>
      <pubDate>Fri, 27 Sep 2019 16:45:03 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-inpaint/</guid>
      <description>图像修复 import cv2 import numpy as np import os def deal(img_path,out_path,img_name): print(&amp;quot;deal&amp;quot;,img_path) img = cv2.imread(img_path) hight, width, depth = img.shape[0:3] # 图片二值化处理，把[240, 240, 240]~[255, 255, 255]以外的颜色变成0 thresh = cv2.inRange(img, np.array([0, 0, 130]), np.array([50, 50, 255])) # 创建形状和尺寸</description>
    </item>
    
    <item>
      <title>opencv</title>
      <link>/language/python/opencv/opencv/</link>
      <pubDate>Fri, 27 Sep 2019 14:54:57 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv/</guid>
      <description>arch=$(uname -m) if [ &amp;quot;$arch&amp;quot; == &amp;quot;i686&amp;quot; -o &amp;quot;$arch&amp;quot; == &amp;quot;i386&amp;quot; -o &amp;quot;$arch&amp;quot; == &amp;quot;i486&amp;quot; -o &amp;quot;$arch&amp;quot; == &amp;quot;i586&amp;quot; ]; then flag=1 else flag=0 fi echo &amp;quot;Installing OpenCV 3.0.0&amp;quot; mkdir OpenCV cd OpenCV echo &amp;quot;Removing any pre-installed ffmpeg and x264&amp;quot; sudo apt-get -y remove ffmpeg x264 libx264-dev echo &amp;quot;Installing Dependenices&amp;quot; sudo apt-get -y install libopencv-dev sudo apt-get -y install build-essential checkinstall cmake pkg-config yasm sudo apt-get -y install libjpeg-dev libjasper-dev</description>
    </item>
    
    <item>
      <title>opencv 图像的腐蚀(erode)和膨胀(dilate) 开运算以及闭运算</title>
      <link>/language/python/opencv/opencv-erode-dilate/</link>
      <pubDate>Fri, 27 Sep 2019 14:22:55 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-erode-dilate/</guid>
      <description>OpenCV---开闭操作 - 山上有风景 - 博客园 腐蚀 ： 腐蚀操作会把前景物体的边缘腐蚀掉。原理是卷积核沿着图像滑动，如果与卷积核对应的原图像像素</description>
    </item>
    
    <item>
      <title>opencv findContours</title>
      <link>/language/python/opencv/opencv-findcontours/</link>
      <pubDate>Fri, 27 Sep 2019 09:43:24 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-findcontours/</guid>
      <description>OpenCV中几何形状识别与测量-流浪的鱼-51CTO博客 import cv2 im = cv2.imread(&#39;star.png&#39;) im = im.copy() gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY) ret, binary = cv2.threshold(gray, 127, 255, cv2.THRESH_BINARY) # 寻找轮廓 contours, hierarchy = cv2.findContours(binary, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE) # 获取第一个矩形框的尺</description>
    </item>
    
    <item>
      <title>opencv inrange</title>
      <link>/language/python/opencv/opencv-inrange/</link>
      <pubDate>Fri, 27 Sep 2019 08:34:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-inrange/</guid>
      <description>OpenCV中的inRange()函数可实现二值化功能（这点类似threshold()函数），更关键的是可以同时针对多通道进行操作，使用起来</description>
    </item>
    
    <item>
      <title>opencv detected_edges</title>
      <link>/language/python/opencv/opencv-detected_edges/</link>
      <pubDate>Thu, 26 Sep 2019 14:01:58 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/opencv-detected_edges/</guid>
      <description>轮廓检测 OpenCV中几何形状识别与测量-流浪的鱼-51CTO博客 计算极值 pentagram = contours[1] #第二条轮廓是五角星 leftmost = tuple(pentagram[:,0][pentagram[:,:,0].argmin()]) rightmost = tuple(pentagram[:,0][pentagram[:,:,0].argmin()]) cv2.circle(img, leftmost, 2, (0,255,0),3) cv2.circle(img, rightmost, 2, (0,0,255),3) 获取标记图片</description>
    </item>
    
    <item>
      <title>python HSV</title>
      <link>/language/python/opencv/python-hsv/</link>
      <pubDate>Thu, 26 Sep 2019 13:57:06 +0800</pubDate>
      <author>rinetd@163.com (rinetd)</author>
      <guid>/language/python/opencv/python-hsv/</guid>
      <description>opencv中的HSV空间取值范围： H 0~180，S 0~255，V 0~255； Android中的HSV空间取值范围： H 0~360，S 0~1，</description>
    </item>
    
  </channel>
</rss>